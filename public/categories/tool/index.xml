<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tool on OpenMicroLab</title><link>https://openmicrolab.com/categories/tool/</link><description>Recent content in Tool on OpenMicroLab</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Fri, 16 Nov 2018 02:39:28 +0000</lastBuildDate><atom:link href="https://openmicrolab.com/categories/tool/index.xml" rel="self" type="application/rss+xml"/><item><title>HW 디자인 무료 툴</title><link>https://openmicrolab.com/hw-%EB%94%94%EC%9E%90%EC%9D%B8-%EB%AC%B4%EB%A3%8C-%ED%88%B4/</link><pubDate>Fri, 16 Nov 2018 02:39:28 +0000</pubDate><guid>https://openmicrolab.com/hw-%EB%94%94%EC%9E%90%EC%9D%B8-%EB%AC%B4%EB%A3%8C-%ED%88%B4/</guid><description>
&lt;h3 id="rf-디자인">RF 디자인&lt;/h3>
&lt;p>AppCad – 다음과 같은 기능을 제공한다.&lt;/p>
&lt;ul>
&lt;li>S-Parameter Analysis and Plotting&lt;/li>
&lt;li>Active Circuit Bias Design&lt;/li>
&lt;li>Cascade Noise and IP3 Analysis&lt;/li>
&lt;li>Transmission Line Analysis&lt;/li>
&lt;li>Signals and Systems&lt;/li>
&lt;li>Complex Math Engineering Calculator&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://www.broadcom.com/appcad" target="_blank" rel="noopener noreferrer">&lt;a href="https://www.broadcom.com/appcad">https://www.broadcom.com/appcad&lt;/a>&lt;/a>&lt;/p>
&lt;h3 id="pcb-선폭-계산-8211trace-width-calculator">PCB 선폭 계산 – Trace Width Calculator&lt;/h3>
&lt;p>&lt;a href="https://www.4pcb.com/trace-width-calculator.html" target="_blank" rel="noopener noreferrer">&lt;a href="https://www.4pcb.com/trace-width-calculator.html">https://www.4pcb.com/trace-width-calculator.html&lt;/a>&lt;/a>&lt;/p>
&lt;p> &lt;/p></description></item><item><title>Visual Programming Tool</title><link>https://openmicrolab.com/visual-programming-tool/</link><pubDate>Tue, 14 Aug 2018 02:31:26 +0000</pubDate><guid>https://openmicrolab.com/visual-programming-tool/</guid><description>
&lt;ul>
&lt;li>**&lt;a href="https://www.wia.io/" target="_blank" rel="nofollow noopener noreferrer">Wia&lt;/a> **&lt;/li>
&lt;li>&lt;strong>&lt;a href="https://nodered.org/" target="_blank" rel="nofollow noopener noreferrer">Node-RED&lt;/a>&lt;/strong>&lt;/li>
&lt;li>&lt;strong>&lt;a href="https://xod.io/" target="_blank" rel="nofollow noopener noreferrer">XOD&lt;/a>&lt;/strong>&lt;/li>
&lt;li>&lt;a href="https://www.wyliodrin.com/" target="_blank" rel="nofollow noopener noreferrer">Wyliodrin&lt;/a> – for Raspberry Pi&lt;/li>
&lt;li>Modkit&lt;/li>
&lt;li>&lt;a href="http://blog.ardublock.com/" target="_blank" rel="nofollow noopener noreferrer">Ardublock&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.zenodys.com/" target="_blank" rel="nofollow noopener noreferrer">Zenodys&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.grasp.io/" target="_blank" rel="noopener noreferrer">GraspIO&lt;/a> – India company, for Raspberry Pi&lt;/li>
&lt;/ul></description></item><item><title>V-USB</title><link>https://openmicrolab.com/v-usb/</link><pubDate>Mon, 30 Jul 2018 02:58:35 +0000</pubDate><guid>https://openmicrolab.com/v-usb/</guid><description>
&lt;img loading="lazy" class="" src="https://www.obdev.at/Images/vusb/vusb-teaser@2x.png" width="357" height="230" />
&lt;blockquote>
&lt;p>V-USB is a software-only implementation of a low-speed USB device for &lt;a href="http://www.atmel.com/" target="_blank" rel="noopener noreferrer">Atmel’s&lt;/a> AVR® microcontrollers, making it possible to build USB hardware with almost any AVR® microcontroller, not requiring any additional chip.&lt;/p>&lt;/blockquote>
&lt;p>위 설명처럼USB하드웨어가 없는 AVR에서 USB를 소프트웨어로 구현하는 코드. V는 Virtual 인듯&lt;/p>
&lt;p>&lt;a href="https://cortexprog.com/" target="_blank" rel="noopener noreferrer">&lt;a href="https://cortexprog.com/">https://cortexprog.com/&lt;/a>&lt;/a> 이런 프로젝트도 있다.&lt;/p></description></item><item><title>EagleCAD 이전 버전 다운로드</title><link>https://openmicrolab.com/eaglecad-%EC%9D%B4%EC%A0%84-%EB%B2%84%EC%A0%84-%EB%8B%A4%EC%9A%B4%EB%A1%9C%EB%93%9C/</link><pubDate>Tue, 29 May 2018 04:33:33 +0000</pubDate><guid>https://openmicrolab.com/eaglecad-%EC%9D%B4%EC%A0%84-%EB%B2%84%EC%A0%84-%EB%8B%A4%EC%9A%B4%EB%A1%9C%EB%93%9C/</guid><description>
&lt;p>한번에 찾기 힘들어서…&lt;/p>
&lt;p>&lt;a href="http://eagle.autodesk.com/eagle/software-versions" target="_blank" rel="noopener noreferrer">&lt;a href="http://eagle.autodesk.com/eagle/software-versions">http://eagle.autodesk.com/eagle/software-versions&lt;/a>&lt;/a>&lt;/p></description></item><item><title>ST-LINK 펌웨어 업데이트</title><link>https://openmicrolab.com/st-link-%ED%8E%8C%EC%9B%A8%EC%96%B4-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8/</link><pubDate>Tue, 24 Apr 2018 09:05:13 +0000</pubDate><guid>https://openmicrolab.com/st-link-%ED%8E%8C%EC%9B%A8%EC%96%B4-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8/</guid><description>
&lt;p>ST-LINK 펌웨어 업데이트를 위한 &lt;a href="http://www.st.com/en/development-tools/stsw-link009.html" target="_blank" rel="noopener noreferrer">프로그램&lt;/a> : 맥용 프로그램도 제공&lt;/p>
&lt;img loading="lazy" class="alignnone wp-image-4285" src="https://res.cloudinary.com/openmicrolab/image/upload/v1524560453/stlink_ap0o1r.png" width="872" height="278" /></description></item><item><title>Node-RED 사용하기</title><link>https://openmicrolab.com/node-red-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link><pubDate>Sat, 17 Mar 2018 09:12:00 +0000</pubDate><guid>https://openmicrolab.com/node-red-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid><description>
&lt;p>Node-RED를 사용하려면 먼저 Node.js 를 설치해야 한다.&lt;/p>
&lt;h3 id="nodejs-nodejs-lts-8x-설치">Node.js (Node.js LTS 8.x) 설치&lt;/h3>
&lt;blockquote>
&lt;p>&lt;a href="https://nodejs.org/en/#download" target="_blank" rel="noopener noreferrer">&lt;a href="https://nodejs.org/en/#download">https://nodejs.org/en/#download&lt;/a>&lt;/a> 여기서 설치파일을 다운로드해서 설치한다.&lt;/p>
&lt;p>터미널에서 node -v로 버전이 v8.10.0인지 확인한다.&lt;/p>&lt;/blockquote>
&lt;h3 id="node-red-설치">Node-RED 설치&lt;/h3>
&lt;blockquote>
&lt;p>sudo npm install -g –unsafe-perm node-red&lt;/p>&lt;/blockquote>
&lt;h3 id="node-red-실행">Node-RED 실행&lt;/h3>
&lt;p>커맨드라인에 node-red를 입력하여 실행후 브라우저에서 http://localhost:1880/ 를 입력하면 Node-Red 에디터가 뜬다.&lt;/p>
&lt;img loading="lazy" class="alignnone wp-image-4248" src="https://res.cloudinary.com/openmicrolab/image/upload/v1521277859/node-red_vphcae.png" width="847" height="450" />
&lt;p>&lt;a href="https://nodered.org/docs/getting-started/first-flow" target="_blank" rel="noopener noreferrer">첫번째 간단한 예제&lt;/a>&lt;/p></description></item><item><title>System Workbench for STM32</title><link>https://openmicrolab.com/system-workbench-stm32/</link><pubDate>Thu, 01 Mar 2018 09:04:19 +0000</pubDate><guid>https://openmicrolab.com/system-workbench-stm32/</guid><description>
&lt;p>System Workbench for STM32를 설치하는 방법은 2가지이다. 인스톨 프로그램으로 설치하는 방법과 기존에 설치되어 있는 이클립스에 설치하는 방법이 있다.&lt;/p>
&lt;h3 id="인스톨-프로그램">&lt;strong>인스톨 프로그램&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>System Workbench for STM32를 &lt;a href="http://www.openstm32.org/Downloading%2Bthe%2BSystem%2BWorkbench%2Bfor%2BSTM32%2Binstaller" target="_blank" rel="noopener noreferrer">링크&lt;/a>에서 다운로드 한다.&lt;/li>
&lt;li>다운로드 받은 바이너리 파일의  퍼미션을 수정후 파일을 실행한다.&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>chmod 755 install_sw4stm32.run then ./install_sw4stm32.run&lt;/p>&lt;/blockquote>
&lt;img loading="lazy" class="alignnone wp-image-4222" src="https://res.cloudinary.com/openmicrolab/image/upload/v1519891095/System_Workbench_for_STM32_wlfr7n.png" width="568" height="431" />
&lt;p>문제는 이렇게 설치를 하다가 다음과 같은 에러메시지가 나오고 더 이상 진행이 되지 않는다.&lt;/p>
&lt;img loading="lazy" class="alignnone wp-image-4224" src="https://res.cloudinary.com/openmicrolab/image/upload/v1519892823/error_nqiihq.png" width="765" height="132" />
&lt;h3 id="이클립스에서-추가하는-방법">&lt;strong>이클립스에서 추가하는 방법&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>이클립스에서“Help &amp;raquo; Install New Software”를 선택&lt;/li>
&lt;li>&lt;a href="http://ac6-tools.com/Eclipse-updates/org.openstm32.system-workbench.update-site-v2">http://ac6-tools.com/Eclipse-updates/org.openstm32.system-workbench.update-site-v2&lt;/a>를 입력하고, 이름은 System Workbench for STM32 – Bare Machine edition으로 한다.&lt;/li>
&lt;/ul>
&lt;img loading="lazy" class="alignnone wp-image-4230" src="https://openmicrolab.com/images/2021/03/install_bo1tqe-1.png" width="633" height="511" />
&lt;ul>
&lt;li>인스톨 전에 다음과 같이 맥의 게이트키퍼를 disable후 설치를 하고, 설치후 enable한다.&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>#To disable&lt;br>
sudo spctl –master-disable&lt;br>
#To enable&lt;br>
sudo spctl –master-enable&lt;/p></description></item><item><title>BBC Microbit 오프라인에서 사용하기</title><link>https://openmicrolab.com/bbc-microbit-%EC%98%A4%ED%94%84%EB%9D%BC%EC%9D%B8%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link><pubDate>Fri, 16 Sep 2016 09:43:18 +0000</pubDate><guid>https://openmicrolab.com/bbc-microbit-%EC%98%A4%ED%94%84%EB%9D%BC%EC%9D%B8%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid><description>
&lt;p>BBC microbit를 오프라인에서 사용하려면 &lt;a href="http://yottadocs.mbed.com/#installing" target="_blank">링크&lt;/a>를 참고 하고 Manuall Installation 항목을 따라서 환경을 셋업한다.&lt;/p>
&lt;p>&lt;strong>1. yotta설치&lt;/strong>&lt;/p>
&lt;p>Mac OS의 경우&lt;/p>
&lt;blockquote>
&lt;p>brew tap ARMmbed/homebrew-formulae&lt;br>
brew install python cmake ninja arm-none-eabi-gcc&lt;br>
pip install yotta&lt;/p>&lt;/blockquote>
&lt;p>&lt;strong>Trouble shooting&lt;/strong>&lt;br>
brew 관련 아래과 같은 문제가 있을 경우&lt;/p>
&lt;blockquote>
&lt;p>sudo chown -R $(whoami):admin /usr/local&lt;br>
cd $(brew –prefix) &amp;amp;&amp;amp; git fetch origin &amp;amp;&amp;amp; git reset –hard origin/master&lt;/p>&lt;/blockquote>
&lt;p>&lt;strong>터미널에서 다음과 같은 에러메시지가 나올때&lt;/strong>&lt;br>
error: connection error: (“bad handshake: Error([(‘SSL routines’, ‘ssl3_get_server_certificate’, ‘certificate verify failed’)],)”,)&lt;/p></description></item><item><title>맥 OS에서 AVR 툴 체인 설치</title><link>https://openmicrolab.com/%EB%A7%A5-os%EC%97%90%EC%84%9C-avr-%ED%88%B4-%EC%B2%B4%EC%9D%B8-%EC%84%A4%EC%B9%98/</link><pubDate>Tue, 13 Sep 2016 06:56:05 +0000</pubDate><guid>https://openmicrolab.com/%EB%A7%A5-os%EC%97%90%EC%84%9C-avr-%ED%88%B4-%EC%B2%B4%EC%9D%B8-%EC%84%A4%EC%B9%98/</guid><description>
&lt;p>ruby -e “$(curl -fsSL &lt;a href="https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;amp;#8221;">https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;amp;#8221;&lt;/a>&lt;br>
brew tap osx-cross/avr&lt;br>
brew install avr-gcc&lt;br>
brew install avrdude –with-usb&lt;/p>
&lt;p>참고&lt;/p>
&lt;p>– &lt;a href="https://github.com/osx-cross/homebrew-avr">https://github.com/osx-cross/homebrew-avr &lt;/a>&lt;/p>
&lt;p>– &lt;a href="http://maxembedded.com/2015/06/setting-up-avr-gcc-toolchain-on-linux-and-mac-os-x/" target="_blank" rel="noopener">&lt;a href="http://maxembedded.com/2015/06/setting-up-avr-gcc-toolchain-on-linux-and-mac-os-x/">http://maxembedded.com/2015/06/setting-up-avr-gcc-toolchain-on-linux-and-mac-os-x/&lt;/a>&lt;/a>&lt;/p></description></item><item><title>CoolTerm에 custom baudrate 추가하는 법</title><link>https://openmicrolab.com/coolterm%EC%97%90-custom-baudrate-%EC%B6%94%EA%B0%80%ED%95%98%EB%8A%94-%EB%B2%95/</link><pubDate>Tue, 12 Jan 2016 07:09:46 +0000</pubDate><guid>https://openmicrolab.com/coolterm%EC%97%90-custom-baudrate-%EC%B6%94%EA%B0%80%ED%95%98%EB%8A%94-%EB%B2%95/</guid><description>
&lt;p>Mac OS X에서 유일하게 사용하고 있는 시리얼 터미널 프로그램인 &lt;a href="http://freeware.the-meiers.org/" target="_blank">CoolTerm&lt;/a>은 무료인데다가 웬만한 기능은 다있어서 개발할때 주로 사용을 한다. 그런데 일반적인 baudrate가 아닌 경우에 코드를 수정해서 테스트를 했는데 그럴 필요가 없다. 왜냐면 CoolTerm이 custom baudrate를 지원한다.&lt;/p>
&lt;h3 id="coolterm에-custom-baudrate-추가하는-법">&lt;strong>CoolTerm에 custom baudrate 추가하는 법&lt;/strong>&lt;/h3>
&lt;p>CoolTerm이 설치되어 있는 폴더에 &lt;strong>baudrates.ini&lt;/strong>파일을 하나 만들고 필요한 baudrate를 입력한다. 즉 다음과 같이 입력을 하면, 기존에 설정된 baudrate에 추가로 입력된 baudrate가 생성이 된다.&lt;/p>
&lt;blockquote>
&lt;p>100&lt;br>
110&lt;br>
150&lt;br>
128000&lt;br>
153600&lt;br>
256000&lt;br>
460800&lt;br>
921600&lt;/p></description></item><item><title>AVR studio 4.19 &amp; AVR Toolchain</title><link>https://openmicrolab.com/avr-studio-4-19-avr-toolchain/</link><pubDate>Wed, 30 Sep 2015 07:56:55 +0000</pubDate><guid>https://openmicrolab.com/avr-studio-4-19-avr-toolchain/</guid><description>
&lt;p>윈도우즈 날렸을때 툴들을 다시 설치할 필요가 있다. AVR Studio6는 너무 무거워서 프로그래밍을 위해서는 4.19가 더 좋다. 가끔 사용하는 것들이지만…&lt;/p>
&lt;p>AVR studio 4.19&lt;br>
&lt;a href="http://www.atmel.com/dyn/resources/prod_documents/AvrStudio4Setup.exe?doc_id=13463&amp;family_id=607" target="_blank" rel="noopener noreferrer">AVR Studio 4.19 (build 730)&lt;/a>&lt;/p>
&lt;p>AVR Toolchain 3.3.0 Installer&lt;br>
&lt;a href="http://www.atmel.com/dyn/resources/prod_documents/avr-toolchain-installer-3.3.0.710-win32.win32.x86.exe?doc_id=13464&amp;family_id=607" target="_blank" rel="noopener noreferrer">AVR Toolchain 3.3.0 Installer &lt;/a>&lt;/p></description></item><item><title>Allegro PCB에서 DXF파일 만드는 법</title><link>https://openmicrolab.com/allegro-pcb%EC%97%90%EC%84%9C-dxf%ED%8C%8C%EC%9D%BC-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B2%95/</link><pubDate>Tue, 24 Mar 2015 11:12:08 +0000</pubDate><guid>https://openmicrolab.com/allegro-pcb%EC%97%90%EC%84%9C-dxf%ED%8C%8C%EC%9D%BC-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B2%95/</guid><description>
&lt;p>Allegro PCB에서 DXF파일 만드는 법은 다음과 같다.&lt;/p>
&lt;ol>
&lt;li>보드파일 brd를 연다.&lt;/li>
&lt;li>File &amp;gt; Export -&amp;gt; Select dxf를 선택&lt;/li>
&lt;li>Layer Conversion File에서 임의의 이름을 지정한다. ex) name.cnv&lt;/li>
&lt;li>Dxf output 파일에는 변환할 파일의 이름&lt;/li>
&lt;li>Layer Conversion File에서 Edit 을 클릭하고 dxf로 변환하기를 원하는 항목만 체크한다.&lt;/li>
&lt;li>&lt;strong>중요한 것은 아래 그림과 같이 새로운 DXF Layer를 만들고 DXF layer에 이것을 지정한다.&lt;/strong>&lt;/li>
&lt;/ol>
&lt;img loading="lazy" class="alignnone" src="http://openmicrolab.cdn2.cafe24.com/allegro_dxf.png" alt="" width="1350" height="735" /></description></item><item><title>Dfu-util – Device Firmware Upgrade Utilities</title><link>https://openmicrolab.com/dfu-util-device-firmware-upgrade-utilities/</link><pubDate>Fri, 23 Jan 2015 06:18:02 +0000</pubDate><guid>https://openmicrolab.com/dfu-util-device-firmware-upgrade-utilities/</guid><description>
&lt;p>USB 인터페이스를 가지는 디바이스의 firmware를 업데이트 하는 툴&lt;/p>
&lt;h3 id="supported-devices">Supported Devices&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="http://wiki.openmoko.org/wiki/Neo_1973">Openmoko Neo1973&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://wiki.openmoko.org/wiki/Neo_FreeRunner">Openmoko Freerunner&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://leaflabs.com/Maple">Leaflabs Maple&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.openpcd.org/">OpenPCD and OpenPICC&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://downloads.qi-hardware.com/people/werner/wpan/web/">Qi Hardware ATUSB&lt;/a> (use dfu-util 0.7)&lt;/li>
&lt;li>&lt;a href="http://bb.osmocom.org/trac/wiki/SIMtrace">Osmocom SIMtrace&lt;/a>&lt;/li>
&lt;li>Many devices using the &lt;a href="http://dfu-util.sourceforge.net/dfuse.html">DfuSe DFU extension&lt;/a> from ST, for instance:
&lt;ul>
&lt;li>&lt;a href="http://www.seeedstudio.com/depot/micro-digital-storage-oscilloscopedso-nano-p-512.html">DSO nano&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.spark.io/">Spark Core&lt;/a>&lt;/li>
&lt;li>STM32F2/F3/F4 built-in bootloader&lt;/li>
&lt;li>Some STR750-based devices, e.g. USB2CAN&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>맥에서는 Homebrew를 사용해서 다음과 같이 설치한다.&lt;/p>
&lt;blockquote>
&lt;p>“brew install dfu-util”&lt;/p>&lt;/blockquote>
&lt;p>참고: &lt;a href="http://dfu-util.sourceforge.net/" target="_blank">&lt;a href="http://dfu-util.sourceforge.net/">http://dfu-util.sourceforge.net/&lt;/a>&lt;/a>&lt;/p></description></item><item><title>아두이노 &amp; 이클립스 (Arduino &amp; Eclipse)</title><link>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8-%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4-arduino-eclipse/</link><pubDate>Tue, 25 Nov 2014 06:07:29 +0000</pubDate><guid>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8-%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4-arduino-eclipse/</guid><description>
&lt;p>지난번 포스팅 &lt;a href="http://openmicrolab.com/%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4eclipse%EC%97%90%EC%84%9C-%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8arduino%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/" target="_blank">‘이클립스(Eclipse)에서 아두이노(Arduino)사용하기’&lt;/a> 은 이클립스에서 플러그인을 설치해서 아두이노를 사용하는 것이었다. 하지만 아두이노는 command line에서 컴파일을 지원하므로 이런 플러그인 없이도 make 파일의 위치, 컴파일러 정보등만 이클립스에 설정하면 사용이 가능하다.&lt;/p>
&lt;h3 id="1-프로젝트-만들기">1. 프로젝트 만들기&lt;/h3>
&lt;p>File &amp;gt; New &amp;gt; Makefile Project with Existing Code를 선택후 Project Name을 설정하고 Existing Code Location을 설정한다.&lt;/p>
&lt;h3 id="2-project-properties">2. Project Properties&lt;/h3>
&lt;p>C/C++ Build항목에서 Build location의 Build directoty 설정은 makefile이 있는 위치를 지정한다.&lt;/p>
&lt;p>C/C++ General 항목의 Path and Symbols에서 Include할 폴더들을 입력하고  Symbol에도 미리 정의돼야 할 심볼을 입력한다.&lt;/p></description></item><item><title>윈도우 환경에서의 오픈소스 프로그래밍 툴 설치</title><link>https://openmicrolab.com/%EC%9C%88%EB%8F%84%EC%9A%B0-%ED%99%98%EA%B2%BD%EC%97%90%EC%84%9C%EC%9D%98-%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%ED%88%B4-%EC%84%A4%EC%B9%98/</link><pubDate>Fri, 22 Aug 2014 04:02:24 +0000</pubDate><guid>https://openmicrolab.com/%EC%9C%88%EB%8F%84%EC%9A%B0-%ED%99%98%EA%B2%BD%EC%97%90%EC%84%9C%EC%9D%98-%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%ED%88%B4-%EC%84%A4%EC%B9%98/</guid><description>
&lt;p>원래 맥(Mac)을 사용하기 때문에 윈도우즈는 은행업무를 할때나 HWP 파일을 작성할때 빼고는 사용하지 않는다. 그런데 배포할 프로그램이 3가지 OS (Mac, Linux, Win)인지라 윈도우 환경에서도 개발툴의 설치가 필요하다. 사실 코드의 수정 보다도 이런 작업이 더 어려울 수 있는데, &lt;a href="https://en.wikipedia.org/wiki/Software_deployment" target="_blank">software deployment&lt;/a>(한글로는 뭔지 잘….)를 위해서는 필요한 작업이고……..&lt;/p>
&lt;p>내용은 윈도우환경에서 리눅스 개발환경 설치하기 정도가 될 것 같다. 리눅스 버젼의 배포판을 위해 가상머신에 우분투도 설치해서 설치패키지를 만들어 봤는데, 생각보다 깔끔하고 문제 없이 동작한다. 개발용이 아닌 한글을 사용한 워드, PPT작업등의 일반 업무 사용을 위해서는 어떨지 살짝 궁금하기도 했다는…&lt;/p></description></item><item><title>vi vim 단축키 모음</title><link>https://openmicrolab.com/vi-vim-%EB%8B%A8%EC%B6%95%ED%82%A4-%EB%AA%A8%EC%9D%8C/</link><pubDate>Wed, 20 Aug 2014 03:33:29 +0000</pubDate><guid>https://openmicrolab.com/vi-vim-%EB%8B%A8%EC%B6%95%ED%82%A4-%EB%AA%A8%EC%9D%8C/</guid><description>
&lt;img loading="lazy" class="alignnone" alt="" src="http://openmicrolab.cdn2.cafe24.com/vi-vim-cheat-sheet-ko.png" width="1021" height="721" />
출처: &lt;a href="https://kldp.org/node/102947" target="_blank">https://kldp.org/node/102947&lt;/a></description></item><item><title>Xcode, Pip, Virtualenv, VirtualenvWrapper 설치하기</title><link>https://openmicrolab.com/xcode-pip-virtualenv-virtualenvwrapper-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/</link><pubDate>Wed, 20 Aug 2014 02:39:34 +0000</pubDate><guid>https://openmicrolab.com/xcode-pip-virtualenv-virtualenvwrapper-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/</guid><description>
&lt;h3 id="xcode">Xcode&lt;/h3>
&lt;p>Xcode와 Xcode command line tool은 Mac에서 개발을 하려면 필요한 툴.  App Store에서 다운로드해서 설치한다. Xcode의 설치여부를 확인하는 방법&lt;/p>
&lt;pre>$ xcode-select -p&lt;/pre>
&lt;p>설치가 되어있으면  다음과 같이 표시가 된다.&lt;/p>
&lt;pre>/Applications/Xcode.app/Contents/Developer&lt;/pre>
&lt;p>Command line tool은 다음과 같이 해서 설치를 하는데,  /Library/Developer/CommandLineTool/ 위치에 설치가 된다.&lt;/p>
&lt;pre>xcode-select —install
&lt;/pre>
&lt;p>gcc의 버젼 확인&lt;/p>
&lt;pre>$ gcc --version
Python deployment를 위한 툴인 pip, virtualenv, virtualwrapper의 설치&lt;/pre>
&lt;h3 id="a-hrefhttpspypipythonorgpypipip-target_blankpipa">&lt;a href="https://pypi.python.org/pypi/pip" target="_blank">Pip&lt;/a>&lt;/h3>
&lt;pre>sudo easy_install pip&lt;/pre>
&lt;h3 id="a-hrefhttpspypipythonorgpypivirtualenv-target_blankvitualenva">&lt;a href="https://pypi.python.org/pypi/virtualenv" target="_blank">Vitualenv&lt;/a>&lt;/h3>
&lt;pre>sudo pip install virtualenv&lt;/pre>
&lt;h3 id="a-hrefhttpsbitbucketorgdhellmannvirtualenvwrapper-target_blankvitualenvwrappera">&lt;a href="https://bitbucket.org/dhellmann/virtualenvwrapper" target="_blank">VitualenvWrapper&lt;/a>&lt;/h3>
&lt;pre>sudo pip install virtualenvwrapper&lt;/pre>
&lt;p>.virtualenvs 폴더를 만든다.&lt;/p></description></item><item><title>맥용 wxPython 설치시 에러</title><link>https://openmicrolab.com/%EB%A7%A5%EC%9A%A9-wxpython-%EC%84%A4%EC%B9%98%EC%8B%9C-%EC%97%90%EB%9F%AC/</link><pubDate>Wed, 20 Aug 2014 01:46:43 +0000</pubDate><guid>https://openmicrolab.com/%EB%A7%A5%EC%9A%A9-wxpython-%EC%84%A4%EC%B9%98%EC%8B%9C-%EC%97%90%EB%9F%AC/</guid><description>
&lt;p>wxPython은 다음 링크에서 다운로드를 받는다.  &lt;a href="http://www.wxpython.org/download.php" target="_blank">&lt;a href="http://www.wxpython.org/download.php">http://www.wxpython.org/download.php&lt;/a>&lt;/a>&lt;/p>
&lt;p>맥용 패키지를 다운로드 받으면 다음과 같은 에러메세지가 뜨는데, 이것은 패키지가 사인이 안돼있어서 (old-style package) 그렇다.&lt;/p>
&lt;img loading="lazy" class="alignnone" alt="" src="http://openmicrolab.cdn2.cafe24.com/package_error2.png" width="419" height="201" />
&lt;p>해결 방안은 **“시스템 환경설정 &amp;raquo; 보안 및 개인 정보 &amp;raquo; 일반”**에서 **&lt;span style="text-decoration: underline;">모든 곳에서 다운로드한 App 허용을 선택&lt;/span>**하면 된다.&lt;/p></description></item><item><title>이클립스(Eclipse)에서 아두이노(Arduino)사용하기</title><link>https://openmicrolab.com/%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4eclipse%EC%97%90%EC%84%9C-%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8arduino%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link><pubDate>Tue, 12 Aug 2014 03:08:15 +0000</pubDate><guid>https://openmicrolab.com/%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4eclipse%EC%97%90%EC%84%9C-%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8arduino%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid><description>
&lt;h3 id="이클립스-개발환경에서-아두이노사용하기">이클립스 개발환경에서 아두이노사용하기&lt;/h3>
&lt;ol>
&lt;li>이클립스(Eclipse) 설치 &lt;a href="http://www.eclipse.org/downloads/" target="_blank">&lt;a href="http://www.eclipse.org/downloads/">http://www.eclipse.org/downloads/&lt;/a>&lt;/a> &lt;strong>Eclipse IDE for C/C++ Developers&lt;/strong> 를 설치&lt;/li>
&lt;li>아두이노 이클립스 플러그인:  &lt;a href="http://www.baeyens.it/eclipse/" target="_blank">저작자의 홈페이지&lt;/a> – &lt;a href="http://www.baeyens.it/eclipse/installAdvice.shtml" target="_blank">Installation advice&lt;/a>, 가 있으니 참고. 플러그인 설치는 이클립스를 실행후 **Help &amp;raquo; Install New Software…**를 실행후 “&lt;strong>&lt;a href="http://www.baeyens.it/eclipse/update">http://www.baeyens.it/eclipse/update&lt;/a>&lt;/strong>” 주소를 입력하고 Add 버튼을 누른다. 그러면 &lt;strong>Arduino Eclipse extensions&lt;/strong> 이 나타나는데 이것을 선택하면 설치가 된다.&lt;/li>
&lt;li>&lt;strong>Preferences &amp;gt; General &amp;gt; Workspace&lt;/strong>를 선택하고 **“Save automatically before build”**를 선택 &lt;img loading="lazy" class="alignnone" alt="" src="http://openmicrolab.cdn2.cafe24.com/eclipse_arduino1.png" width="780" height="612" />&lt;/li>
&lt;li>&lt;strong>Arduino&lt;/strong>항목에서 &lt;strong>Arduino가 설치된 path와 library path&lt;/strong> 를 입력하고, &lt;strong>Use Arduino ODE tools in eclipse&lt;/strong>를 선택한다. 그리고 test serial dll를 클릭해서 serial drive가 동작하는 지 확인한다.&lt;img loading="lazy" class="alignnone" alt="" src="http://openmicrolab.cdn2.cafe24.com/eclipse_arduino2.png" width="909" height="608" />&lt;/li>
&lt;li>아두이노 프로젝트 만들기: &lt;strong>New &amp;raquo; Project &amp;raquo; Arduino &amp;raquo; New Arduino sketch&lt;/strong>를 선택, 프로젝트 이름를 설정, 보드와 COM port를 설정하면 setup()과 loop()함수가 만들어진 빈 프로젝트가 생긴다.&lt;/li>
&lt;li>간단한 blink 예제를 만들고 &lt;strong>Project &amp;raquo; Build All&lt;/strong>하면 컴파일이되고, &lt;strong>AVR &amp;raquo; Upload Project to Target Devic&lt;/strong>e를 선택하면 아두이노 보드에 프로그래밍이된다.&lt;img loading="lazy" class="alignnone" alt="" src="http://openmicrolab.cdn2.cafe24.com/Arduino_Eclipse_Test.png" width="684" height="472" />&lt;/li>
&lt;/ol></description></item><item><title>PCB Trace 저항값 계산기</title><link>https://openmicrolab.com/pcb-trace-%EC%A0%80%ED%95%AD%EA%B0%92-%EA%B3%84%EC%82%B0%EA%B8%B0/</link><pubDate>Sun, 03 Aug 2014 14:57:49 +0000</pubDate><guid>https://openmicrolab.com/pcb-trace-%EC%A0%80%ED%95%AD%EA%B0%92-%EA%B3%84%EC%82%B0%EA%B8%B0/</guid><description>
&lt;p>PCB의 선폭, 동박의 두께, 길이를 입력하면 저항값을 얻을 수 있다.&lt;/p>
&lt;img loading="lazy" class="alignnone" alt="" src="http://openmicrolab.cdn2.cafe24.com/pcb_resistance.png" width="365" height="325" />
&lt;p>&lt;strong>Electrical Equations:&lt;/strong>&lt;br>
Resistance = Resistivity*Length/Area*(1 + (Temp_Co*(Temp – 25))&lt;br>
Where, Area = Thickness*Width&lt;br>
A copper Thickness of 1 oz/ft^2 = 0.0035 cm&lt;br>
Copper Resistivity = 1.7E-6 ohm-cm&lt;br>
Copper Temp_Co = 3.9E-3 ohm/ohm/C&lt;/p>
&lt;p>&lt;strong>Thermal Equations:&lt;/strong>&lt;br>
Thermal_Resistance = Thermal_Resistivity*Length/Area&lt;br>
Copper Thermal_Resistivity = 0.249 cm-K/W (at 300K)&lt;/p>
&lt;p>관련 링크: &lt;a href="http://circuitcalculator.com/wordpress/2006/01/24/trace-resistance-calculator" target="_blank">&lt;a href="http://circuitcalculator.com/wordpress/2006/01/24/trace-resistance-calculator">http://circuitcalculator.com/wordpress/2006/01/24/trace-resistance-calculator&lt;/a>&lt;/a>&lt;/p></description></item><item><title>Mac용 diff 툴</title><link>https://openmicrolab.com/mac%EC%9A%A9-diff-%ED%88%B4/</link><pubDate>Thu, 17 Jul 2014 04:35:20 +0000</pubDate><guid>https://openmicrolab.com/mac%EC%9A%A9-diff-%ED%88%B4/</guid><description>
&lt;p>상용프로그램도 많이 있는데 (&lt;a href="http://www.git-tower.com/blog/diff-tools-mac/" target="_blank">&lt;a href="http://www.git-tower.com/blog/diff-tools-mac/">http://www.git-tower.com/blog/diff-tools-mac/&lt;/a>&lt;/a>), 무료 프로그램에서 폴더별로 비교를 해주는 기능까지 있는 괜찮은 것은 &lt;a href="http://www.sourcegear.com/diffmerge/" target="_blank">DiffMerge&lt;/a>&lt;/p>
&lt;img loading="lazy" class="alignnone" alt="" src="http://openmicrolab.cdn2.cafe24.com/SourceGear___DiffMerge.png" width="869" height="592" /></description></item><item><title>NXP LPC 시리즈 맥에서 개발 환경 – Flash Magic</title><link>https://openmicrolab.com/nxp-lpc-%EC%8B%9C%EB%A6%AC%EC%A6%88-%EB%A7%A5%EC%97%90%EC%84%9C-%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-flash-magic/</link><pubDate>Fri, 23 May 2014 07:29:47 +0000</pubDate><guid>https://openmicrolab.com/nxp-lpc-%EC%8B%9C%EB%A6%AC%EC%A6%88-%EB%A7%A5%EC%97%90%EC%84%9C-%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-flash-magic/</guid><description>
&lt;p>NXP의 LPC 시리즈는 이클립스 기반의 툴인 &lt;a href="http://www.lpcware.com/lpcxpresso/home" target="_blank">LPCExpresso&lt;/a>를 제공한다. 대부분의 개발 환경은 &lt;a href="http://openmicrolab.com/lpc810-arm-cortexm0-project-1/" target="_blank">지난 포스팅&lt;/a>을 참고. 따라서 Mac에서도 윈도우즈와 동일한 개발환경을 구축할 수 있다.  LPC 시리즈 칩 역시 시리얼 부트로더가 내장이 되어 있어서 쉽게 flash를 write할 수 있으며, &lt;a href="http://www.flashmagictool.com/" target="_blank">FlashMagic&lt;/a>이라는 툴을 사용한다. 원래 윈도우 기반으로 개발된 툴을 Mac에 Wine을 사용하여 포팅이 되어 있다. 그래서 시리얼 포트도 COM1, COM2 이런 식으로 표시가 된다.&lt;br>
&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="FlashMagic"
class="image_figure image_external image_unprocessed"
src="http://openmicrolab.cdn2.cafe24.com/FlashMagic_program.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>Mac에서 잡힌 시리얼 포트를 FlashMagic이 구동이 될때 COM1, COM2.. 으로 매핑이 되는데, 이것을 확인해서 해당되는 COM 포트를 넣어주면 된다. 매핑된 포트를 찾는 방법은 다음의 그림을 참고… 대개 serial to USB 컨버터를 사용하는데, Mac에서는 cu.*의 형태와 tty.*의 형태가 잡히는데, *&lt;em>cu.&lt;em>의 형태로 잡힌 포트를 사용하면 된다.&lt;/em>&lt;/em>&lt;br>
&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="FlashMagic 포트찾기"
class="image_figure image_external image_unprocessed"
src="http://openmicrolab.cdn2.cafe24.com/FlashMagic.png"
/>
&lt;/picture>
&lt;/figure>
&lt;br>
즉 명령어는&lt;/p></description></item><item><title>CAM350으로 2개의 거버를 하나로 합치기</title><link>https://openmicrolab.com/cam350%EC%9C%BC%EB%A1%9C-2%EA%B0%9C%EC%9D%98-%EA%B1%B0%EB%B2%84%EB%A5%BC-%ED%95%98%EB%82%98%EB%A1%9C-%ED%95%A9%EC%B9%98%EA%B8%B0/</link><pubDate>Mon, 19 May 2014 05:13:01 +0000</pubDate><guid>https://openmicrolab.com/cam350%EC%9C%BC%EB%A1%9C-2%EA%B0%9C%EC%9D%98-%EA%B1%B0%EB%B2%84%EB%A5%BC-%ED%95%98%EB%82%98%EB%A1%9C-%ED%95%A9%EC%B9%98%EA%B8%B0/</guid><description>
&lt;ul>
&lt;li>첫번째 거버 파일을 auto import후 CAM 파일로 저장하는데, 좌표 계산을 쉽게하기 위해 &lt;strong>Edit &amp;raquo; Change Origin&lt;/strong>하여 원점을 맞춘다. Auto import를 할때 NC drill data는 선택하지 말고 따로 불러와서 저장을 한다. Eagle CAD의 경우 확장자는 drd이다.&lt;/li>
&lt;li>두번째 거버 파일도 auto import후 CAM 파일로 저장&lt;/li>
&lt;li>첫번째 CAM 파일을 불러온 후 &lt;strong>File &amp;raquo; Merge&lt;/strong>하여 두번째 파일을 불러오는데, 각각의 레이어를 맞춘다.&lt;/li>
&lt;li>불러온 데이터를 원하는 위치에 올린다. 이때 **Setting &amp;raquo; View Option의 “View merged Databases”**를 선택해 놓으면 불러온 거버 파일을 이미지로 볼 수 있다.&lt;/li>
&lt;li>불러온 거버 데이터는 merged data이므로 이것을 풀어야 한다. &lt;strong>Edit &amp;raquo; Change &amp;raquo; Explode &amp;raquo; Merged database&lt;/strong>를 선택후 커서가 십자 표시가 되면 불러온 거버파일을 선택한다.&lt;/li>
&lt;li>이제 각 레이어 별로 선택을 해 보면서 제대로 Merge가 됐는지 확인한다.&lt;/li>
&lt;li>**Export &amp;raquo; gerber Data… Export &amp;raquo; Drill Data…**를 하여 데이터를 저장한다.&lt;/li>
&lt;li>저장된 Merged 된 거버 데이터를 불러와서 제대로 되어 있는 지 확인한다.&lt;/li>
&lt;/ul>
&lt;p>참고 자료: &lt;a href="http://www.elecrow.com/wiki/index.php?title=How_to_panelize_PCBs_with_CAM350" target="_blank">&lt;a href="http://www.elecrow.com/wiki/index.php?title=How_to_panelize_PCBs_with_CAM350">http://www.elecrow.com/wiki/index.php?title=How_to_panelize_PCBs_with_CAM350&lt;/a>&lt;/a>&lt;/p></description></item><item><title>Eagle CAD로 거버만들때 주의사항</title><link>https://openmicrolab.com/eagle-cad%EB%A1%9C-%EA%B1%B0%EB%B2%84%EB%A7%8C%EB%93%A4%EB%95%8C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD/</link><pubDate>Mon, 19 May 2014 01:38:25 +0000</pubDate><guid>https://openmicrolab.com/eagle-cad%EB%A1%9C-%EA%B1%B0%EB%B2%84%EB%A7%8C%EB%93%A4%EB%95%8C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD/</guid><description>
&lt;p>이전에 작성한 포스팅 &lt;a href="http://openmicrolab.com/eagle-cad/" target="_blank" rel="noopener noreferrer">Eagle CAD&lt;/a>에서 거버 만들기는 일반적으로 2층 PCB의 경우 bottom에 부품이 없을 경우를 가정한다. 만약 bottom면에 부품을 실장을 하거나, &lt;a href="http://openmicrolab.com/eagle-cad%EB%A1%9C-%EC%9E%91%EC%97%85%ED%95%9C-pcb%EC%97%90-%EC%9D%B4%EB%AF%B8%EC%A7%80-%ED%8C%8C%EC%9D%BC-%EB%84%A3%EA%B8%B0/" target="_blank" rel="noopener noreferrer">PCB에 이미지를 넣을 경우&lt;/a>는 기본으로 설정된 레이어 이외의 레이어를 사용하므로, 거버를 만들때 추가적인 레이어가 선택이 되도록 해야 한다.&lt;/p>
&lt;p>Bottom면에 부품을 실장할 경우는 Silk screen solder를 추가한다. 즉 거버파일을 만드는 단계에서 *&lt;em>gerb274x.cam를 선택하고 작업을 할때 Silk screen SOL을 만들고 파일 확장자는 &lt;em>.pls로 해서 작업을 하면 된다.&lt;/em>&lt;/em>&lt;/p>
&lt;img loading="lazy" src="http://openmicrolab.cdn2.cafe24.com/eale_gerber.png" alt="null" width="680" height="405" />
&lt;p>&lt;strong>이렇게 할 경우 최종 거버파일은 10개가 된다.&lt;/strong>&lt;/p></description></item><item><title>파이썬 Serial 라이브러리 모듈 설치</title><link>https://openmicrolab.com/%ED%8C%8C%EC%9D%B4%EC%8D%AC-serial-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EB%AA%A8%EB%93%88-%EC%84%A4%EC%B9%98/</link><pubDate>Fri, 02 May 2014 08:56:22 +0000</pubDate><guid>https://openmicrolab.com/%ED%8C%8C%EC%9D%B4%EC%8D%AC-serial-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EB%AA%A8%EB%93%88-%EC%84%A4%EC%B9%98/</guid><description>
&lt;h3 id="pyserial-다운로드">PySerial 다운로드&lt;/h3>
&lt;p>PySerial 2.6 from &lt;a href="https://pypi.python.org/pypi/pyserial">https://pypi.python.org/pypi/pyserial&lt;/a>&lt;/p>
&lt;p>pyserial-2.6.tar.gz을 받아서 압축을 푼다.&lt;/p>
&lt;blockquote>
&lt;p>$ tar -xzf pyserial-2.6.tar.gz&lt;/p>&lt;/blockquote>
&lt;h3 id="설치">설치&lt;/h3>
&lt;blockquote>
&lt;p>sudo python setup.py install&lt;/p>&lt;/blockquote></description></item><item><title>Sublime Text 2 프린팅하기</title><link>https://openmicrolab.com/sublime-text-2-%ED%94%84%EB%A6%B0%ED%8C%85%ED%95%98%EA%B8%B0/</link><pubDate>Fri, 21 Mar 2014 10:06:44 +0000</pubDate><guid>https://openmicrolab.com/sublime-text-2-%ED%94%84%EB%A6%B0%ED%8C%85%ED%95%98%EA%B8%B0/</guid><description>
&lt;p>Sublime Text 2에는 프린팅 기능이 없다. 플러그인을 설치를 해야하는데…&lt;/p>
&lt;p>“Simple Print Function”를 인스톨한다.&lt;/p>
&lt;blockquote>
&lt;p>Tool &amp;gt; Command Palette &amp;gt; Install Package에서 “Simple Print Function”를 찾아서 인스톨한다.&lt;/p>&lt;/blockquote>
&lt;p>이게 제대로 동작을 하려면 “enscript”가 필요하므로 brew를 사용하여 인스톨한다.&lt;/p>
&lt;blockquote>
&lt;p>brew install enscript&lt;/p>&lt;/blockquote>
&lt;p>원래 소스 코드가 아닌 txt 파일을 인쇄하려고 했었는데, 프린트를 하면 한글은 깨짐. -_-;;;&lt;/p>
&lt;p>참고로 Homebrew설치는 터미널에서 다음을 실행한다.&lt;/p>
&lt;p>&lt;code id="selectable">/usr/bin/ruby -e &amp;ldquo;$(curl -fsSL &lt;a href="https://raw.githubusercontent.com/Homebrew/install/master/install)%22">https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;&lt;/a>&lt;/code>&lt;/p></description></item><item><title>MAC OS에 Homebrew 설치하기</title><link>https://openmicrolab.com/mac-os%EC%97%90-homebrew-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/</link><pubDate>Fri, 21 Mar 2014 09:51:08 +0000</pubDate><guid>https://openmicrolab.com/mac-os%EC%97%90-homebrew-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/</guid><description>
&lt;p>OS X용 패키지 관리자인 Homebrew 설치하기&lt;br>
영문 사이트:  &lt;a href="http://brew.sh/" target="_blank">&lt;a href="http://brew.sh/">http://brew.sh/&lt;/a>&lt;/a>&lt;br>
한글 사이트: &lt;a href="http://brew.sh/index_ko.html" target="_blank">&lt;a href="http://brew.sh/index_ko.html">http://brew.sh/index_ko.html&lt;/a>&lt;/a>&lt;/p>
&lt;p>설치는 간단하다. 터미널에서 다음을 실행한다.&lt;/p>
&lt;p>&lt;del>&lt;code id="selectable">&amp;lt;strong&amp;gt;ruby -e &amp;ldquo;$(curl -fsSL &lt;a href="https://raw.github.com/Homebrew/homebrew/go/install)%22&amp;amp;lt;/strong%3E">https://raw.github.com/Homebrew/homebrew/go/install)&amp;quot;&amp;amp;lt;/strong&amp;gt;&lt;/a>&lt;/code>&lt;/del>&lt;br>
위치가 바뀌어서 다음과 같이 입력을 해야 한다.&lt;br>
&lt;code id="selectable">ruby -e &amp;ldquo;$(curl -fsSL &lt;a href="https://raw.githubusercontent.com/Homebrew/install/master/install)%22">https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;&lt;/a>&lt;/code>&lt;br>
다만 설치를 위해서는 Xcode용 Command Line Tools가 설치되어 있어야 한다.&lt;/p>
&lt;h3 id="주요-명령어">주요 명령어&lt;/h3>
&lt;ul>
&lt;li>brew install formula // 패키지 설치&lt;/li>
&lt;li>brew remove formula // 패키지 삭제&lt;/li>
&lt;li>brew info formula // 패키지 정보&lt;/li>
&lt;li>brew upgrade [formula] // 설치한 패키지의 최신버전을 설치&lt;/li>
&lt;li>brew list 또는 brew ls // 설치한 formula 목록&lt;/li>
&lt;li>brew update // Homebrew 업데이트&lt;/li>
&lt;li>brew doctor // 시스템에 문제가 있는지 확인&lt;/li>
&lt;li>brew outdated // 내가 설치한 formula 목록의 이후 버전이 나왔는지 확인&lt;/li>
&lt;li>brew cleanup // fomula 의 모든 과거버전을 제거함&lt;/li>
&lt;/ul></description></item><item><title>맥용 Socket Test Program</title><link>https://openmicrolab.com/%EB%A7%A5%EC%9A%A9-socket-test-program/</link><pubDate>Fri, 06 Sep 2013 03:02:07 +0000</pubDate><guid>https://openmicrolab.com/%EB%A7%A5%EC%9A%A9-socket-test-program/</guid><description>
&lt;p>윈도우즈에서는 Castalia Technologies에서 만든 Socket Tester 프로그램(&lt;a title="유용한 툴 – Socket Tester" href="http://openmicrolab.com/%EC%9C%A0%EC%9A%A9%ED%95%9C-%ED%88%B4-socket-tester/" target="_blank">유용한 툴 – Socket Tester&lt;/a>)을 사용을 했었는데, 맥에서는 비슷한 프로그램을 못 찾다가 최근에 우연히 발견!&lt;/p>
&lt;h3 id="sockettest-v300">**SocketTest v3.0.0 **&lt;/h3>
&lt;div style="width: 586px" class="wp-caption alignnone">
&lt;img loading="lazy" alt="" src="http://sockettest.sourceforge.net/1.jpg" width="576" height="479" />
&lt;p class="wp-caption-text">
Screen Shots of SocketTest v3.0.0
&lt;/p>
&lt;/div>
&lt;p>관련 링크: &lt;a href="http://sockettest.sourceforge.net/" target="_blank">&lt;a href="http://sockettest.sourceforge.net/">http://sockettest.sourceforge.net/&lt;/a>&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>실행은 터미널에서 java -jar SocketTest.jar&lt;/p>&lt;/blockquote>
&lt;p>[wpdm_file id=2]&lt;/p></description></item><item><title>Eagle CAD에서 라이브러리 관리</title><link>https://openmicrolab.com/eagle-cad%EC%97%90%EC%84%9C-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EA%B4%80%EB%A6%AC/</link><pubDate>Wed, 12 Dec 2012 05:07:40 +0000</pubDate><guid>https://openmicrolab.com/eagle-cad%EC%97%90%EC%84%9C-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EA%B4%80%EB%A6%AC/</guid><description>
&lt;ul style="list-style-type: disc;">
&lt;li>
&lt;b>Eagle CAD에서 라이브러리에 있는 파트를 삭제하는 방법은 ?&lt;/b>
&lt;/li>
&lt;/ul>
&lt;p>라이브러리 자체를 삭제하는 것은 간단하지만, 라이브러리에 있는 부품을 삭제하고 싶을 때는 다음과 같이 하면 된다.&lt;/p>
&lt;p>-. Control Panel에서 일단 해당라이브러리를 연다. File &amp;gt; Open &amp;gt; Library&lt;/p>
&lt;p>-. Library &amp;gt; Remove… 메뉴를 선택을 하고, 삭제하고자 하는 라이브러리 명을 입력한다.&lt;/p>
&lt;p style="text-align: center; clear: none; float: none;">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile25.uf.16465C3F50C80E33158773.png" class="aligncenter" width="275" height="161" filename="스크린샷 2012-12-12 오후 1.54.41.png" filemime="image/jpeg" />
&lt;/p>
&lt;ul style="list-style-type: disc;">
&lt;li>
&lt;b>라이브러리에 있는 부품을&amp;nbsp;복사하는 방법?&lt;/b>
&lt;/li>
&lt;/ul>
&lt;p>이건 간단한데, 자주쓰는 부품을 모아서 나만의 라이브러리를 만들때 유용하다.&lt;/p></description></item><item><title>phpBB 설치</title><link>https://openmicrolab.com/phpbb-%EC%84%A4%EC%B9%98/</link><pubDate>Mon, 19 Nov 2012 07:08:42 +0000</pubDate><guid>https://openmicrolab.com/phpbb-%EC%84%A4%EC%B9%98/</guid><description>
&lt;p>몇달전 phpBB를 설치하고 일이 있어서 다시 영문을 설치하게 됐다. 사실 phpBB 설치는 크게 어려운 것은 없다.&lt;/p>
&lt;p>&lt;a href="https://www.phpbb.com/" target="_blank" class="tx-link">phpBB사이트&lt;/a>에서 최신 버젼을 다운로드에서 설치하면 된다.&lt;/p>
&lt;p>설치방법은 &lt;a href="https://www.phpbb.com/community/docs/INSTALL.html#postinstall" target="_blank" class="tx-link">&lt;a href="https://www.phpbb.com/community/docs/INSTALL.html#postinstall">https://www.phpbb.com/community/docs/INSTALL.html#postinstall&lt;/a>&lt;/a> 를 참고,&lt;/p>
&lt;p>보안을 위해서는 6절도 읽어봐야…&lt;/p>
&lt;p>&lt;a href="http://www.phpbbkorea.com/" target="_blank" class="tx-link">phpBB Korea&lt;/a>도 있으니 관련 정보는 풍부하다. &lt;/p>
&lt;p>설치를 하고 나서, 포럼을 운영을 하다보면 스팸글들이 도배가 되는데, 이를 위한 방지는 필수….&lt;/p>
&lt;p>한글 포럼이라면 특정 한글을 입력하게하면 외국으로 부터 오는 스팸은 거를 수 있다.&lt;/p>
&lt;p>아래 링크 참고&lt;/p>
&lt;p>&lt;a href="http://www.waitfor.com/phpBB3/viewtopic.php?f=5&amp;t=812" target="_blank" class="tx-link">&lt;a href="http://www.waitfor.com/phpBB3/viewtopic.php?f=5&amp;amp;t=812">http://www.waitfor.com/phpBB3/viewtopic.php?f=5&amp;amp;t=812&lt;/a>&lt;/a>&lt;/p>
&lt;p>디폴트로 설치가 끝나면 아래 그림처럼 횡한 포럼이 나타나는데, 여기서부터 세부 설정을 하면 된다.&lt;/p></description></item><item><title>winmail.dat 복구 방법</title><link>https://openmicrolab.com/winmaildat-%EB%B3%B5%EA%B5%AC-%EB%B0%A9%EB%B2%95/</link><pubDate>Mon, 15 Oct 2012 05:06:18 +0000</pubDate><guid>https://openmicrolab.com/winmaildat-%EB%B3%B5%EA%B5%AC-%EB%B0%A9%EB%B2%95/</guid><description>
&lt;p>Mac OS X에서 마이크로 소프트 아웃룩을 사용중이다. &lt;/p>
&lt;p>기존 Windows의 아웃룩과의 호환성 때문에 메일에 winmail.dat파일이 첨부가 되어온다. &lt;/p>
&lt;p>이것의 원인은 마이크로소프트의 support에 의하면 다음과 같다.&lt;/p>
&lt;p>&lt;a href="http://support.microsoft.com/kb/278061/ko" target="_blank" class="tx-link">&lt;a href="http://support.microsoft.com/kb/278061/ko">http://support.microsoft.com/kb/278061/ko&lt;/a>&lt;/a>&lt;/p>
&lt;p>즉 아웃룩에서 서식있는 텍스트 형식(RTF)로 메일을 보낼때 이런 경우가 발생을 하는데, 메일을 수신 하는 측에서 RTF를 지원하지 않는 경우에 이것을 보완하기 위해 자신들만의 포맷인 TNEF(Transport Neutral Encapsulation Format)으로 보내기 때문이다. &lt;/p>
&lt;p>해결 방법은 보내는 측에 일반 텍스트 형태로 메일을 다시 보내달라는 방법과&lt;/p>
&lt;p>winmail.dat를 복구하는 프로그램을 사용하면 된다. 물론 100% 복구되는 지는 잘 모르겠지만, Mac OS X용으로는 TNEF’s Enough가 있다.&lt;/p></description></item><item><title>UTF-8 지원 Editor</title><link>https://openmicrolab.com/utf-8-%EC%A7%80%EC%9B%90-editor/</link><pubDate>Thu, 19 Apr 2012 05:24:33 +0000</pubDate><guid>https://openmicrolab.com/utf-8-%EC%A7%80%EC%9B%90-editor/</guid><description>
&lt;div class="txc-textbox" style="border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-left-style: solid; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-top-color: rgb(231, 253, 181); border-right-color: rgb(231, 253, 181); border-bottom-color: rgb(231, 253, 181); border-left-color: rgb(231, 253, 181); background-color: rgb(231, 253, 181); padding-top: 10px; padding-right: 10px; padding-bottom: 10px; padding-left: 10px; ">
&lt;p>
UTF-8 에 관란 위키 문서:&amp;nbsp;&lt;a href="http://ko.wikipedia.org/wiki/UTF-8">http://ko.wikipedia.org/wiki/UTF-8&lt;/a>
&lt;/p>
&lt;p>
&lt;a href="http://par.sarang.net/413">윈도우즈용 UTF-8 에디터&amp;nbsp;&lt;/a>Notepad++ 에 관한 블로그&amp;nbsp;&lt;a href="http://par.sarang.net/413">: http://par.sarang.net/413&lt;/a>&amp;nbsp; 잘 정리되어 있군요.
&lt;/p>
&lt;p>
&lt;b>&lt;br />&lt;/b>
&lt;/p>
&lt;p>
&lt;b>참고로 UltraEdit는 UTF-8 만 지원하고,&amp;nbsp;UTF without BOM (Byte Order Mark)를 지원하지 않는 듯&lt;/b>
&lt;/p></description></item><item><title>git 사용법</title><link>https://openmicrolab.com/git-%EC%82%AC%EC%9A%A9%EB%B2%95/</link><pubDate>Tue, 24 Jan 2012 10:08:10 +0000</pubDate><guid>https://openmicrolab.com/git-%EC%82%AC%EC%9A%A9%EB%B2%95/</guid><description>
&lt;p>git에 대한 위키피디아 문서&lt;br>
&lt;a href="http://en.wikipedia.org/wiki/Git_(software">http://en.wikipedia.org/wiki/Git_(software)&lt;/a>&lt;/p>
&lt;p>git 사용자 설명서: 잘 정리된 메뉴얼&lt;br>
&lt;a href="http://namhyung.springnote.com/pages/3132772">http://namhyung.springnote.com/pages/3132772&lt;/a>&lt;br>
 &lt;br>
git 튜토리얼 메뉴얼 페이지&lt;br>
&lt;a href="http://www.funit.net/git">http://www.funit.net/git&lt;/a>&lt;/p>
&lt;p>github에 대한 글: Github, 코드 개발 기반 소셜 네트웍&lt;br>
&lt;a href="http://channy.creation.net/blog/626">http://channy.creation.net/blog/626&lt;/a>&lt;/p>
&lt;p>git는 분산 버전 관리 시스템이며 리눅스 커널 개발에 사용하기 위해 리누스 토발츠가 처음 디자인과 개발을 하기 시작했다.&lt;br>
가장 큰 장점인 수정 내용을 매번 마스터 저장소에 커밋해서 올리는 대신에 저장소 전체의 로컬 복사본을 사용한다는 것이다. git을 사용하면 각 개발자가 작업을 진행할 수 있는 자신만의 샌드박스를 가지고 있으며, 작업을 마친후에 변경내역을 마스터 저장소에 push  할 수 있다.&lt;/p></description></item><item><title>MCU 개발키트의 트랜드</title><link>https://openmicrolab.com/mcu-%EA%B0%9C%EB%B0%9C%ED%82%A4%ED%8A%B8%EC%9D%98-%ED%8A%B8%EB%9E%9C%EB%93%9C/</link><pubDate>Fri, 04 Nov 2011 10:48:27 +0000</pubDate><guid>https://openmicrolab.com/mcu-%EA%B0%9C%EB%B0%9C%ED%82%A4%ED%8A%B8%EC%9D%98-%ED%8A%B8%EB%9E%9C%EB%93%9C/</guid><description>
&lt;p>모든 MCU 벤더들은 자신들이 출시하는 반도체 칩 이외에 사용자가 이 칩을 잘 사용하도록reference board 또는 evaluation board 라고 칭하는 개발 키드를 제공을 한다. 전통적으로 이것은 아주 오랜 기간 동안 칩의 모든 기능을 테스트해 볼 수 있도록 구성이 되어 있어서 칩의 기능이 많을수록 상당히 복잡한 형태를 가지고 있다. 하지만 최근의 경우 MCU 벤더들이 출시하는 칩의 종류는 메모리 용량 및 주변 장치에 따라 수십에서 수백 종에 이르므로 이 모든 칩을 위한 개발키트를 출시한다는 것은 거의 불가능하다. &lt;/p></description></item><item><title>네트워크 스캐닝 툴 nmap 사용법</title><link>https://openmicrolab.com/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%8A%A4%EC%BA%90%EB%8B%9D-%ED%88%B4-nmap-%EC%82%AC%EC%9A%A9%EB%B2%95/</link><pubDate>Tue, 07 Jun 2011 12:06:02 +0000</pubDate><guid>https://openmicrolab.com/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%8A%A4%EC%BA%90%EB%8B%9D-%ED%88%B4-nmap-%EC%82%AC%EC%9A%A9%EB%B2%95/</guid><description>
&lt;p>네트웍으로 취약점을 점검하거나 열려있는 포트를 확인하기위해 사용하는 툴입니다.&lt;br>
&lt;a href="http://nmap.org/">http://nmap.org/&lt;/a>&lt;br>
윈도우즈용으로 zmapwin 도 있습니다. &lt;a href="http://nmap.org/download.html">http://nmap.org/download.html&lt;/a>&lt;/p>
&lt;p>사용법은&lt;br>
&lt;strong>nmap [ &lt;Scan Type> …] [ &lt;Options> ] { &lt;target specification> }&lt;/strong>&lt;/p>
&lt;p>Options 및 target specification은 다음을 참고하고 구체적인 내용은 &lt;a href="http://nmap.org/book/man.html">http://nmap.org/book/man.html&lt;/a> 를 참고…&lt;/p>
&lt;pre class="screen" style="background-color: #000000; font-family: monospace; color: #00ff00;">Nmap 5.51SVN ( http://nmap.org )
Usage: nmap [Scan Type(s)] [Options] {target specification}
TARGET SPECIFICATION:
Can pass hostnames, IP addresses, networks, etc.
Ex: scanme.nmap.org, microsoft.com/24, 192.168.0.1; 10.0.0-255.1-254
-iL &amp;lt;inputfilename&amp;gt;: Input from list of hosts/networks
-iR &amp;lt;num hosts&amp;gt;: Choose random targets
--exclude &amp;lt;host1[,host2][,host3],...&amp;gt;: Exclude hosts/networks
--excludefile &amp;lt;exclude_file&amp;gt;: Exclude list from file
HOST DISCOVERY:
-sL: List Scan - simply list targets to scan
-sn: Ping Scan - disable port scan
-Pn: Treat all hosts as online -- skip host discovery
-PS/PA/PU/PY[portlist]: TCP SYN/ACK, UDP or SCTP discovery to given ports
-PE/PP/PM: ICMP echo, timestamp, and netmask request discovery probes
-PO[protocol list]: IP Protocol Ping
-n/-R: Never do DNS resolution/Always resolve [default: sometimes]
--dns-servers &amp;lt;serv1[,serv2],...&amp;gt;: Specify custom DNS servers
--system-dns: Use OS's DNS resolver
--traceroute: Trace hop path to each host
SCAN TECHNIQUES:
-sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans
-sU: UDP Scan
-sN/sF/sX: TCP Null, FIN, and Xmas scans
--scanflags &amp;lt;flags&amp;gt;: Customize TCP scan flags
-sI &amp;lt;zombie host[:probeport]&amp;gt;: Idle scan
-sY/sZ: SCTP INIT/COOKIE-ECHO scans
-sO: IP protocol scan
-b &amp;lt;FTP relay host&amp;gt;: FTP bounce scan
PORT SPECIFICATION AND SCAN ORDER:
-p &amp;lt;port ranges&amp;gt;: Only scan specified ports
Ex: -p22; -p1-65535; -p U:53,111,137,T:21-25,80,139,8080,S:9
-F: Fast mode - Scan fewer ports than the default scan
-r: Scan ports consecutively - don't randomize
--top-ports &amp;lt;number&amp;gt;: Scan &amp;lt;number&amp;gt; most common ports
--port-ratio &amp;lt;ratio&amp;gt;: Scan ports more common than &amp;lt;ratio&amp;gt;
SERVICE/VERSION DETECTION:
-sV: Probe open ports to determine service/version info
--version-intensity &amp;lt;level&amp;gt;: Set from 0 (light) to 9 (try all probes)
--version-light: Limit to most likely probes (intensity 2)
--version-all: Try every single probe (intensity 9)
--version-trace: Show detailed version scan activity (for debugging)
SCRIPT SCAN:
-sC: equivalent to --script=default
--script=&amp;lt;Lua scripts&amp;gt;: &amp;lt;Lua scripts&amp;gt; is a comma separated list of
directories, script-files or script-categories
--script-args=&amp;lt;n1=v1,[n2=v2,...]&amp;gt;: provide arguments to scripts
--script-trace: Show all data sent and received
--script-updatedb: Update the script database.
OS DETECTION:
-O: Enable OS detection
--osscan-limit: Limit OS detection to promising targets
--osscan-guess: Guess OS more aggressively
TIMING AND PERFORMANCE:
Options which take &amp;lt;time&amp;gt; are in seconds, or append 'ms' (milliseconds),
's' (seconds), 'm' (minutes), or 'h' (hours) to the value (e.g. 30m).
-T&amp;lt;0-5&amp;gt;: Set timing template (higher is faster)
--min-hostgroup/max-hostgroup &amp;lt;size&amp;gt;: Parallel host scan group sizes
--min-parallelism/max-parallelism &amp;lt;numprobes&amp;gt;: Probe parallelization
--min-rtt-timeout/max-rtt-timeout/initial-rtt-timeout &amp;lt;time&amp;gt;: Specifies
probe round trip time.
--max-retries &amp;lt;tries&amp;gt;: Caps number of port scan probe retransmissions.
--host-timeout &amp;lt;time&amp;gt;: Give up on target after this long
--scan-delay/--max-scan-delay &amp;lt;time&amp;gt;: Adjust delay between probes
--min-rate &amp;lt;number&amp;gt;: Send packets no slower than &amp;lt;number&amp;gt; per second
--max-rate &amp;lt;number&amp;gt;: Send packets no faster than &amp;lt;number&amp;gt; per second
FIREWALL/IDS EVASION AND SPOOFING:
-f; --mtu &amp;lt;val&amp;gt;: fragment packets (optionally w/given MTU)
-D &amp;lt;decoy1,decoy2[,ME],...&amp;gt;: Cloak a scan with decoys
-S &amp;lt;IP_Address&amp;gt;: Spoof source address
-e &amp;lt;iface&amp;gt;: Use specified interface
-g/--source-port &amp;lt;portnum&amp;gt;: Use given port number
--data-length &amp;lt;num&amp;gt;: Append random data to sent packets
--ip-options &amp;lt;options&amp;gt;: Send packets with specified ip options
--ttl &amp;lt;val&amp;gt;: Set IP time-to-live field
--spoof-mac &amp;lt;mac address/prefix/vendor name&amp;gt;: Spoof your MAC address
--badsum: Send packets with a bogus TCP/UDP/SCTP checksum
OUTPUT:
-oN/-oX/-oS/-oG &amp;lt;file&amp;gt;: Output scan in normal, XML, s|&amp;lt;rIpt kIddi3,
and Grepable format, respectively, to the given filename.
-oA &amp;lt;basename&amp;gt;: Output in the three major formats at once
-v: Increase verbosity level (use -vv or more for greater effect)
-d: Increase debugging level (use -dd or more for greater effect)
--reason: Display the reason a port is in a particular state
--open: Only show open (or possibly open) ports
--packet-trace: Show all packets sent and received
--iflist: Print host interfaces and routes (for debugging)
--log-errors: Log errors/warnings to the normal-format output file
--append-output: Append to rather than clobber specified output files
--resume &amp;lt;filename&amp;gt;: Resume an aborted scan
--stylesheet &amp;lt;path/URL&amp;gt;: XSL stylesheet to transform XML output to HTML
--webxml: Reference stylesheet from Nmap.Org for more portable XML
--no-stylesheet: Prevent associating of XSL stylesheet w/XML output
MISC:
-6: Enable IPv6 scanning
-A: Enable OS detection, version detection, script scanning, and traceroute
--datadir &amp;lt;dirname&amp;gt;: Specify custom Nmap data file location
--send-eth/--send-ip: Send using raw ethernet frames or IP packets
--privileged: Assume that the user is fully privileged
--unprivileged: Assume the user lacks raw socket privileges
-V: Print version number
-h: Print this help summary page.
EXAMPLES:
nmap -v -A scanme.nmap.org
nmap -v -sn 192.168.0.0/16 10.0.0.0/8
nmap -v -iR 10000 -Pn -p 80&lt;/pre>
&lt;p>그리고 잘 정리된 이 &lt;a href="https://www.comparitech.com/net-admin/nmap-nessus-cheat-sheet/" target="_blank" rel="noopener">링크&lt;/a>는  nmap cheat sheet 과 &lt;a href="https://cdn.comparitech.com/wp-content/uploads/2019/06/Nmap-Cheat-Sheet.pdf" target="_blank" rel="noopener">pdf&lt;/a> 파일&lt;/p></description></item><item><title>IAR 컴파일러에서 J-LINK 사용하기 2 – EWARM5.41</title><link>https://openmicrolab.com/iar-%EC%BB%B4%ED%8C%8C%EC%9D%BC%EB%9F%AC%EC%97%90%EC%84%9C-j-link-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-2-ewarm541/</link><pubDate>Fri, 18 Feb 2011 02:32:21 +0000</pubDate><guid>https://openmicrolab.com/iar-%EC%BB%B4%ED%8C%8C%EC%9D%BC%EB%9F%AC%EC%97%90%EC%84%9C-j-link-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-2-ewarm541/</guid><description>
&lt;p>이전 포스트 “&lt;A title="[http://liketheocean.tistory.com/62]로 이동합니다." href="http://liketheocean.tistory.com/62" target=_blank>IAR 컴파일러에서 J-LINK 사용하기&lt;/A>” 는 EWARM4.xx 버전에서 동작하는 것이였습니다.&lt;br>
컴파일러 버젼을 5.41로 바꿨는데, 이전 버젼에서 사용하던 메뉴들이 없어졌네요.&lt;br>
이전 버젼과 호환성을 유지를 해줘야 하는데… -_-;;&lt;br>
J-link와 연결은 되는데, “Programming flash memory” 창이 떠서 멈줘있는 현상이 있어서 다시 확인을 하니 몇가지 주의해야 할 설정이 있습니다.&lt;br>
컴파일러 옵션 설정에서&lt;/p>
&lt;UL style="LIST-STYLE-TYPE: disc">
&lt;br />
&lt;LI style="LINE-HEIGHT: 1.2">
Output Converter => intel extended
&lt;/LI>
&lt;br />
&lt;LI style="LINE-HEIGHT: 1.2">
Linker/ Config&amp;nbsp;=> icf 파일 을 제대로 설정
&lt;/LI>
&lt;br />
&lt;LI style="LINE-HEIGHT: 1.2">
Debugger / Download => board 파일을 제대로 설정&lt;/p></description></item><item><title>J-Link 에러 메시지</title><link>https://openmicrolab.com/j-link-%EC%97%90%EB%9F%AC-%EB%A9%94%EC%8B%9C%EC%A7%80/</link><pubDate>Mon, 14 Feb 2011 11:05:03 +0000</pubDate><guid>https://openmicrolab.com/j-link-%EC%97%90%EB%9F%AC-%EB%A9%94%EC%8B%9C%EC%A7%80/</guid><description>
&lt;p>IAR의 컴파일러인 &lt;A title="[http://liketheocean.tistory.com/62]로 이동합니다." href="http://liketheocean.tistory.com/62" target=_blank>EWARM과 J-link 디버거를 사용시&lt;/A> 다음과 같은 에러가 났을때 해결 방법&lt;/p>
&lt;p>&lt;SPAN>&lt;STRONG>Could net write CPU  register MSP : Written: 0xFFFFFFFF, Read 0xFFFFFFFC&lt;FONT color=#000000> &lt;br /> &lt;/FONT>&lt;/STRONG>&lt;/SPAN>&lt;br>
이와 같은 에러는 EWARM 4.42 버젼에서 사용하는 디바이스가 추가되지 않아서 생기는 에러로, 첨부된 파일들을 해당 폴더에 카피하면 디바이스가 추가된다.&lt;/p>
&lt;p>관련 내용은 이전 포스트 참고: &lt;A title="[http://liketheocean.tistory.com/63]로 이동합니다." href="http://liketheocean.tistory.com/63" target=_blank>EWARM4.42에 STM32 디바이스 추가하기&lt;/A>&lt;/p></description></item><item><title>Jperf</title><link>https://openmicrolab.com/jperf/</link><pubDate>Tue, 01 Feb 2011 06:36:36 +0000</pubDate><guid>https://openmicrolab.com/jperf/</guid><description>
&lt;p>자바로 만들어진 IPerf의 그래픽 인터페이스입니다.&lt;br>
일단 커멘드 라인 보다 사용하기 쉽고, 결과도 그래프로 그려주네요.&lt;br>
관련자료는 .. &lt;a href="http://code.google.com/p/xjperf/">http://code.google.com/p/xjperf/&lt;/a>&lt;br>
실행 파일은….jperf-2.0.2.zip&lt;a href="https://openmicrolab.com/images/1/cfile7.uf.15108C594D47A9A12FD58C.zip" class="aligncenter" filename="jperf-2.0.2.zip" filemime="application/zip" /> cfile7.uf.15108C594D47A9A12FD58C.zip&lt;/a>&lt;br>
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile27.uf.135658554D47A96E0F3F66.jpg" class="aligncenter" width="611" height="480" alt="" filename="Jperf.jpg" filemime="image/jpeg" />&lt;/p></description></item><item><title>Migrating from version 4.x to version 5.x</title><link>https://openmicrolab.com/migrating-from-version-4x-to-version-5x/</link><pubDate>Fri, 28 Jan 2011 05:37:31 +0000</pubDate><guid>https://openmicrolab.com/migrating-from-version-4x-to-version-5x/</guid><description>
&lt;p>&lt;FONT color=#000000>&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">EWARM 4.x =&amp;gt; 5.0으로 갈아 타기위한 가이드 문서입니다.&lt;/SPAN>&lt;/SPAN>&lt;/p>
&lt;p>&lt;/FONT>&lt;a href="https://openmicrolab.com/images/1/cfile27.uf.173906564D425352191FFC.pdf" class="aligncenter" filename="EWARM_MigrationGuide.ENU.pdf" filemime="application/pdf" />cfile27.uf.173906564D425352191FFC.pdf&lt;/a>&lt;br>
&lt;FONT color=#000000>&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile5.uf.1217D7544D4254002312D1.jpg" class="aligncenter" width="680" height="614" alt="" filename="EWARM.jpg" filemime="image/jpeg" />&lt;/SPAN>&lt;/SPAN>&lt;br>
&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">소스를 그룹별로 정리를 해서 프로젝트를 만들었는데,&lt;/SPAN>&lt;/SPAN>&lt;br>
&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">-. CMSIS – ARM의 CMSIS 관련 소스&lt;/SPAN>&lt;/SPAN>&lt;br>
&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">-. EWARMv5.4 – CMSIS에서 지원하는 device 중 ST 라이브러리 소스&lt;/SPAN>&lt;/SPAN>&lt;br>
&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">   사용하는 디바이스에 맞는 소스를 넣어준다.&lt;/SPAN>&lt;/SPAN>&lt;br>
&lt;/FONT>&lt;/p>
&lt;P style="MARGIN-LEFT: 1in" class=MsoNormal>&lt;SPAN style="FONT-FAMILY: Arial; FONT-SIZE: 10pt">&lt;FONT color=#000000>&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">&amp;#8211; startup_stm32f10x_ld_vl.s: &amp;nbsp; &amp;nbsp;for STM32 Low density Value line devices&lt;/SPAN>&lt;/SPAN>&lt;br /> &lt;/FONT>&lt;/SPAN>&lt;SPAN style="FONT-FAMILY: Arial; FONT-SIZE: 10pt">&lt;FONT color=#000000>&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">&amp;#8211; startup_stm32f10x_ld.s: &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;for STM32 Low density devices&lt;/SPAN>&lt;/SPAN>&lt;br /> &lt;/FONT>&lt;/SPAN>&lt;SPAN style="FONT-FAMILY: Arial; FONT-SIZE: 10pt">&lt;FONT color=#000000>&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">&amp;#8211; startup_stm32f10x_md_vl.s: &amp;nbsp;for STM32 Medium density Value line devices&lt;/SPAN>&lt;/SPAN>&lt;br /> &lt;/FONT>&lt;/SPAN>&lt;FONT color=#000000>&lt;SPAN style="FONT-FAMILY: Arial; FONT-SIZE: 10pt">&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">&amp;#8211; startup_stm32f10x_md.s: &amp;nbsp; &amp;nbsp; &amp;nbsp;for STM32 Medium density devices &lt;/SPAN>&lt;/SPAN>&lt;br /> &lt;/SPAN>&lt;SPAN style="FONT-FAMILY: Arial; FONT-SIZE: 10pt">&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">&amp;#8211; startup_stm32f10x_hd_vl.s:&amp;nbsp;&amp;nbsp; for&amp;nbsp;STM32 High density Value line devices&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>
&lt;/FONT>&lt;FONT color=#000000>&lt;SPAN style="FONT-FAMILY: Arial; FONT-SIZE: 10pt">&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">&amp;#8211; startup_stm32f10x_hd.s: &amp;nbsp; &amp;nbsp; &amp;nbsp; for&amp;nbsp;STM32 High density devices&lt;/SPAN>&lt;/SPAN>&lt;br /> &lt;/SPAN>&lt;SPAN style="FONT-FAMILY: Arial; FONT-SIZE: 10pt">&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">&amp;#8211; startup_stm32f10x_xl.s: &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;for&amp;nbsp;STM32 XL density devices&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/FONT>&lt;FONT color=#000000>&lt;SPAN style="FONT-FAMILY: Arial; FONT-SIZE: 10pt">&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt"> &lt;/SPAN>&lt;/SPAN>&lt;br /> &lt;/SPAN>&lt;SPAN style="FONT-FAMILY: Arial; FONT-SIZE: 10pt">&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">&amp;#8211; startup_stm32f10x_cl.s: &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;for&amp;nbsp;STM32 Connectivity line devices &lt;/SPAN>&lt;/SPAN>&lt;?xml:namespace prefix = o ns = "urn:schemas-microsoft-com:office:office" />&lt;o:p>&lt;/o:p>&lt;/SPAN>&lt;/FONT>
&lt;p>&lt;FONT color=#000000>&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">-. StdPeriph_Driver –  ST에서 제공하는 페리페럴 드라이버 소스, 사용하는 드라이버 만 올리면 된다. &lt;/SPAN>&lt;/SPAN>&lt;br>
&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">-. USER – 이건 사용자 소스&lt;/SPAN>&lt;/SPAN>&lt;br>
&lt;/FONT>&lt;/p></description></item><item><title>Visual IBIS Editor</title><link>https://openmicrolab.com/visual-ibis-editor/</link><pubDate>Tue, 26 Oct 2010 04:23:10 +0000</pubDate><guid>https://openmicrolab.com/visual-ibis-editor/</guid><description>
&lt;p>&lt;a href="http://liketheocean.tistory.com/entry/IBIS-%EB%AA%A8%EB%8D%B8" target="_blank" title="[http://liketheocean.tistory.com/entry/IBIS-%EB%AA%A8%EB%8D%B8]로 이동합니다.">&lt;b>&lt;span style="font-size: 10pt; ">&lt;span style="font-size: 11pt; ">IBIS &lt;/span>&lt;/span>&lt;/b>&lt;/a>&lt;span style="font-size: 10pt; ">&lt;span style="font-size: 11pt; ">파일을 읽어서 분석을 해주는 무료툴입니다. &lt;/span>&lt;/span>&lt;/p>
&lt;div>
&lt;span style="font-size: 10pt; ">&lt;span style="font-size: 11pt; ">&lt;br /> 라이센스 버젼에 비해 몇가지 제한된 기능이 있지만 IBIS 파일의 Syntax 확인 및 IBIS 데이터를 그래프로 보여줍니다.&lt;/span>&lt;/span>
&lt;/div>
&lt;div>
&lt;/div>
&lt;div>
&lt;div>
&lt;/div>
&lt;div>
&lt;span style="font-size: 10pt; ">&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile27.uf.144507364CC657272C2C3E.jpg" class="aligncenter" width="680" height="514" alt="" filename="mentot_ibis_editor.jpg" filemime="image/jpeg" />&lt;/span>
&lt;/div>
&lt;/div>
&lt;div>
&lt;a href="http://www.mentor.com/products/pcb-system-design/circuit-simulation/hyperlynx-signal-integrity/visual_ibis_editor/" target="_blank" title="[http://www.mentor.com/products/pcb-system-design/circuit-simulation/hyperlynx-signal-integrity/visual_ibis_editor/]로 이동합니다.">&lt;span style="font-size: 10pt; ">&lt;b>&lt;span style="font-size: 11pt; ">Mentor Graphics&lt;/span>&lt;/b>&lt;/span>&lt;/a>&lt;span style="font-size: 10pt; ">&lt;span style="font-size: 11pt; ">사에서 간단한 정보 등록후 받으실 수 있습니다.&amp;nbsp;&lt;/span>&lt;/span>
&lt;/div>
&lt;div id="__KO_DIC_LAYER__" style="padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; position: fixed; z-index: 1e+009; overflow-x: hidden; overflow-y: hidden; border-top-width: 2px; border-right-width: 2px; border-bottom-width: 2px; border-left-width: 2px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-left-style: solid; border-top-color: rgb(51, 51, 119); border-right-color: rgb(51, 51, 119); border-bottom-color: rgb(51, 51, 119); border-left-color: rgb(51, 51, 119); display: none; ">
&lt;/div></description></item><item><title>Flowchart를 만들어주는 툴 Crystal REVS</title><link>https://openmicrolab.com/flowchart%EB%A5%BC-%EB%A7%8C%EB%93%A4%EC%96%B4%EC%A3%BC%EB%8A%94-%ED%88%B4-crystal-revs/</link><pubDate>Fri, 08 Oct 2010 11:35:59 +0000</pubDate><guid>https://openmicrolab.com/flowchart%EB%A5%BC-%EB%A7%8C%EB%93%A4%EC%96%B4%EC%A3%BC%EB%8A%94-%ED%88%B4-crystal-revs/</guid><description>
&lt;p>&lt;span style="font-size: 11pt; ">소스코드를 분석을 해서 flowchart를 만들어 주는 툴입니다. &lt;/span>&lt;/p>
&lt;div>
&lt;span style="font-size: 11pt; ">대부분의 개발자들이 문서만들기를 싫어하는데 어쩔수 없이 flowchart를 만들어야 할 때가 있습니다.&amp;nbsp;&lt;/span>
&lt;/div>
&lt;div>
&lt;font class="Apple-style-span" size="4">&lt;span class="Apple-style-span" style="font-size: 15px; line-height: 22px;">이 프로그램은 10일 동안 사용 기간 제약이 있는 버젼이지만 모든 기능이 동작합니다.&lt;/span>&lt;/font>
&lt;/div>
&lt;div>
&lt;font class="Apple-style-span" size="4">&lt;span class="Apple-style-span" style="font-size: 15px; line-height: 22px;">&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile26.uf.193CC92E4CAF01F26402EA.png" class="aligncenter" width="680" height="570" alt="" filename="Crystal-REVS-for-C_1.png" filemime="image/jpeg" />&lt;/span>&lt;/font>
&lt;/div>
&lt;div>
&lt;font class="Apple-style-span" size="4">&lt;span class="Apple-style-span" style="font-size: 15px; line-height: 22px;">&lt;br /> &lt;/span>&lt;/font>
&lt;/div>
&lt;div>
&lt;span class="Apple-style-span" style="color: rgb(0, 31, 91); font-family: Arial, Helvetica, sans-serif; line-height: normal; font-size: 16px; ">다운 받기 =>&amp;nbsp;&lt;a href="http://www.sgvsarc.com/Regdownloads.asp?pcatid=PL19" target="_blank" title="[http://www.sgvsarc.com/Regdownloads.asp?pcatid=PL19]로 이동합니다.">Crystal REVS for C 4.60&lt;/a>&lt;/span>
&lt;/div>
&lt;div>
&lt;font class="Apple-style-span" color="#001F5B" face="Arial, Helvetica, sans-serif" size="4">&lt;span class="Apple-style-span" style="font-size: 16px; line-height: normal;">&lt;br /> &lt;/span>&lt;/font>
&lt;/div></description></item><item><title>패킷 생성기 (Colasoft Packet Builder)</title><link>https://openmicrolab.com/%ED%8C%A8%ED%82%B7-%EC%83%9D%EC%84%B1%EA%B8%B0-colasoft-packet-builder/</link><pubDate>Mon, 04 Oct 2010 06:00:11 +0000</pubDate><guid>https://openmicrolab.com/%ED%8C%A8%ED%82%B7-%EC%83%9D%EC%84%B1%EA%B8%B0-colasoft-packet-builder/</guid><description>
&lt;p>&lt;span style="font-size: 11pt; ">윈도우즈 기반의 패킷 생성기입니다. GUI 기반으로 되어 있어서 직관적이네요. &lt;/span>&lt;/p>
&lt;div>
&lt;span style="font-size: 11pt; ">&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile7.uf.144640284CA96D28246964.jpg" class="aligncenter" width="680" height="418" alt="" filename="packet generator.jpg" filemime="image/jpeg" />&lt;/span>
&lt;/div>
&lt;div>
&lt;span style="font-size: 11pt; ">&lt;a href="https://openmicrolab.com/images/1/cfile25.uf.11086F244CA96DB91A0AB1.exe" class="aligncenter" filename="pktbuilder10_build166.exe" filemime="application/x-dosexec" />cfile25.uf.11086F244CA96DB91A0AB1.exe&lt;/a>&lt;br /> &lt;/span>
&lt;/div>
&lt;div>
&lt;span style="font-size: 11pt; ">출처 :&amp;nbsp;&lt;/span>&lt;a href="http://www.colasoft.com/download/products/download_packet_builder.php">&lt;span style="font-size: 11pt; ">http://www.colasoft.com/download/products/download_packet_builder.php&lt;/span>&lt;/a>
&lt;/div>
&lt;div>
&lt;a href="http://www.colasoft.com/download/products/download_packet_builder.php">&lt;/a>&lt;/p>
&lt;div id="__KO_DIC_LAYER__" style="padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; position: fixed; z-index: 1e+009; overflow-x: hidden; overflow-y: hidden; border-top-width: 2px; border-right-width: 2px; border-bottom-width: 2px; border-left-width: 2px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-left-style: solid; border-top-color: rgb(51, 51, 119); border-right-color: rgb(51, 51, 119); border-bottom-color: rgb(51, 51, 119); border-left-color: rgb(51, 51, 119); display: none; ">
&lt;/div>
&lt;div>
&lt;span style="font-size: 11pt; ">참고로 원하는 패킷을 만들고 오른쪽 창에서 패킷을 선택해야 SEND 버튼이 활성화 됩니다.&lt;/span>
&lt;/div>
&lt;div>
&lt;/div>
&lt;/div></description></item><item><title>네트워크 패킷 생성기 (NPG: Network Packet Generator)</title><link>https://openmicrolab.com/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%ED%8C%A8%ED%82%B7-%EC%83%9D%EC%84%B1%EA%B8%B0-npg-network-packet-generator/</link><pubDate>Mon, 04 Oct 2010 05:54:33 +0000</pubDate><guid>https://openmicrolab.com/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%ED%8C%A8%ED%82%B7-%EC%83%9D%EC%84%B1%EA%B8%B0-npg-network-packet-generator/</guid><description>
&lt;p>&lt;span style="font-size: 11pt; ">&lt;span style="font-size: 11pt; ">요즘은 제가 필요한 것을 인터넷에서 찾으면 다 있네요. &lt;/span>&lt;/span>&lt;span class="Apple-style-span" style="line-height: 22px; font-size: 15px; ">&lt;span style="font-size: 11pt; ">누군가는 같은 고민을하고 고맙게도 만들었다는 사실… ^^&lt;/span>&lt;/span>&lt;/p>
&lt;div>
&lt;font class="Apple-style-span" size="4">&lt;span class="Apple-style-span" style="font-size: 15px; line-height: 22px;">&lt;br /> &lt;/span>&lt;/font>
&lt;/div>
&lt;div>
&lt;font class="Apple-style-span" size="4">&lt;span class="Apple-style-span" style="font-size: 15px; line-height: 22px;">&lt;span style="font-size: 11pt; ">NPG는&amp;nbsp;&lt;/span>&lt;/span>&lt;/font>&lt;span class="Apple-style-span" style="line-height: 22px; font-size: 15px; ">&lt;span style="font-size: 11pt; ">Winpcap을 사용하여 패킷을 보낼수 있는 &lt;/span>&lt;/span>&lt;span class="Apple-style-span" style="line-height: 22px; font-size: 15px; ">&lt;span style="font-size: 11pt; ">윈도우즈 기반의 네트워크 패킷 생성기입니다. 즉 따로 프로그래밍을 하지 않고 원하는 패킷을 만들어서 보낼 수 있는 툴입니다. 사용법도 간단하고 옵션도 많지 않기 때문에 바로 사용이 가능합니다. GPL 라이센스이므로 자유롭게 사용이 가능하네요.&lt;/span>&lt;/span>
&lt;/div>
&lt;div>
&lt;span class="Apple-style-span" style="line-height: 22px; font-size: 15px; ">&lt;a href="http://www.wikistc.org/wiki/Network_packet_generator">&lt;span style="font-size: 11pt; ">http://www.wikistc.org/wiki/Network_packet_generator&lt;/span>&lt;/a>&lt;span style="font-size: 11pt; ">&amp;nbsp;에 자세한 설명이 나와있고, 설치 파일은 이 페이지의 제일 아래보시면 다운받으실 수 있습니다.&lt;/span>&lt;/span>
&lt;/div>
&lt;div>
&lt;font class="Apple-style-span" size="4">&lt;span class="Apple-style-span" style="font-size: 15px; line-height: 22px;">&lt;br /> &lt;/span>&lt;/font>
&lt;/div>
&lt;div>
&lt;font class="Apple-style-span" size="4">&lt;span class="Apple-style-span" style="font-size: 15px; line-height: 22px;">&lt;span style="font-size: 11pt; ">&lt;b>사용법&lt;/b>&lt;/span>&lt;/span>&lt;/font>
&lt;/div>
&lt;div>
&lt;font class="Apple-style-span" size="4">&lt;span class="Apple-style-span" style="font-size: 15px; line-height: 22px;">&lt;span class="Apple-style-span" style="color: rgb(0, 0, 0); font-family: sans-serif; line-height: 19px; font-size: 13px; ">&lt;/p></description></item><item><title>유용한 툴 – IO Ninja</title><link>https://openmicrolab.com/%EC%9C%A0%EC%9A%A9%ED%95%9C-%ED%88%B4-io-ninja/</link><pubDate>Wed, 14 Jul 2010 08:31:48 +0000</pubDate><guid>https://openmicrolab.com/%EC%9C%A0%EC%9A%A9%ED%95%9C-%ED%88%B4-io-ninja/</guid><description>
&lt;p>이 툴은 Tibbo (&lt;A title="[http://www.tibbo.com]로 이동합니다." href="http://www.tibbo.com/" target=_blank>&lt;a href="https://www.tibbo.com">www.tibbo.com&lt;/a>&lt;/A>)에서 제공을 하는 Serial, TCP, UDP 전송기능 및 Wireshark의 packet capture 기능이 통합되어 있는 툴입니다. Packet capture를 위해서는 Wireshark 처럼 WInpcap을 사용을 합니다.&lt;br>
원래는 개인용으로 30불에 판매를 하는 툴인데, Evaluation 버젼은 &lt;A title="[http://tibbo.com/downloads/ninja.html ]로 이동합니다." href="http://tibbo.com/downloads/ninja.html%20" target=_blank>&lt;a href="http://tibbo.com/downloads/ninja.html">http://tibbo.com/downloads/ninja.html&lt;/a>&lt;/A> 에서 다운로드 가능합니다. 사용기간이 지나도 “Continue evaluation”버튼을 누르면 계속 사용이 가능합니다.&lt;br>
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile27.uf.1725DD044C3D73483655F8.jpg" class="aligncenter" width="426" height="292" alt="" filename="tibbo.jpg" filemime="image/jpeg" />&lt;br>
저 같은 경우는 TCP 테스트의 경우에는 &lt;A title="[http://liketheocean.tistory.com/entry/%EC%9C%A0%EC%9A%A9%ED%95%9C-%ED%88%B4-Socket-Tester]로 이동합니다." href="http://liketheocean.tistory.com/entry/%EC%9C%A0%EC%9A%A9%ED%95%9C-%ED%88%B4-Socket-Tester" target=_blank>Socket tester&lt;/A>를 사용을 하고, UDP를 테스트를 할때 이툴을 사용합니다. 물론 packet을 capture 할때는 Wireshark를 사용합니다. 사용법은 매우 간단한데, 프로그램을 실행시킨후 New Session에서 원하는 통신방식을 클릭하고, IP와 port를 설정을 하면 됩니다.&lt;br>
즉 TCP client의 경우는 Connection Socket을 선택을 하고,TCP server의 경우 Listener Socket을 선택, UDP의 경우 UDP Socket을 선택을 하면 됩니다.&lt;br>
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile22.uf.192B951F4C3D75240954D3.jpg" class="aligncenter" width="409" height="490" alt="" filename="Tibbo_UDP.jpg" filemime="image/jpeg" />&lt;br>
예를 들어 UDP Socket을 선택을 한 경우 Local에는 자신이 바인딩할 port를 입력을 하고, Remote에는 통신을 할 peer의 IP 및 Port number를 입력을 하고, 번개모양의 아이콘을 클릭하면 됩니다.&lt;br>
데이터는 아래창에 입력을 한후 send를 하면 됩니다.&lt;br>
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile23.uf.1676C2234C3D753836D3BD.jpg" class="aligncenter" width="680" height="444" alt="" filename="Tibbo_UDP2.jpg" filemime="image/jpeg" />&lt;/p></description></item><item><title>유용한 툴 – TCPView</title><link>https://openmicrolab.com/%EC%9C%A0%EC%9A%A9%ED%95%9C-%ED%88%B4-tcpview/</link><pubDate>Thu, 03 Jun 2010 00:37:06 +0000</pubDate><guid>https://openmicrolab.com/%EC%9C%A0%EC%9A%A9%ED%95%9C-%ED%88%B4-tcpview/</guid><description>
&lt;p>이 툴은 예전에 sysinternals 라는 회사에서 만든 겁니다. Windows 기반의 유용한 유틸리티들을 만들던 이 회사는  2006년 7월에 마이크로소프트사가 인수를 했네요. &lt;span style="text-decoration: underline; color: rgb(48, 88, 210);">&lt;a title="[http://www.sysinternals.com]로 이동합니다." target="_blank" href="http://www.sysinternals.com">&lt;a href="https://www.sysinternals.com">www.sysinternals.com&lt;/a>&lt;/a>&lt;/span>으로 접속하면 마이크로소프트사의 웹페이지가 열리고 관련된 내용이 나옵니다. &lt;span style="text-decoration: underline; color: rgb(48, 88, 210);">&lt;a title="[http://technet.microsoft.com/ko-kr/sysinternals/default%28en-us%29.aspx]로 이동합니다." target="_blank" href="http://technet.microsoft.com/ko-kr/sysinternals/default%28en-us%29.aspx">&lt;a href="http://technet.microsoft.com/ko-kr/sysinternals/default%28en-us%29.aspx">http://technet.microsoft.com/ko-kr/sysinternals/default%28en-us%29.aspx&lt;/a>&lt;/a>&lt;/span>&lt;/p>
&lt;p>이툴은 현재 연결된 TCP 접속과 UDP 채널들을 process 별로 보여줍니다. 아래 그림에서 보듯이 각각의 process가 어떤 port로 어디에 연결이 되어 있는지 알수 있습니다. 내가 알지 못하는 프로그램이 특정 port를 열고 있다던가 하는 것을 찾는데도 유용합니다.&lt;/p></description></item><item><title>유용한 툴 – Autoruns</title><link>https://openmicrolab.com/%EC%9C%A0%EC%9A%A9%ED%95%9C-%ED%88%B4-autoruns/</link><pubDate>Wed, 02 Jun 2010 11:14:17 +0000</pubDate><guid>https://openmicrolab.com/%EC%9C%A0%EC%9A%A9%ED%95%9C-%ED%88%B4-autoruns/</guid><description>
&lt;p>윈도우즈상에서 자동으로 실행되는 프로그램에 대한 정보를 보여줍니다.&lt;br>
이 프로그램을 한번 실행시켜보면 얼마나 많은 프로그램들이 나도 모르게 자동으로 실행되고 있었다는 것에 아마 놀랄겁니다.&lt;br>
&lt;span style="text-decoration: underline; color: rgb(92, 127, 176);">&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile22.uf.19230C044C063CC642FDA9.jpg" class="aligncenter" width="592" height="520" alt="" filename="Autoruns.jpg" filemime="image/jpeg" />&lt;br /> &lt;/span>&lt;span style="text-decoration: underline; color: rgb(92, 127, 176);">&lt;a title="[http://live.sysinternals.com/autoruns.exe]로 이동합니다." target="_blank" href="http://live.sysinternals.com/autoruns.exe">&lt;a href="http://live.sysinternals.com/autoruns.exe">http://live.sysinternals.com/autoruns.exe&lt;/a>&lt;/a>&lt;/span>  에서 다운로드 받을 수 있습니다.&lt;/p></description></item><item><title>유용한 툴 – Process Explorer</title><link>https://openmicrolab.com/%EC%9C%A0%EC%9A%A9%ED%95%9C-%ED%88%B4-process-explorer/</link><pubDate>Wed, 02 Jun 2010 11:07:13 +0000</pubDate><guid>https://openmicrolab.com/%EC%9C%A0%EC%9A%A9%ED%95%9C-%ED%88%B4-process-explorer/</guid><description>
&lt;p>이 툴 역시 &lt;a title="[http://www.sysinternals.com]로 이동합니다." target="_blank" href="http://www.sysinternals.com">Sysinternals&lt;/a>에서 만든 툴입니다. 현재 동작하는 프로세스들의 정보를 보여주며, 각 프로세스를 죽이거나 우선순위를 조정하는 기능들도 제공을 합니다. 더 많은 기능이 있으니 한번 다운로드 받아보기길……&lt;/p>
&lt;title>
Overview
&lt;/title>
&lt;link rel="StyleSheet" href="procexp.css" />
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile3.uf.19335F044C063B2759BE43.jpg" class="aligncenter" width="551" height="501" alt="" filename="Process Explorer.jpg" filemime="image/jpeg" />
&lt;span style="text-decoration: underline;">&lt;a title="[http://live.sysinternals.com/procexp.exe]로 이동합니다." target="_blank" href="http://live.sysinternals.com/procexp.exe">http://live.sysinternals.com/procexp.exe&lt;/a>&lt;/span> 에서 다운로드 받을 수 있습니다.</description></item><item><title>유용한 툴 – Terminal</title><link>https://openmicrolab.com/%EC%9C%A0%EC%9A%A9%ED%95%9C-%ED%88%B4-terminal/</link><pubDate>Wed, 26 May 2010 04:14:19 +0000</pubDate><guid>https://openmicrolab.com/%EC%9C%A0%EC%9A%A9%ED%95%9C-%ED%88%B4-terminal/</guid><description>
&lt;p>대부분의 임베디드 시스템에서 시리얼 인터페이스는 필수적으로 가지고 있다. 이 시리얼 인터페이스를 통해 디버깅도 하는데 이때 필요한 것이 터미널 프로그램이다. 일반적으로 윈도우즈의 Hyper Terminal을 써도 되지만 Hyper Terminal은 불편하기도 하고, null 문자를 제대로 수신 및 전송을 하지 못하는 버그도 있다.&lt;/p>
&lt;p>&lt;img src="https://openmicrolab.com/images/1/cfile3.uf.1320FF1F4BFC9EF5057204.jpg" class="aligncenter" width="539"
height="569" alt=""
filename="Terminal.jpg" filemime="image/jpeg" />&lt;br>
그리고 데이터를 Hex로 수신하거나 전송할때도 이 프로그램은 유용하며, 매크로 기능이 있어서 지정한 시간동안 반복적으로 데이터를 보낼때 유용하다.&lt;br>
Hex로 데이터를 보내려면 $를 붙여야 한다. 즉 0x0D를 보내려면 $0d 로 입력하면 된다.&lt;br>
물론 freeware..&lt;br>
&lt;a href="https://openmicrolab.com/images/1/cfile8.uf.176F5A214BFC9F82566D23.zip" class="aligncenter" filename="Terminal.zip" filemime="application/zip" /> cfile8.uf.176F5A214BFC9F82566D23.zip&lt;/a>&lt;/p></description></item><item><title>유용한 툴 – Socket Tester</title><link>https://openmicrolab.com/%EC%9C%A0%EC%9A%A9%ED%95%9C-%ED%88%B4-socket-tester/</link><pubDate>Wed, 26 May 2010 03:43:04 +0000</pubDate><guid>https://openmicrolab.com/%EC%9C%A0%EC%9A%A9%ED%95%9C-%ED%88%B4-socket-tester/</guid><description>
&lt;p>개발을 하다보면 테스트에 필요한 툴을 직접 만들어야 할때도 있다. 하지만 그전에 이미 누군가 만들어 놓은 툴이 있다면?&lt;br>
이것을 사용하는 것이 보다 효과적이다. 문제가 있을때 툴이 문제인지 보드가 문제인지 확인하기 전에, 일단 툴은 이상이 없다는 가정이 되니깐…&lt;/p>
&lt;p>네트워크 프로그래밍을 하다보면 테스트가 필요한데,&lt;br>
가장 간단한 TCP server 및 client 로 동작하는 툴이 Castalia Technologies에서 만든 Socket Tester 프로그램이다.&lt;/p>
&lt;p>확인해 보니 Castalia Technologies는 이젠 검색이 되지 않는데, 이 프로그램은 실행파일 하나로 동작하는 간단하지만 유용한 툴! 게다가 Freeware…&lt;/p></description></item></channel></rss>