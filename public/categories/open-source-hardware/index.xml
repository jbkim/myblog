<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Open Source Hardware on OpenMicroLab</title><link>https://openmicrolab.com/categories/open-source-hardware/</link><description>Recent content in Open Source Hardware on OpenMicroLab</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Thu, 22 Jul 2021 01:28:52 +0000</lastBuildDate><atom:link href="https://openmicrolab.com/categories/open-source-hardware/index.xml" rel="self" type="application/rss+xml"/><item><title>OSHW 현황 2021</title><link>https://openmicrolab.com/oshw-%ED%98%84%ED%99%A9-2021/</link><pubDate>Thu, 22 Jul 2021 01:28:52 +0000</pubDate><guid>https://openmicrolab.com/oshw-%ED%98%84%ED%99%A9-2021/</guid><description>
&lt;p>미국의 OSHW협회에서 발간한 &lt;strong>THE STATE OF OPEN SOURCE HARDWARE 2021&lt;/strong>. – &lt;a href="https://stateofoshw.oshwa.org/" target="_blank" rel="noopener">&lt;a href="https://stateofoshw.oshwa.org/">https://stateofoshw.oshwa.org/&lt;/a>&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://openmicrolab.com/images/2021/07/map-1024x572-1.png">&lt;img loading="lazy" class="aligncenter wp-image-4759 size-full" src="https://openmicrolab.com/images/2021/07/map-1024x572-1.png" alt="" width="1024" height="572" srcset="https://openmicrolab.com/images/2021/07/map-1024x572-1.png 1024w, https://openmicrolab.com/images/2021/07/map-1024x572-1-300x168.png 300w, https://openmicrolab.com/images/2021/07/map-1024x572-1-768x429.png 768w" sizes="(max-width: 1024px) 100vw, 1024px" />&lt;/a>&lt;/p>
&lt;ul>
&lt;li>OSHW가 여러 분야의 프로젝트에 사용&lt;/li>
&lt;li>인증은 2020년에 큰 폭으로 성장&lt;/li>
&lt;li>국가별 그래프: 미국이 주도하고 있고,  &lt;a href="https://certification.oshwa.org/kr000001.html" target="_blank" rel="noopener">한국&lt;/a>의 경우 내가 2019년에 진행한 3D 프린터가 유일함.&lt;/li>
&lt;li>Adafruit과 Sparkfun이 주도&lt;/li>
&lt;li>처음 설립을 주도한 사람들이 여성이라서 그런지, 써밋의 스피커에 대한 표(Women, Non-White)도 이쪽의 분위기를 알 수 있다.&lt;/li>
&lt;/ul></description></item><item><title>PlatformIO, Arduino에서의 핀매핑 정보</title><link>https://openmicrolab.com/platformio-arduino%EC%97%90%EC%84%9C%EC%9D%98-%ED%95%80%EB%A7%A4%ED%95%91-%EC%A0%95%EB%B3%B4/</link><pubDate>Thu, 18 Feb 2021 08:23:52 +0000</pubDate><guid>https://openmicrolab.com/platformio-arduino%EC%97%90%EC%84%9C%EC%9D%98-%ED%95%80%EB%A7%A4%ED%95%91-%EC%A0%95%EB%B3%B4/</guid><description>
&lt;p>펌웨어 개발을 할때 MCU의 I/O핀을 맵핑해서 사용을 하게 된다. 아두이노의 경우에는 실제 HW 핀 매핑을 MCU 벤더에서 제공하는 것 처럼 low level로 access하지 않고, 보드의 실크에 적혀있는 핀 번호로 access할 수 있도록 추상화를 해 놓았다. 실제로 핀 매핑이 어떻게 되는지 보려면 맥의 경우 $HOME/라이브러리/Arduino15/packages 아래에 각 플랫폼 별로 되어 있는 폴더를 확인해 봐야 한다. 예를 들면 adafruit의 경우 /packages/adafruit/hardware/nrf52/0.21.0/variants/feather_nrf52840_express/variant.h파일과 variant.cpp 파일을 확인해 보면 된다.&lt;/p>
&lt;p>PlatformIO도 아두이노와 마찬가지로 VSCode에 설치를 하면 맥에서는 $HOME/.platformio/packages 폴더 아래에 각각의 프레임워크에서 사용하는 bootloader, library들이 설치가 되어 있다.&lt;/p></description></item><item><title>전력소모를 줄이는 법 – Low Power System</title><link>https://openmicrolab.com/%EC%A0%84%EB%A0%A5%EC%86%8C%EB%AA%A8%EB%A5%BC-%EC%A4%84%EC%9D%B4%EB%8A%94-%EB%B2%95-low-power-system/</link><pubDate>Sun, 08 Dec 2019 13:50:02 +0000</pubDate><guid>https://openmicrolab.com/%EC%A0%84%EB%A0%A5%EC%86%8C%EB%AA%A8%EB%A5%BC-%EC%A4%84%EC%9D%B4%EB%8A%94-%EB%B2%95-low-power-system/</guid><description>
&lt;p>배터리를 사용하는 제품은 필수적으로 전력소모를 줄여야 한다. 시스템에서 전력소모를 줄이기 위한 방법은 다음과 같다.&lt;/p>
&lt;ul>
&lt;li>MCU의 동작 전압을 낮추고, 동작 Clock를 낮출 것&lt;/li>
&lt;li>리니어 레귤레이터 대신 스위칭 레귤레이터를 사용할 것&lt;/li>
&lt;li>MCU내의 사용하지 않는 peripheral을 disable할 것: Timer, BOD, Watch Dog Timer, UART, ADC 등 특히 ADC나 UART&lt;/li>
&lt;li>전류를 센싱하는 저항이 있다면 이 저항의 크기를 높일 것&lt;/li>
&lt;li>코드에서 최대한 Sleep 모드를 사용할 것&lt;/li>
&lt;/ul>
&lt;p>참고로 Attiny45의 경우 어떤 응용에서 동작시 1.6mA정도까지 줄여봤다. 그리고 &lt;a href="https://learn.sparkfun.com/tutorials/reducing-arduino-power-consumption/all" target="_blank" rel="noopener">이런 문서&lt;/a>도 참고하면 좋을 듯.&lt;/p></description></item><item><title>임베디드 시스템 개발 방법의 변화</title><link>https://openmicrolab.com/%EC%9E%84%EB%B2%A0%EB%94%94%EB%93%9C-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B0%9C%EB%B0%9C-%EB%B0%A9%EB%B2%95%EC%9D%98-%EB%B3%80%ED%99%94/</link><pubDate>Sat, 07 Jul 2018 04:08:43 +0000</pubDate><guid>https://openmicrolab.com/%EC%9E%84%EB%B2%A0%EB%94%94%EB%93%9C-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B0%9C%EB%B0%9C-%EB%B0%A9%EB%B2%95%EC%9D%98-%EB%B3%80%ED%99%94/</guid><description>
&lt;p>아두이노가 기존의 전통적인 하드웨어 개발을 바꾸어 놓았고, 이후에 Raspberry Pi와 저가의 ESP8266가 오픈소스하드웨어 시장의 3축으로 자리를 잡았다. 최근의 추세는 Adafruit의 제품이 이 시장을 주도하고 있는 느낌이다.&lt;/p>
&lt;img loading="lazy" class="alignnone " src="https://cdn-learn.adafruit.com/assets/assets/000/049/442/original/circuitpython_pyboards.jpg" width="661" height="341" />
&lt;p>&lt;a href="https://www.adafruit.com/feather" target="_blank" rel="noopener noreferrer">Feather&lt;/a> 보드의 폼펙터가 디펙토스텐다드화되고 있으며, Javascript를 사용하는 &lt;a href="https://www.espruino.com/" target="_blank" rel="noopener noreferrer">Espruino&lt;/a>, Python을 사용하는 &lt;a href="https://learn.adafruit.com/welcome-to-circuitpython?view=all" target="_blank" rel="noopener noreferrer">CircuitPython&lt;/a> 보드처럼 스크립트 프로그래밍 언어가 임베디드 개발에 사용되고 있다. 이런 보드들은 스트립트 언어를 사용하기 때문에 개발툴을 따로 설치할 필요가 없고, 보드를 컴퓨터의 USB 포트연결하면 외장 메모리도 잡히므로 파일하나만 수정해서 copy해서 넣으면 동작을 한다.&lt;/p></description></item><item><title>Arduino M0 Pinout</title><link>https://openmicrolab.com/arduino-m0-pinout/</link><pubDate>Sat, 21 Apr 2018 10:10:50 +0000</pubDate><guid>https://openmicrolab.com/arduino-m0-pinout/</guid><description>
&lt;h3 id="a-hrefhttpswwwarduinoccenguidearduinom0-target_blank-relnoopener-noreferrerarduino-m0a-pinout">&lt;a href="https://www.arduino.cc/en/Guide/ArduinoM0" target="_blank" rel="noopener noreferrer">Arduino M0&lt;/a> Pinout&lt;/h3>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt=""
class="image_figure image_external image_processed"
width="1024"
height="372"
src="https://openmicrolab.com/Arduino-M0-PRO-pinout_-1024x372_2097504728484769254.jpg"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h3 id="eagle-file--schematic">Eagle file &amp;amp; Schematic&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://www.arduino.cc/en/uploads/Main/arduino-M0-reference-design.zip">EAGLE FILES IN .ZIP&lt;/a>{.resource.eagle}&lt;/li>
&lt;li>&lt;a href="https://www.arduino.cc/en/uploads/Main/arduino-M0-schematic.pdf">SCHEMATICS IN .PDF&lt;/a>{.resource.schematics}&lt;/li>
&lt;/ul>
&lt;h3 id="pin-map-관련-소스">Pin map 관련 소스&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://github.com/arduino/ArduinoCore-samd/blob/master/variants/arduino_zero/variant.h" target="_blank" rel="noopener noreferrer">variant.h&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/arduino/ArduinoCore-samd/blob/master/variants/arduino_zero/variant.cpp" target="_blank" rel="noopener noreferrer">variant.cpp&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="a-hrefhttpslearnadafruitcomusing-atsamd21-sercom-to-add-more-spi-i2c-serial-portscreating-a-new-serial-target_blank-relnoopener-noreferrer추가적인-참고-자료a">&lt;a href="https://learn.adafruit.com/using-atsamd21-sercom-to-add-more-spi-i2c-serial-ports/creating-a-new-serial" target="_blank" rel="noopener noreferrer">추가적인 참고 자료&lt;/a>&lt;/h3></description></item><item><title>AVR Studio 4에서 Atmel Studio 7에서 마이그레이션</title><link>https://openmicrolab.com/avr-studio-4%EC%97%90%EC%84%9C-atmel-studio-7%EC%97%90%EC%84%9C-%EB%A7%88%EC%9D%B4%EA%B7%B8%EB%A0%88%EC%9D%B4%EC%85%98/</link><pubDate>Wed, 28 Mar 2018 02:16:21 +0000</pubDate><guid>https://openmicrolab.com/avr-studio-4%EC%97%90%EC%84%9C-atmel-studio-7%EC%97%90%EC%84%9C-%EB%A7%88%EC%9D%B4%EA%B7%B8%EB%A0%88%EC%9D%B4%EC%85%98/</guid><description>
&lt;p>AVR Studio 4에서는 AVRISP mkII의 윈도우즈 USB 디바이스 드라이버가 Jungo 드라이버로 장치관리자의 Jungo아래 WinDriver와 함께 설치가 된다. 하지만 Atmel Studio 7이 설치가 되면 이것이 삭제가 되면서 Atmel아래 AVRISP mkII가 생기면서 더이상 AVR Studio 4에서는 AVRISP mkII는 잡히지 않는다&lt;/p>
&lt;img loading="lazy" class="alignnone wp-image-4261" src="https://res.cloudinary.com/openmicrolab/image/upload/v1522203011/Jungo_eccmcw.png" width="229" height="214" />
&lt;p>문제는 Atmel Studio 7에서 오래전에 구매한 AVRISP mkII를 연결을 하니, firmware를 업데이트 하라고 나온다.&lt;/p>
&lt;img loading="lazy" class="alignnone wp-image-4262" src="https://res.cloudinary.com/openmicrolab/image/upload/v1522203018/avrisp_fwup_cvspmw.png" width="329" height="218" />
&lt;p>하지만 정품 툴이 아니라서 업데이트가 되지 않는다. 이것을 해결하려면 Tools &amp;gt; Options &amp;gt; Tool Settings &amp;gt;Check Firmware의 항목을 False로 하면 진행이 된다.&lt;/p></description></item><item><title>Mac OS에서 ESP8266 개발 환경</title><link>https://openmicrolab.com/mac-os%EC%97%90%EC%84%9C-esp8266-%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD/</link><pubDate>Wed, 13 Sep 2017 04:06:37 +0000</pubDate><guid>https://openmicrolab.com/mac-os%EC%97%90%EC%84%9C-esp8266-%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD/</guid><description>
&lt;h3 id="아두이노">아두이노&lt;/h3>
&lt;ol>
&lt;li>Arduino &amp;gt; Preferences… 의 메뉴에서 추가적인 보드매니저 URLs에 다음의 링크를 입력한다.&lt;/li>
&lt;/ol>
&lt;p>&lt;a href="http://arduino.esp8266.com/stable/package">http://arduino.esp8266.com/stable/package&lt;/a>_esp8266com_index.json&lt;/p>
&lt;img loading="lazy" class="alignnone wp-image-4040" src="https://res.cloudinary.com/openmicrolab/image/upload/v1505273144/ESP_Arduino_qgvl3z.png" width="459" height="164" />
&lt;ol start="2">
&lt;li>툴 &amp;gt; 보드 &amp;gt; 보드 매니저… 의 메뉴의 필터에 ESP를 입력 후 esp8266을 선택후 설치한다.&lt;/li>
&lt;/ol>
&lt;img loading="lazy" class="alignnone wp-image-4041" src="https://res.cloudinary.com/openmicrolab/image/upload/c_scale,h_451/v1505273144/ESP8266_Arduino_uewfwx.png" width="635" height="357" />
&lt;h3 id="a-hrefhttpsgithubcomsminghubsming-target_blank-relnoopener-noreferrersminga">&lt;a href="https://github.com/SmingHub/Sming" target="_blank" rel="noopener noreferrer">Sming&lt;/a>&lt;/h3>
&lt;p>맥에서는&lt;a href="https://github.com/SmingHub/Sming/wiki/MacOS-Quickstart" target="_blank" rel="noopener noreferrer"> https://github.com/SmingHub/Sming/wiki/MacOS-Quickstart&lt;/a> 이 링크의 내용대로 따라하면 별 무리가 없다. 즉 이클립스, 툴체인, ESP SDK를 설치하고 Sming core를 빌드한다.&lt;/p>
&lt;p>이클립스의 환경설정에서 SMING_HOME, ESP_HOME 설정을 한다.&lt;/p>
&lt;img loading="lazy" class="alignnone wp-image-4045" src="https://res.cloudinary.com/openmicrolab/image/upload/c_scale,w_569/v1505275296/ESP_Eclipse_xkwyit.png" width="569" height="371" />
&lt;p> &lt;/p>
&lt;p>SmingFramework의 Makefile-project.mk파일에서 ESPTOOL2의 경로를 다음과 같이 수정한다.&lt;/p>
&lt;blockquote>
&lt;p class="p1">
&lt;span class="s1">ESPTOOL2 ?&lt;/span>= /opt/esp-open-sdk/utils/esptool2
&lt;/p></description></item><item><title>CREATOR Pro 보드 사용 및 분석</title><link>https://openmicrolab.com/creator-pro-%EB%B3%B4%EB%93%9C-%EC%82%AC%EC%9A%A9-%EB%B0%8F-%EB%B6%84%EC%84%9D/</link><pubDate>Wed, 26 Jul 2017 07:09:23 +0000</pubDate><guid>https://openmicrolab.com/creator-pro-%EB%B3%B4%EB%93%9C-%EC%82%AC%EC%9A%A9-%EB%B0%8F-%EB%B6%84%EC%84%9D/</guid><description>
&lt;p>&lt;a href="http://www.rakwireless.com/en/" target="_blank" rel="noopener noreferrer">Rak Wireless&lt;/a>사의 CREATOR Pro 보드는 Arduino Uno의 폼펙터를 가지며, RAK473 WiFi 모듈을 사용하고 NXP사의 LPC11U35를 사용해서 mbed에서도 프로그래밍이 가능하고, Arduino에서도 프로그래밍이 가능하다. &lt;a href="http://wiki.rakwireless.com/doku.php?id=wisnode_series:creator_pro" target="_blank" rel="noopener noreferrer">WiKi&lt;/a>에 나온 이 제품의 정보는 다음과 같은데, Realtek사의 &lt;a href="https://www.amebaiot.com/en/" target="_blank" rel="noopener noreferrer">Ameba RTL8710보드&lt;/a>와 거의 동일하다.&lt;/p>
&lt;blockquote>
&lt;p>CREATOR is a programmable platform for developing all kind of IoT applications. CREATOR is equiped with various peripheral interfaces, including Wifi, GPIO, I2C, UART, PWM, ADC. Through these interfaces, CREATOR can connect with electronic components such as LED, switches, manometer, hygrometer, PM2.5 dust sensors etc.&lt;br>
The collected data can be uploaded via WiFi, and be utilized by applications on smart devices to realize IoT implementation.&lt;br>
CREATOR and Arduino Uno have similar size, and the pins on CREATOR are compatible with Arduino Uno. CREATOR uses Micro USB to supply power, which is common in many smart devices.&lt;br>
Currently, CREATOR currently supports Windows XP/7/8 32 and 64 bits and MAC OS operating systems. In this example, please use Arduino IDE with version 1.6.7 or later.&lt;/p></description></item><item><title>Adafruit 관련 정보</title><link>https://openmicrolab.com/adafruit-%EA%B4%80%EB%A0%A8-%EC%A0%95%EB%B3%B4/</link><pubDate>Sat, 24 Jun 2017 14:23:51 +0000</pubDate><guid>https://openmicrolab.com/adafruit-%EA%B4%80%EB%A0%A8-%EC%A0%95%EB%B3%B4/</guid><description>
&lt;p>2005년에 설립된 Adafruit 이야기&lt;/p>
&lt;blockquote>
&lt;p>Adafruit is now a highly successful community-driven electronics company, educational resource, and maker community thriving in SoHo, Manhattan.&lt;/p>&lt;/blockquote>
&lt;h3 id="description">Description&lt;/h3>
&lt;p class="p1">
&lt;span class="s1">Online learning resource, marketplace, and maker community for do-it-yourself electronics&lt;/span>
&lt;/p>
&lt;h3 id="technical-data">Technical Data&lt;/h3>
&lt;ul>
&lt;li>Adafruit employs 105 people in their 50,000-sq.-ft. factory in Manhattan&lt;/li>
&lt;li>100% woman owned, no loans, no venture capital&lt;/li>
&lt;li>Recorded $45 million in revenue in 2016&lt;/li>
&lt;li>Received its millionth order in January 2016&lt;/li>
&lt;li>14 million website page views and over 2 million uniques a month&lt;/li>
&lt;li>34 million YouTube views and over 207,000 subscribers&lt;/li>
&lt;li>Social media reach: 119,000+ Twitter followers, 2.1 million followers on G+ (4 million for Ladyada), 77,000 Facebook subscribers, 51,000 Instagram followers&lt;/li>
&lt;li>Limor Fried was featured on the cover of &lt;em>Wired&lt;/em> (April, 2011) and was named Entrepreneur of the Year by &lt;em>Entrepreneur&lt;/em> magazine in 2012&lt;/li>
&lt;li>Limor is a founding member of the NYC Industrial Business Advisory Council&lt;/li>
&lt;li>Adafruit is ranked No. 11 among the top 20 U.S. manufacturing companies, No.1 in New York City by &lt;em>Inc.&lt;/em> magazine, and is listed among &lt;em>Inc.&lt;/em>’s 5000 “fastest growing private companies”&lt;/li>
&lt;li>In 2016, Limor was named one of the White House’s “Champions of Change”&lt;/li>
&lt;/ul>
&lt;h3 id="features">Features&lt;/h3>
&lt;p>Adafruit’s 10 Most Popular Products&lt;/p></description></item><item><title>오픈소스하드웨어 인증 프로그램 – OSHW Certification Program</title><link>https://openmicrolab.com/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-%EC%9D%B8%EC%A6%9D-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-oshw-certification-program/</link><pubDate>Mon, 10 Oct 2016 09:31:29 +0000</pubDate><guid>https://openmicrolab.com/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-%EC%9D%B8%EC%A6%9D-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-oshw-certification-program/</guid><description>
&lt;p>&lt;a href="http://www.oshwa.org/" target="_blank">오픈소스하드웨어협회&lt;/a>에서 2015년 부터 작업한 오픈소스하드웨어 인증 프로그램을 개시했다. 이 인증은 &lt;a href="http://www.oshwa.org/definition/korean/" target="_blank">오픈소스하드웨어 정의&lt;/a>를 따른 다면 받을 수 있는 인증이고, 인증을 받은 이후에 여기서 벗어난다면 패널티가 있다.&lt;/p>
&lt;img loading="lazy" class="wp-image-3772 aligncenter" src="http://res.cloudinary.com/openmicrolab/image/upload/v1476091774/OSHWAcert_byp4td.png" width="448" height="356" />
&lt;li style="text-align: left;">
인증 관련 사이트: &lt;a href="http://certificate.oshwa.org/" target="_blank">http://certificate.oshwa.org/&lt;/a>
&lt;/li>
&lt;li style="text-align: left;">
인증 로고: &lt;a href="https://github.com/oshwa/certification-mark" target="_blank">https://github.com/oshwa/certification-mark&lt;/a>
&lt;/li>
&lt;p style="text-align: left;">
관련 자료 &amp;#8211; &lt;a href="http://www.oshwa.org/2016/10/07/announcing-the-oshwa-open-source-hardware-certification-program/" target="_blank">http://www.oshwa.org/2016/10/07/announcing-the-oshwa-open-source-hardware-certification-program/&lt;/a>
&lt;/p></description></item><item><title>Eagle CAD에 로고 넣기</title><link>https://openmicrolab.com/eagle-cad%EC%97%90-%EB%A1%9C%EA%B3%A0-%EB%84%A3%EA%B8%B0/</link><pubDate>Tue, 05 Jul 2016 03:43:47 +0000</pubDate><guid>https://openmicrolab.com/eagle-cad%EC%97%90-%EB%A1%9C%EA%B3%A0-%EB%84%A3%EA%B8%B0/</guid><description>
&lt;p>예전에 포스팅한 글 “&lt;a href="http://openmicrolab.com/eagle-cad%EB%A1%9C-%EC%9E%91%EC%97%85%ED%95%9C-pcb%EC%97%90-%EC%9D%B4%EB%AF%B8%EC%A7%80-%ED%8C%8C%EC%9D%BC-%EB%84%A3%EA%B8%B0/" target="_blank">Eagle CAD로 작업한 PCB에 이미지 파일 넣기&lt;/a>“에 대한 추가적인 정보.  보드에 넣을 이미지의 사이즈를 DPI로 맞추고 실제 이미지의 DPI의 배수로 맞추면 편하다.&lt;/p>
&lt;p>아래 그림은 72DPI로 작업한 이미지를 실제 사이즈에 맞추기 위한 설정&lt;/p>
&lt;img loading="lazy" class="wp-image-3699 aligncenter" src="http://res.cloudinary.com/openmicrolab/image/upload/v1467690110/Eagle_Image_insert_crvrs1.png" width="341" height="577" /></description></item><item><title>Cura 2.1 open beta 버전 빌드</title><link>https://openmicrolab.com/cura-2-1-open-beta-%EB%B2%84%EC%A0%84-%EB%B9%8C%EB%93%9C/</link><pubDate>Thu, 21 Apr 2016 06:03:26 +0000</pubDate><guid>https://openmicrolab.com/cura-2-1-open-beta-%EB%B2%84%EC%A0%84-%EB%B9%8C%EB%93%9C/</guid><description>
&lt;p>Ultimaker에서 기존 Cura와 다른 GUI를 가진 Cura를 개발해서 &lt;a href="https://ultimaker.com/en/community/20538-cura-21-open-beta-has-been-released" target="_blank">베타버전&lt;/a>을 내놓았다. 이유는&lt;/p>
&lt;blockquote>
&lt;p>This is the new, shiny frontend for Cura. daid/Cura is the old legacy Cura that everyone knows and loves/hates.&lt;br>
We re-worked the whole GUI code at Ultimaker, because the old code started to become a unmaintainable&lt;/p>&lt;/blockquote>
&lt;p>사실 daid의 Cura의 경우 맥에서의 빌드는 본인도 hell이라고 표현을 하는데, 이번 베타버전의 큐라를 빌드해 보니 스무스하게 빌드가 된다. 단 빌드 시간은 엄청나게 오래 걸린다.&lt;/p></description></item><item><title>아두이노에서 ESP8266 사용하기</title><link>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8%EC%97%90%EC%84%9C-esp8266-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link><pubDate>Wed, 06 Apr 2016 09:29:24 +0000</pubDate><guid>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8%EC%97%90%EC%84%9C-esp8266-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid><description>
&lt;h3 id="아두이노에서-esp8266-사용하기">아두이노에서 ESP8266 사용하기&lt;/h3>
&lt;ul>
&lt;li>아두이노 IDE는 1.6.4 이상의 버전을 설치&lt;/li>
&lt;li>아두이노의 환경설정에서 추가적인 보드매니저 URLs에 다음과 같이 입력&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;a href="http://arduino.esp8266.com/stable/package">http://arduino.esp8266.com/stable/package&lt;/a>_esp8266com_index.json&lt;/p>&lt;/blockquote>
&lt;ul>
&lt;li>툴 &amp;gt; 보드매니저에서 ESP8266을 검색후 ESP8266 보드를 설치한다.&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://openmicrolab.com/images/2016/04/arduino_board_maneger.png">&lt;img loading="lazy" class="aligncenter wp-image-3604" src="https://openmicrolab.com/images/2016/04/arduino_board_maneger.png" alt="arduino_board_maneger" width="491" height="276" srcset="https://openmicrolab.com/images/2016/04/arduino_board_maneger.png 801w, https://openmicrolab.com/images/2016/04/arduino_board_maneger-300x169.png 300w" sizes="(max-width: 491px) 100vw, 491px" />&lt;/a>&lt;/p>
&lt;ul>
&lt;li>설치후 툴 &amp;gt; 보드 메뉴에서 가지고 있는 ESP8266보드를 선택한다.&lt;/li>
&lt;/ul>
&lt;p>####&lt;img loading="lazy" class="alignnone" src="http://www.seeedstudio.com/depot/bmz_cache/1/15779b54e3a81b48686fc7fd13e8782d.image.200x150.jpg" alt="" width="247" height="185" />&lt;/p>
&lt;ul>
&lt;li>이 보드의 관련 정보: &lt;a href="https://github.com/nodemcu" target="_blank">&lt;a href="https://github.com/nodemcu">https://github.com/nodemcu&lt;/a>&lt;/a>&lt;/li>
&lt;li>ESP8266 보드들의 비교: &lt;a href="http://frightanic.com/iot/comparison-of-esp8266-nodemcu-development-boards/" target="_blank">&lt;a href="http://frightanic.com/iot/comparison-of-esp8266-nodemcu-development-boards/">http://frightanic.com/iot/comparison-of-esp8266-nodemcu-development-boards/&lt;/a>&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="핀레이아웃">핀레이아웃&lt;/h4>
&lt;img loading="lazy" class="alignnone" src="http://cdn.frightanic.com/blog/wp-content/uploads/2015/09/esp8266-nodemcu-dev-kit-v2-pins.png" alt="" width="436" height="336" />
&lt;h4 id="간단한-blink-test">간단한 Blink Test&lt;/h4></description></item><item><title>아두이노의 숨겨진 히스토리</title><link>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8%EC%9D%98-%ED%9E%88%EC%8A%A4%ED%86%A0%EB%A6%AC-%EB%B9%84%ED%99%94/</link><pubDate>Sun, 03 Apr 2016 13:38:24 +0000</pubDate><guid>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8%EC%9D%98-%ED%9E%88%EC%8A%A4%ED%86%A0%EB%A6%AC-%EB%B9%84%ED%99%94/</guid><description>
&lt;p>이제껏 몰랐던 아두이노의 숨겨진 이야기 &lt;a href="http://arduinohistory.github.io/" target="_blank">&lt;a href="http://arduinohistory.github.io/">http://arduinohistory.github.io/&lt;/a>&lt;/a>&lt;/p>
&lt;p>이 글의 저자는 Hernando Barragán로 아두이노가 차용한 &lt;a href="https://en.wikipedia.org/wiki/Wiring_(development_platform)" target="_blank">Wiring&lt;/a>을 개발한 사람이다. 이 이야기의 핵심은 자신이 학생으로 있을 때 개발한 wiring을 당시 교수로 있었던 Massimo Banzi가 fork해서 아두이노를 만들었다는 것. 잘못된 정보는 무책임한 미디어에 의해 더 확산이 되고… 암튼 당사자가 주장하는 얘기의 핵심은&lt;/p>
&lt;blockquote>
&lt;p>It is unethical and a bad example for academics to do something like this with the work of a student. Educators, more than anybody else, should avoid taking advantage of their student’s work.&lt;/p></description></item><item><title>Make파일을 사용해서 아두이노 스케치 다운로드</title><link>https://openmicrolab.com/make%ED%8C%8C%EC%9D%BC%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%84%9C-%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8-%EC%8A%A4%EC%BC%80%EC%B9%98%EB%A5%BC-%EB%8B%A4%EC%9A%B4%EB%A1%9C%EB%93%9C/</link><pubDate>Wed, 16 Mar 2016 02:31:53 +0000</pubDate><guid>https://openmicrolab.com/make%ED%8C%8C%EC%9D%BC%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%84%9C-%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8-%EC%8A%A4%EC%BC%80%EC%B9%98%EB%A5%BC-%EB%8B%A4%EC%9A%B4%EB%A1%9C%EB%93%9C/</guid><description>
&lt;p>아두이노 IDE를 사용하여 스케치를 다운로드를 하면 매번 컴파일을 해서 시간이 걸린다. 따라서  Make파일을 써서 스케치를 다운로드하고 있었는데, UART to USB칩이 Atmega16U2, FTDI에서는 이상이 없었는데, Silab CP2102를 사용하면 다운로드가 안된다. 원인을 찾아보니 Make파일에서 다음과 같이 AVRDUDE_PROGRAMMER를 stk500대신 wiring으로 하니 다운로드가 잘된다.&lt;/p>
&lt;blockquote>
&lt;p>#AVRDUDE_PROGRAMMER ?= stk500&lt;br>
AVRDUDE_PROGRAMMER ?= wiring&lt;/p>&lt;/blockquote>
&lt;p>&lt;a href="https://www.silabs.com/products/mcu/Pages/USBtoUARTBridgeVCPDrivers.aspx" target="_blank">CP2102 드라이버&lt;/a>, &lt;a href="https://www.silabs.com/Support%20Documents/TechnicalDocs/CP2102-9.pdf" target="_blank">CP2102데이터시트&lt;/a>&lt;/p></description></item><item><title>Teensy 사용하기</title><link>https://openmicrolab.com/teensy-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link><pubDate>Wed, 09 Mar 2016 08:01:24 +0000</pubDate><guid>https://openmicrolab.com/teensy-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid><description>
&lt;p>&lt;a href="https://www.pjrc.com/teensy/index.html" target="_blank">Teensy&lt;/a>는 아두이노 호환 보드로 Cortex M0, M4기반의 보드가 있어서 보다 높은 프로세싱이 필요한 응용에 적합하다. 이 보드를 사용하기 위해서는 &lt;a href="https://www.pjrc.com/teensy/teensyduino.html" target="_blank">Teensyduino&lt;/a>라는 프로그램을 설치해야 하는데, 이것은 기존 아두이노 IDE에 추가적으로 설치되는 코드들과 다운로드를 위한 프로그램이 포함되어 있다.&lt;/p>
&lt;p>&lt;a href="https://openmicrolab.com/images/2016/03/Teensy_USB_Development_Board_1.png">&lt;img loading="lazy" class="aligncenter wp-image-3570" src="https://openmicrolab.com/images/2016/03/Teensy_USB_Development_Board_1.png" alt="Teensy_USB_Development_Board_1" width="592" height="409" srcset="https://openmicrolab.com/images/2016/03/Teensy_USB_Development_Board_1.png 799w, https://openmicrolab.com/images/2016/03/Teensy_USB_Development_Board_1-300x207.png 300w" sizes="(max-width: 592px) 100vw, 592px" />&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://openmicrolab.com/images/2016/03/Teensy_USB_Development_Board.png">&lt;img loading="lazy" class="aligncenter size-full wp-image-3571" src="https://openmicrolab.com/images/2016/03/Teensy_USB_Development_Board.png" alt="Teensy_USB_Development_Board" width="485" height="298" srcset="https://openmicrolab.com/images/2016/03/Teensy_USB_Development_Board.png 485w, https://openmicrolab.com/images/2016/03/Teensy_USB_Development_Board-300x184.png 300w" sizes="(max-width: 485px) 100vw, 485px" />&lt;/a>&lt;/p>
&lt;p>먼저 아두이노를 설치하고 &lt;a href="https://www.pjrc.com/teensy/td_download.html" target="_blank">&lt;a href="https://www.pjrc.com/teensy/td_download.html">https://www.pjrc.com/teensy/td_download.html&lt;/a>&lt;/a> 이 사이트에서 파일을 다운로드해서 설치하는데 문제는 아두이노 1.0과 아두이노 1.6.x 이 동시에 설치가 되어 있으면 아두이노 1.0쪽에만 설치가 된다.(아두이노 1.6.x쪽을 지정이 안됨) 따라서 일단 아두이노 1.0을 언인스톨하고 1.6.x에 설치를 한 후 다시 아두이노 1.0을 설치를 해야 한다. Teensy 3.2의 경우 Cortex M4이기 때문에 SPI를 사용하는 응용은 &lt;a href="https://www.pjrc.com/teensy/td_libs.html" target="_blank">Teensy 라이브러리&lt;/a>에서 SPI 드라이버(&lt;a href="https://github.com/xxxajk/spi4teensy3">faster SPI library for Teensy 3.0&lt;/a>)도 같이 설치를 해야한다. 그리고 나머지 필요한 라이브러리는 아두이노 1.6.x의 라이브러리 매니저에서 추가한다.&lt;/p></description></item><item><title>아두이노 스케치를 네트워크로 업로드하기 – Arduino update remotely</title><link>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8-%EC%8A%A4%EC%BC%80%EC%B9%98%EB%A5%BC-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC%EB%A1%9C-%EC%97%85%EB%A1%9C%EB%93%9C%ED%95%98%EA%B8%B0-arduino-remote-firmware-update/</link><pubDate>Fri, 05 Feb 2016 07:47:54 +0000</pubDate><guid>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8-%EC%8A%A4%EC%BC%80%EC%B9%98%EB%A5%BC-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC%EB%A1%9C-%EC%97%85%EB%A1%9C%EB%93%9C%ED%95%98%EA%B8%B0-arduino-remote-firmware-update/</guid><description>
&lt;p>아두이노 보드의 펌웨어는 USB 케이블을 PC와 연결후 PC상에서 잡히는 것은 COM 포트를 통해 아두이노 IDE를 통해 업데이트가 된다. 좀 더 구체적으로는 &lt;a href="http://www.nongnu.org/avrdude/" target="_blank">avrdude&lt;/a>라는 프로그램을 써서 &lt;a href="http://www.atmel.com/images/doc2591.pdf" target="_blank">stk500프로토콜&lt;/a>을 사용해서 프로그램이 된다.&lt;/p>
&lt;h3 id="아두이노-스케치를-네트워크로-업로드하기">아두이노 스케치를 네트워크로 업로드하기&lt;/h3>
&lt;p>&lt;strong>필요한 것들&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.wiznet.co.kr/product-item/wiz550s2e/" target="_blank">Wiznet의 WIZ550S2E&lt;/a> –  1개&lt;/li>
&lt;li>Arduino pro mini – 테스트에 사용한 아두이노 보드&lt;/li>
&lt;li>와이어링 케이블 – WIZ550S2E와 Arduino pro mini를 연결&lt;/li>
&lt;li>TFTP server program – Windows의 경우 &lt;a href="http://tftpd32.jounin.net/tftpd32_download.html" target="_blank">tftpd&lt;/a>, 맥의 경우 &lt;a href="http://ww2.unime.it/flr/tftpserver/" target="_blank">Tftp Server&lt;/a>&lt;/li>
&lt;li>아두이노 IDE 프로그램&lt;/li>
&lt;/ul>
&lt;h4 id="케이블-연결-및-설정">케이블 연결 및 설정&lt;/h4>
&lt;p>WIZ550S2E는 Serial to Ethernet 게이트웨이 모듈로 시리얼로 들어온 데이터는 네트워크로 보내고, 네트워크에서 들어온 데이터는 시리얼로 보낸다. &lt;a href="http://wizwiki.net/wiki/doku.php?id=products:wiz550s2e:wiz550s2eds_kr" target="_blank">WIZ550S2E의 회로도&lt;/a>를 보면 J1에 있는 입력핀들은 풀업이 되어 있어서, 아두이노와 연결에 필요한 핀은  3V3D, GND, TXD, RXD, STATUS2 핀이다.&lt;/p></description></item><item><title>아두이노는 hex파일을 어디에 저장하는가?</title><link>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8%EB%8A%94-hex%ED%8C%8C%EC%9D%BC%EC%9D%84-%EC%96%B4%EB%94%94%EC%97%90-%EC%A0%80%EC%9E%A5%ED%95%98%EB%8A%94%EA%B0%80/</link><pubDate>Mon, 01 Feb 2016 10:32:30 +0000</pubDate><guid>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8%EB%8A%94-hex%ED%8C%8C%EC%9D%BC%EC%9D%84-%EC%96%B4%EB%94%94%EC%97%90-%EC%A0%80%EC%9E%A5%ED%95%98%EB%8A%94%EA%B0%80/</guid><description>
&lt;p>아두이노는 스케치를 avr-gcc 또는 arm-gcc를 사용해서 컴파일을 한다. 이 컴파일러의 위치는 맥의 경우 Arduino.app/Contents/Java/hardware/arduino/avr/platform.txt에 정의가 되어 있다. 즉 /Arduino.app/Contents/Java/hardware/tools/ 아래에 avr, arm 컴파일러가 컴파일을 한다.&lt;/p>
&lt;h4 id="그럼-아두이노는-hex-파일을-어디에-저장을-하는가">그럼 아두이노는 hex 파일을 어디에 저장을 하는가?&lt;/h4>
&lt;p>&lt;a href="https://openmicrolab.com/images/2016/02/Arduino_Prefernece.png">&lt;img loading="lazy" class="aligncenter wp-image-3525" src="https://openmicrolab.com/images/2016/02/Arduino_Prefernece.png" alt="Arduino_Prefernece" width="628" height="564" srcset="https://openmicrolab.com/images/2016/02/Arduino_Prefernece.png 905w, https://openmicrolab.com/images/2016/02/Arduino_Prefernece-300x270.png 300w" sizes="(max-width: 628px) 100vw, 628px" />&lt;/a>&lt;/p>
&lt;p>이것을 알아보기위해서는 Arduino &amp;gt; Preference의 설정에서 “다음 동작중 자세한 출력보기”의 컴파일 부분을 체크하면 hex파일이 생성되는 위치를 알 수 있다.  그런데 저장되는 폴더의 위치가…&lt;/p>
&lt;p>“/var/folders/4v/frv3pzr55x77gnv6_342m3wm0000gn/T/buildd18630de25a90c7712fff203789659dd.tmp/WebServer.ino.hex”&lt;/p>
&lt;p>이 폴더의 위치를 바꾸기 위해서는 아두이노를 종료하고 &lt;strong>Preference.txt&lt;/strong> 파일에 다음과 같이 “&lt;strong>build.path=&lt;/strong>” 항목을 추가하고 폴더의 위치를 기입후 다시 아두이노를 실행한다.&lt;/p></description></item><item><title>Yaler.net relay service</title><link>https://openmicrolab.com/yaler-net-relay-service/</link><pubDate>Fri, 02 Oct 2015 13:28:48 +0000</pubDate><guid>https://openmicrolab.com/yaler-net-relay-service/</guid><description>
&lt;p>네트워크 기능이 내장된 임베디드 디바이스의 경우 내부 네트워크에서 외부로 접속은 쉽지만, 반대로 외부에서 이 디바이스로의 접근은 방화벽등이 있으면 쉽지않고, 공유기에서 NAT, 포트포워딩 등의 기능을 사용해야 해서 일반사용자들은 이용이 어렵다.&lt;/p>
&lt;p>&lt;strong>Yaler.net relay service&lt;/strong>&lt;br>
&lt;a href="https://yaler.net/" target="_blank">Yaler.net&lt;/a>은 이런 문제점을 해결해 줄 수 있는 서비스인데 아래 그림을 보면 동작이 쉽게 이해가 되며, &lt;a href="https://yaler.net/help" target="_blank">튜토리얼 문서&lt;/a>를 보면 Arduino, Beaglebone, Raspberry Pi… 등의 유명한 보드들의 셋업가이드도 자세하게 나와있다.&lt;/p>
&lt;p>&lt;a href="https://openmicrolab.com/images/2015/10/Yaler_net_-_access_devices_from_the_Web.jpg">&lt;img loading="lazy" class="aligncenter wp-image-3429 size-full" src="https://openmicrolab.com/images/2015/10/Yaler_net_-_access_devices_from_the_Web.jpg" alt="Yaler_net_-_access_devices_from_the_Web" width="531" height="508" srcset="https://openmicrolab.com/images/2015/10/Yaler_net_-_access_devices_from_the_Web.jpg 531w, https://openmicrolab.com/images/2015/10/Yaler_net_-_access_devices_from_the_Web-300x287.jpg 300w" sizes="(max-width: 531px) 100vw, 531px" />&lt;/a>&lt;/p>
&lt;p>&lt;strong>비용&lt;/strong>&lt;br>
비용은 회원가입을 하면 30일 무료이고, 최저 10CHF (스위스 프랑)이니 약 10불정도이니 비싸지 않다.&lt;/p></description></item><item><title>OSHW Certification – 오픈소스하드웨어 인증</title><link>https://openmicrolab.com/oshw-certification-%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-%EC%9D%B8%EC%A6%9D/</link><pubDate>Fri, 02 Oct 2015 08:56:43 +0000</pubDate><guid>https://openmicrolab.com/oshw-certification-%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-%EC%9D%B8%EC%A6%9D/</guid><description>
&lt;p>지난 9월 19일 &lt;a href="http://2015.oshwa.org/about/" target="_blank">2015 OSHW 서밋&lt;/a>이 필라델피아에서 열렸다.  &lt;a href="http://ustre.am/1riMc" target="_blank">서밋의 Ustream&lt;/a>&lt;/p>
&lt;h3 id="oshw-certification-8211-오픈소스하드웨어-인증">OSHW Certification – 오픈소스하드웨어 인증&lt;/h3>
&lt;p>이미 &lt;a href="http://www.oshwa.org/definition/korean/" target="_blank">OSHW 의 정의&lt;/a>는 릴리즈가 되어 있지만 이 서밋에서는 OSHW Certification즉 오픈소스하드웨어 인증관련해서 버전 1.0일 릴리즈 됐다. OSHW 로고가 생기고 OSHW가 Selling Point가 된 지금 시장에서는 실제로 OSHW가 아닌 제품들이 이 로고를 사용함으로써 사용자에게 혼란을 주는 경우가 있다고 하는데, 이런 이슈들을 해결하기 위해 인증제도가 도입이 되는 것 같다.&lt;/p>
&lt;p>이 제도의 목표는 다음과 같다.&lt;/p>
&lt;blockquote>
&lt;p>Make it easier for the public to identify open source hardware.&lt;br>
Expand the reach of open hardware by making it easier for newer members to join the open source hardware community.&lt;/p></description></item><item><title>성당과 시장</title><link>https://openmicrolab.com/%EC%84%B1%EB%8B%B9%EA%B3%BC-%EC%8B%9C%EC%9E%A5/</link><pubDate>Thu, 24 Sep 2015 06:02:42 +0000</pubDate><guid>https://openmicrolab.com/%EC%84%B1%EB%8B%B9%EA%B3%BC-%EC%8B%9C%EC%9E%A5/</guid><description>
&lt;p>고전: 나중에 읽어 보기 위해 &lt;a href="http://korea.gnu.org/people/chsong/cb/catb-ko-20140121.pdf" target="_blank">링크&lt;/a>를…&lt;br>
&lt;a href="https://openmicrolab.com/images/2015/09/korea_gnu_org_people_chsong_cb_catb-ko-20140121_pdf.jpg">&lt;img loading="lazy" class="alignnone size-medium wp-image-3419" src="https://openmicrolab.com/images/2015/09/korea_gnu_org_people_chsong_cb_catb-ko-20140121_pdf-230x300.jpg" alt="korea_gnu_org_people_chsong_cb_catb-ko-20140121_pdf" width="230" height="300" srcset="https://openmicrolab.com/images/2015/09/korea_gnu_org_people_chsong_cb_catb-ko-20140121_pdf-230x300.jpg 230w, https://openmicrolab.com/images/2015/09/korea_gnu_org_people_chsong_cb_catb-ko-20140121_pdf.jpg 541w" sizes="(max-width: 230px) 100vw, 230px" />&lt;/a>&lt;/p></description></item><item><title>OSHWA를 중심으로 하는 OSHW의 이해</title><link>https://openmicrolab.com/oshwa%EB%A5%BC-%EC%A4%91%EC%8B%AC%EC%9C%BC%EB%A1%9C-%ED%95%98%EB%8A%94-oshw%EC%9D%98-%EC%9D%B4%ED%95%B4/</link><pubDate>Sat, 09 May 2015 17:22:56 +0000</pubDate><guid>https://openmicrolab.com/oshwa%EB%A5%BC-%EC%A4%91%EC%8B%AC%EC%9C%BC%EB%A1%9C-%ED%95%98%EB%8A%94-oshw%EC%9D%98-%EC%9D%B4%ED%95%B4/</guid><description>
&lt;p>개방형컴퓨터통신연구회(OSIA)에 기고한 글입니다.&lt;/p>
&lt;div style="margin-bottom: 5px;">
&lt;strong> &lt;a title="OSHWA를 중심으로 하는 OSHW의 이해" href="//www.slideshare.net/JinbuhmKim/oshwa-oshw" target="_blank">OSHWA를 중심으로 하는 OSHW의 이해&lt;/a> &lt;/strong> from &lt;strong>&lt;a href="//www.slideshare.net/JinbuhmKim" target="_blank">Jinbuhm Kim&lt;/a>&lt;/strong>
&lt;/div></description></item><item><title>아두이노 Serial to USB 사용하기</title><link>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8-serial-to-usb-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link><pubDate>Tue, 28 Apr 2015 06:50:34 +0000</pubDate><guid>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8-serial-to-usb-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid><description>
&lt;p>원본소스는 Mac에서 \Resource\Java\hardware\arduino\firmware\atmegaxxu2 아래에 있다. arduino-usbdfu 또는 arduino-usbserial 를 사용한다. 이 소스에는 USB 프레임워크인 &lt;a href="http://www.fourwalledcubicle.com/LUFA.php" target="_blank">LUFA&lt;/a>(Lightweight USB Framework for AVRs)가 빠져있으므로 &lt;a title="LUFA" href="http://www.fourwalledcubicle.com/LUFA.php" target="_blank">&lt;a href="http://www.fourwalledcubicle.com/LUFA.php">http://www.fourwalledcubicle.com/LUFA.php&lt;/a>&lt;/a> 에서 다운로드한다. 다운로드한 LUFA 폴더를 arduino-usbserial 폴더와 같은 위치에 복사한다.&lt;/p>
&lt;p class="p1">
&lt;span class="s1">make 파일에서 다음과 같은 내용을 수정한다.&lt;/span>
&lt;/p>
&lt;blockquote>
&lt;p class="p1">
&lt;strong>LUFA_PATH&lt;/strong>
&lt;/p>
&lt;p class="p1">
&lt;span class="s1"># Path to the LUFA library&lt;/span>
&lt;/p>
&lt;p class="p1">
&lt;span class="s1">LUFA_PATH = ../&lt;/span>
&lt;/p>
&lt;p class="p1">
&lt;strong>MCU&lt;/strong>
&lt;/p>
&lt;p class="p1">
MCU = at90usb162  #atmega16u2와 pin to pin 호환임
&lt;/p>&lt;/blockquote>
&lt;p class="p1">
컴파일된 hex파일은 avr isp등으로 write하면 된다.
&lt;/p>
&lt;p class="p1">
이렇게 작업한 내용은 &lt;a href="https://github.com/jbkim/usbserial" target="_blank">https://github.com/jbkim/usbserial&lt;/a>
&lt;/p>
&lt;p class="p1"></description></item><item><title>CAM350에서 Eagle CAD NC drill 데이터를 제대로 불러오기</title><link>https://openmicrolab.com/cam350%EC%97%90%EC%84%9C-eagle-cad-nc-drill-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EC%A0%9C%EB%8C%80%EB%A1%9C-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0/</link><pubDate>Fri, 24 Apr 2015 09:54:17 +0000</pubDate><guid>https://openmicrolab.com/cam350%EC%97%90%EC%84%9C-eagle-cad-nc-drill-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EC%A0%9C%EB%8C%80%EB%A1%9C-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0/</guid><description>
&lt;img loading="lazy" class="alignnone" src="http://openmicrolab.cdn2.cafe24.com/cam350_merge.png" alt="" width="326" height="367" />
&lt;p>위 그림은 CAM350에서 Eagle CAD로 만든 거버데이터를 Auto import로 불러온 것이다. drill data의 좌표가 맞지 않아서 우측 상단에 표시된 것 을 볼 수 있다. 이렇게 된 이유는 Eagle CAD에서 NC 데이터를 출력하는 포맷은 2.5인데 CAM350의 기본 설정은 2.4이다. 따라서 다음과 같이 CAM350의 Auto import 포맷에서 Digits항목을 2, 5로 수정하면 된다.&lt;/p>
&lt;img loading="lazy" class="alignnone" src="http://openmicrolab.cdn2.cafe24.com/cam350_drill_setting.png" alt="" width="475" height="304" />
&lt;p>단순히 거버 데이터를 보는 수준이면 상관이 없는데 샘플 PCB가격을 아끼기 위해 &lt;a href="http://openmicrolab.com/cam350%EC%9C%BC%EB%A1%9C-2%EA%B0%9C%EC%9D%98-%EA%B1%B0%EB%B2%84%EB%A5%BC-%ED%95%98%EB%82%98%EB%A1%9C-%ED%95%A9%EC%B9%98%EA%B8%B0/" target="_blank">2개 이상의 거버데이터를 합기기&lt;/a>(영어로 PCB Penalization)위해서는 중요한 이슈이다.&lt;/p></description></item><item><title>USB 디바이스의 VID, PID</title><link>https://openmicrolab.com/usb-%EB%94%94%EB%B0%94%EC%9D%B4%EC%8A%A4%EC%9D%98-vid-pid/</link><pubDate>Sat, 28 Mar 2015 11:34:39 +0000</pubDate><guid>https://openmicrolab.com/usb-%EB%94%94%EB%B0%94%EC%9D%B4%EC%8A%A4%EC%9D%98-vid-pid/</guid><description>
&lt;p>USB 디바이스 제품을 개발하려면 필요한 것이 USB 디바이스의 VID(Vendor ID), PID(Product ID)이다. 여기서 VID는 제조사의 ID이고, PID 제조사의 제품의 ID로 이해할 수 있는데 각각 2바이트로 VID-PID의 쌍으로 수많은 USB 디바이스와 구별이 가능하게 된다.  VID, PID는 USB Implementers Forum, Inc.(&lt;a href="http://www.usb.org" target="_blank">&lt;a href="http://www.usb.org">http://www.usb.org&lt;/a>&lt;/a>)에서 발급을 하는데 문제는 발급하는 데 드는 비용이 $5,000이다.&lt;/p>
&lt;p>발급 신청서 링크 –&lt;a href="%20http://www.usb.org/developers/vendor/VID_Only_Form_withCCAuth_010113.pdf" target="_blank"> http://www.usb.org/developers/vendor/VID_Only_Form_withCCAuth_010113.pdf&lt;/a>&lt;/p>
&lt;p>이 발급 신청서에 보면 다음과 같이 발급된 VID는 다른 사람에게 판매할 수 없다고 되어 있다. 예외 조항은  “special circumstances, and then only upon prior written approval by USB-IF”&lt;/p></description></item><item><title>ARM mbed – 데모 (big mouth billy bass)</title><link>https://openmicrolab.com/arm-mbed-%EB%8D%B0%EB%AA%A8-big-mouth-billy-bass/</link><pubDate>Sat, 28 Feb 2015 06:09:33 +0000</pubDate><guid>https://openmicrolab.com/arm-mbed-%EB%8D%B0%EB%AA%A8-big-mouth-billy-bass/</guid><description>
&lt;p>ARM mbed는 2008년 ARM사의 직원이었던 Simon과 Chris가 Rapid Prototyping을 위한 개발 보드를 기획하면서 프로젝트가 시작이 되었다. 이때 ARM 코어를 사용하는 NXP사의 LPC1768칩을 사용하여 모듈을 구성하였으며, 2009년에 보스턴에서 열린 ESC(Embedded System Conference)에서 NXP사의 부스에서 모듈이 릴리즈가 되었고 물고기가 트위터 메시지를 네트워크로 수신해서 음성으로 출력하는 데모를 진행하였다.&lt;br>
2009년도 관련 동영상&lt;/p></description></item><item><title>Arduino Yún 뒷 이야기</title><link>https://openmicrolab.com/arduino-yun-%EB%92%B7-%EC%9D%B4%EC%95%BC%EA%B8%B0/</link><pubDate>Thu, 26 Feb 2015 02:19:36 +0000</pubDate><guid>https://openmicrolab.com/arduino-yun-%EB%92%B7-%EC%9D%B4%EC%95%BC%EA%B8%B0/</guid><description>
&lt;img loading="lazy" class="alignnone" src="http://arduino.cc/en/uploads/Main/ArduinoYunFront_2.jpg" alt="Arduino Yun" width="1600" height="1067" />
&lt;p>&lt;a href="http://arduino.cc/en/Main/ArduinoBoardYun" target="_blank">Arduino YUN&lt;/a>은 Artheros의 AR9331칩셋을 사용하는 모듈을 이용해서 만든 무선랜 보드이다. 물론 이 모듈에는 리눅스가 돌아간다. 전통적으로 무선랜 칩셋업체들은 무선랜 장비를 개발할 만한 업체에게 선별적으로 자신들의 무선랜 레퍼런스 보드의 회로도나 관련 자료들을 NDA를 맺고 공개한다. 이것은 자료를 완전히 오픈했을때 기술지원이 감당이 되지 않아서 이기도 하다. Arduino Yun은 &lt;a href="http://www.doghunter.org/?portfolio=arduino-yun" target="_blank">dog hunter&lt;/a>라는 업체로 부터 공급을 받아서 제품화한 것인데 모듈 내부의 회로도는 공개가 되지 않고 인터페이스만 공개가 되어 있다.   &lt;a href="http://arduino.cc/en/uploads/Main/arduino-Yun-schematic.pdf" target="_blank">&lt;a href="http://arduino.cc/en/uploads/Main/arduino-Yun-schematic.pdf">http://arduino.cc/en/uploads/Main/arduino-Yun-schematic.pdf&lt;/a>&lt;/a>&lt;/p>
&lt;p>Arduino 또는 dog hunter에서 Artheros랑 NDA를 맺고 모든 자료를 받았을 것인데, 오픈할 수 없는 상황이다. 하지만 &lt;a href="http://forum.arduino.cc/index.php?topic=187766.0" target="_blank">Arduino포럼에는 회로도를 오픈하라는 것&lt;/a>…재미있는 것은 처음 이슈를 제기한 사람 [&lt;a href="https://github.com/Squonk42/TL-WR703N" target="_blank">squonk42&lt;/a>]이 TL-WR703N을 리버스 엔지니어링 한 사람이라는… 물론 OSHW의 원칙에 따르면 일부만 오픈해도 상관이 없다. 하지만 그동안의 Arduino의 명성에 좋지않은 이슈라는 것.&lt;/p></description></item><item><title>Arduino Scuola와 3D 프린팅</title><link>https://openmicrolab.com/arduino-scuola%EC%99%80-3d-%ED%94%84%EB%A6%B0%ED%8C%85/</link><pubDate>Mon, 19 Jan 2015 04:10:44 +0000</pubDate><guid>https://openmicrolab.com/arduino-scuola%EC%99%80-3d-%ED%94%84%EB%A6%B0%ED%8C%85/</guid><description>
&lt;p>최근에 발견한 Arduino Scuola 사이트: &lt;a href="http://scuola.arduino.cc/" target="_blank">&lt;a href="http://scuola.arduino.cc/">http://scuola.arduino.cc/&lt;/a>&lt;/a>&lt;/p>
&lt;img loading="lazy" class="alignnone" src="http://openmicrolab.cdn2.cafe24.com/Arduino_Scuola.png" alt="Arduino Scuola" width="680" height="609" />
&lt;p>이 사이트는 &lt;a href="https://learn.adafruit.com/guides/latest" target="_blank">Adafruit&lt;/a>와 &lt;a href="https://learn.sparkfun.com/?_ga=1.96420316.1388457354.1418889582" target="_blank">Sparkfun의 learn사이트&lt;/a>와 같은 컨셉의 사이트인데, 아직 자료가 많지 않아서 인지 메인 사이트에서 링크도 없다. 하지만 아두이노의 블로그의 글에서 언급한 내용에 이 사이트의 내용이 링크로 연결되는 것으로 보아 곧 활성화가 될 것같다. 오픈소스 하드웨어 비즈니스에서 이러한 접근은 몇 년 전부터 내가 예측하고 있던 방향이다. 즉 초보자 들이 쉽게 따라할 수 있는 컨텐츠를 제공하고, 관련된 부품이나 키트를 온라인 샵에서 같이 판매를 하는 것이다.&lt;/p>
&lt;p>또 한가지 추세는 &lt;strong>3D프린팅과 디지털기기의 결합&lt;/strong>이다. 아주 &lt;a href="http://scuola.arduino.cc/courses/lessons/cover/gQ7noDN" target="_blank">간단한 예&lt;/a>가 소개가 되고 있는데, 이런 추세는 더 활발해 질 것 같다. 즉 디지털 기기에 3D 프린터를 사용하여 개인화된 내용이 부가되는 형태이다. 이런 식의 접근을 하고 있는 업체중 하나는 &lt;a href="http://www.3dracers.com/" target="_blank">3D Racers&lt;/a>인데 온라인에서 장난감 자동차의 외관을 사용자가 디자인 할 수 있다.&lt;/p></description></item><item><title>아두이노 &amp; 이클립스 (Arduino &amp; Eclipse)</title><link>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8-%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4-arduino-eclipse/</link><pubDate>Tue, 25 Nov 2014 06:07:29 +0000</pubDate><guid>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8-%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4-arduino-eclipse/</guid><description>
&lt;p>지난번 포스팅 &lt;a href="http://openmicrolab.com/%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4eclipse%EC%97%90%EC%84%9C-%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8arduino%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/" target="_blank">‘이클립스(Eclipse)에서 아두이노(Arduino)사용하기’&lt;/a> 은 이클립스에서 플러그인을 설치해서 아두이노를 사용하는 것이었다. 하지만 아두이노는 command line에서 컴파일을 지원하므로 이런 플러그인 없이도 make 파일의 위치, 컴파일러 정보등만 이클립스에 설정하면 사용이 가능하다.&lt;/p>
&lt;h3 id="1-프로젝트-만들기">1. 프로젝트 만들기&lt;/h3>
&lt;p>File &amp;gt; New &amp;gt; Makefile Project with Existing Code를 선택후 Project Name을 설정하고 Existing Code Location을 설정한다.&lt;/p>
&lt;h3 id="2-project-properties">2. Project Properties&lt;/h3>
&lt;p>C/C++ Build항목에서 Build location의 Build directoty 설정은 makefile이 있는 위치를 지정한다.&lt;/p>
&lt;p>C/C++ General 항목의 Path and Symbols에서 Include할 폴더들을 입력하고  Symbol에도 미리 정의돼야 할 심볼을 입력한다.&lt;/p></description></item><item><title>아두이노에서 정의되지 않은 핀 사용하기</title><link>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8%EC%97%90%EC%84%9C-%EC%A0%95%EC%9D%98%EB%90%98%EC%A7%80-%EC%95%8A%EC%9D%80-%ED%95%80-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link><pubDate>Mon, 08 Sep 2014 14:14:16 +0000</pubDate><guid>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8%EC%97%90%EC%84%9C-%EC%A0%95%EC%9D%98%EB%90%98%EC%A7%80-%EC%95%8A%EC%9D%80-%ED%95%80-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid><description>
&lt;p>아두이노 보드는 각종 라이브러리들을 잘 만들어 놓아 쉽게 프로그래밍이 가능하다. 일례로 가장 간단한 예제인 blink 예제를 보면 &lt;a href="http://arduino.cc/en/Reference/pinMode" target="_blank">pinMode()&lt;/a> 함수를 사용해서 온오프할 핀을 출력으로 정하고 &lt;a href="http://arduino.cc/en/Reference/digitalWrite" target="_blank">digitalWrite()&lt;/a>함수를 사용해서 LED를 온오프한다.&lt;/p>
&lt;p>_ * 참고로 pinMode() 함수를 사용할때 주의할 점은 인자로 받아들이는 pin의 숫자가 아두이노 보드에 명기된 숫자이지 AVR칩의 pin number가 아니라는 점이다._&lt;br>
&lt;a href="http://arduino.cc/en/Reference/pinMode" target="_blank">&lt;img loading="lazy" class="alignnone" src="http://openmicrolab.cdn2.cafe24.com/Arduino_-_PinMapping2560.png" alt="" width="662" height="686" />&lt;/a>&lt;/p>
&lt;p>Arduino Uno보드의 경우는 Atmega328칩의 모든  핀들이 보드에 나와있어서 문제가 없으나 위 그림과 같이 Arduino Mega보드의 경우 일부 핀들이 보드에 나와있지 않다. 보드에 핀이 나와있지 않으니 라이브러리에도 핀들이 정의되어 있지 않다. 따라서 만약에 이 핀들을 사용을 하려려면 라이브러리를 수정을 해야 하며, &lt;a href="http://arduino.cc/en/Reference/pinMode" target="_blank">pinMode()&lt;/a> 라는 함수가 어떻게 동작하는 지 알아야 한다.&lt;/p></description></item><item><title>이클립스(Eclipse)에서 아두이노(Arduino)사용하기</title><link>https://openmicrolab.com/%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4eclipse%EC%97%90%EC%84%9C-%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8arduino%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link><pubDate>Tue, 12 Aug 2014 03:08:15 +0000</pubDate><guid>https://openmicrolab.com/%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4eclipse%EC%97%90%EC%84%9C-%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8arduino%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid><description>
&lt;h3 id="이클립스-개발환경에서-아두이노사용하기">이클립스 개발환경에서 아두이노사용하기&lt;/h3>
&lt;ol>
&lt;li>이클립스(Eclipse) 설치 &lt;a href="http://www.eclipse.org/downloads/" target="_blank">&lt;a href="http://www.eclipse.org/downloads/">http://www.eclipse.org/downloads/&lt;/a>&lt;/a> &lt;strong>Eclipse IDE for C/C++ Developers&lt;/strong> 를 설치&lt;/li>
&lt;li>아두이노 이클립스 플러그인:  &lt;a href="http://www.baeyens.it/eclipse/" target="_blank">저작자의 홈페이지&lt;/a> – &lt;a href="http://www.baeyens.it/eclipse/installAdvice.shtml" target="_blank">Installation advice&lt;/a>, 가 있으니 참고. 플러그인 설치는 이클립스를 실행후 **Help &amp;raquo; Install New Software…**를 실행후 “&lt;strong>&lt;a href="http://www.baeyens.it/eclipse/update">http://www.baeyens.it/eclipse/update&lt;/a>&lt;/strong>” 주소를 입력하고 Add 버튼을 누른다. 그러면 &lt;strong>Arduino Eclipse extensions&lt;/strong> 이 나타나는데 이것을 선택하면 설치가 된다.&lt;/li>
&lt;li>&lt;strong>Preferences &amp;gt; General &amp;gt; Workspace&lt;/strong>를 선택하고 **“Save automatically before build”**를 선택 &lt;img loading="lazy" class="alignnone" alt="" src="http://openmicrolab.cdn2.cafe24.com/eclipse_arduino1.png" width="780" height="612" />&lt;/li>
&lt;li>&lt;strong>Arduino&lt;/strong>항목에서 &lt;strong>Arduino가 설치된 path와 library path&lt;/strong> 를 입력하고, &lt;strong>Use Arduino ODE tools in eclipse&lt;/strong>를 선택한다. 그리고 test serial dll를 클릭해서 serial drive가 동작하는 지 확인한다.&lt;img loading="lazy" class="alignnone" alt="" src="http://openmicrolab.cdn2.cafe24.com/eclipse_arduino2.png" width="909" height="608" />&lt;/li>
&lt;li>아두이노 프로젝트 만들기: &lt;strong>New &amp;raquo; Project &amp;raquo; Arduino &amp;raquo; New Arduino sketch&lt;/strong>를 선택, 프로젝트 이름를 설정, 보드와 COM port를 설정하면 setup()과 loop()함수가 만들어진 빈 프로젝트가 생긴다.&lt;/li>
&lt;li>간단한 blink 예제를 만들고 &lt;strong>Project &amp;raquo; Build All&lt;/strong>하면 컴파일이되고, &lt;strong>AVR &amp;raquo; Upload Project to Target Devic&lt;/strong>e를 선택하면 아두이노 보드에 프로그래밍이된다.&lt;img loading="lazy" class="alignnone" alt="" src="http://openmicrolab.cdn2.cafe24.com/Arduino_Eclipse_Test.png" width="684" height="472" />&lt;/li>
&lt;/ol></description></item><item><title>오픈소스하드웨어 체크리스트</title><link>https://openmicrolab.com/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-%EC%B2%B4%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%8A%B8/</link><pubDate>Thu, 26 Jun 2014 01:26:13 +0000</pubDate><guid>https://openmicrolab.com/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-%EC%B2%B4%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%8A%B8/</guid><description>
&lt;p>OSHWA에서 발표한 오픈소스하드웨어 체크리스트. 이것은 오픈소스하드웨어 정의 및 베스트 프랙티스의 내용을 기반으로 체크리스트를 만들었다.  그리고 오픈소스하드웨어가 반드시 갖추어야 할 요건에  관한 문서도 유용하다.&lt;/p>
&lt;p>&lt;span style="line-height: 1.5em;">❏      Does your hardware comply with the open source hardware definition: &lt;/span>&lt;a style="line-height: 1.5em;" href="http://www.oshwa.org/definition/">&lt;a href="http://www.oshwa.org/definition/">http://www.oshwa.org/definition/&lt;/a>&lt;/a>&lt;/p>
&lt;p>❏      Have you allowed anyone to study, modify, distribute, make and sell the hardware?&lt;/p>
&lt;p>❏      If you used a Creative Commons license for your source files (documentation), did you chose options compatible with the definition? Non-Commercial and No Derivatives are not open source.&lt;/p></description></item><item><title>인포그래픽 – 오픈소스하드웨어</title><link>https://openmicrolab.com/%EC%9D%B8%ED%8F%AC%EA%B7%B8%EB%9E%98%ED%94%BD-%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4/</link><pubDate>Thu, 26 Jun 2014 01:15:12 +0000</pubDate><guid>https://openmicrolab.com/%EC%9D%B8%ED%8F%AC%EA%B7%B8%EB%9E%98%ED%94%BD-%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4/</guid><description>
&lt;p>&lt;a href="http://www.oshwa.org/" target="_blank">OSHWA&lt;/a>에서 공개한 인포그래픽.  OSHW definition 을 인포그래픽으로 만든 것.&lt;/p>
&lt;div style="width: 600px" class="wp-caption alignnone">
&lt;img loading="lazy" alt="" src="http://openmicrolab.cdn2.cafe24.com/what-is-open-source-hardware.jpg" width="590" height="764" />
&lt;p class="wp-caption-text">
오픈소스하드웨어 &amp;#8211; 인포그래픽
&lt;/p>
&lt;/div></description></item><item><title>Open Source Hardware 관련 기사들</title><link>https://openmicrolab.com/open-source-hardware-%EA%B4%80%EB%A0%A8-%EA%B8%B0%EC%82%AC%EB%93%A4/</link><pubDate>Sun, 20 Apr 2014 15:49:13 +0000</pubDate><guid>https://openmicrolab.com/open-source-hardware-%EA%B4%80%EB%A0%A8-%EA%B8%B0%EC%82%AC%EB%93%A4/</guid><description>
&lt;p>좀 오래된 기사도 있지만 나름 읽어볼 만 하다.&lt;/p>
&lt;ul>
&lt;li>
&lt;h3 id="a-hrefhttpwwwcnbccomid101133560-target_blankhardware-is-now-open-sourced-for-businessa">&lt;a href="http://www.cnbc.com/id/101133560" target="_blank">Hardware is now open (sourced) for business&lt;/a>&lt;/h3>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;em>Adafruit’s revenue has tripled year over year, and the company projects full-year revenue for 2013 will reach $20 million. Customers are not just limited to hobbyists and isolated makers, said Limor Fried, founder of Adafruit.&lt;/em>&lt;/p>
&lt;p>“What we’re building is really twofold,” said co-founder David Lang. “The individual tool and specific device is great. The other half is this community of people who have assembled.” – OpenRoV&lt;/p></description></item><item><title>Maker Faire Shenzhen</title><link>https://openmicrolab.com/maker-faire-shenzhen/</link><pubDate>Tue, 15 Apr 2014 04:02:32 +0000</pubDate><guid>https://openmicrolab.com/maker-faire-shenzhen/</guid><description>
&lt;p>&lt;span style="line-height: 1.5em;">지난 4월 6-7일 중국 심천에서 메이커페어가 열렸다. 이번이 3번째인데, 이전까지는 미니 메이커 페어였는데 이번에는 정식 메이커페어의 이름을 달고 규모도 크고 글로벌하게 진행이 됐다. 장소는 심천의 Shekou 지역인데 이곳은 외국인도 많이 사는 것 같고 거리는 중국같지 않게(?) 깔금하고 공방, 갤러리, 카페가 많은 지역이다. 외국인이 꽤 있는 이유는 아마도 이 지역에서 하드웨어 스타트업들이 많이 생기고, 생산을 중국에서 하는 외국 업체들이 많아서이지 않을가 추측을 해본다.&lt;/span>&lt;/p>
&lt;div id="attachment_2974" style="width: 624px" class="wp-caption alignnone">
&lt;a href="https://openmicrolab.com/images/2014/04/2014-04-06-09.29.08.jpg">&lt;img aria-describedby="caption-attachment-2974" loading="lazy" class="wp-image-2974 " alt="2014-04-06 09.29.08" src="https://openmicrolab.com/images/2014/04/2014-04-06-09.29.08-1024x768.jpg" width="614" height="461" srcset="https://openmicrolab.com/images/2014/04/2014-04-06-09.29.08-1024x768.jpg 1024w, https://openmicrolab.com/images/2014/04/2014-04-06-09.29.08-300x225.jpg 300w" sizes="(max-width: 614px) 100vw, 614px" />&lt;/a>
&lt;p id="caption-attachment-2974" class="wp-caption-text">
전시 장소로 가는 길
&lt;/p></description></item><item><title>오픈소스하드웨어 활동</title><link>https://openmicrolab.com/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-%ED%99%9C%EB%8F%99/</link><pubDate>Thu, 03 Apr 2014 00:34:15 +0000</pubDate><guid>https://openmicrolab.com/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-%ED%99%9C%EB%8F%99/</guid><description>
&lt;p>지난 몇년간 오픈소스하드웨어 활동을 정리했다.&lt;/p>
&lt;p>Open Source Hardware Activities for recent years.&lt;/p>
&lt;div style="margin-bottom: 5px;">
&lt;strong> &lt;a title="OSHW Activities" href="https://www.slideshare.net/JinbuhmKim/oshw-activities" target="_blank">OSHW Activities&lt;/a> &lt;/strong> from &lt;strong>&lt;a href="http://www.slideshare.net/JinbuhmKim" target="_blank">Jinbuhm Kim&lt;/a>&lt;/strong>
&lt;/div></description></item><item><title>SPI of Arduino</title><link>https://openmicrolab.com/spi-of-arduino/</link><pubDate>Mon, 17 Mar 2014 09:50:04 +0000</pubDate><guid>https://openmicrolab.com/spi-of-arduino/</guid><description>
&lt;h3 id="spi-of-arduino">SPI of Arduino&lt;/h3>
&lt;p>[table id=2 /]&lt;/p>
&lt;blockquote>
&lt;p>&lt;span style="line-height: 1.5em;">SPI 신호들은 ICSP핀이나 보드의 우측 상단(AREF 있는 쪽)에 같이 연결된 경우도 있으나, 그렇지 않은 경우도 있다. 그러므로 SPI를 사용하는 쉴드를 디자인 할 경우 라우팅을 쉽게하기 위해 한쪽만 SPI를 사용하려면 ICSP핀 쪽에만 연결을 하면 된다.&lt;/span>&lt;/p>&lt;/blockquote></description></item><item><title>Arduino Ethernet 라이브러리 업데이트</title><link>https://openmicrolab.com/arduino-ethernet-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8/</link><pubDate>Sat, 01 Mar 2014 09:26:21 +0000</pubDate><guid>https://openmicrolab.com/arduino-ethernet-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8/</guid><description>
&lt;p>WZnet 칩 W5100, W5200과 W5500을 지원하는 통합 아두이노 라이브러리인 &lt;a href="https://github.com/Wiznet/WIZ_Ethernet_Library" target="_blank">Arduino Ethernet 라이브러리&lt;/a>를 업데이트 했다. 기존 코드에서 달라진 점은 다음과 같다.&lt;/p>
&lt;ul>
&lt;li>Arduino IDE 1.5.x 지원 : Arduino Due를 지원하기 위함.&lt;/li>
&lt;li>Due용  SPI 드라이버 추가&lt;/li>
&lt;li>W5200및 W5500의 경우 SPI드라이버 속도를 높였다. 무려 42Mhz까지 지원&lt;/li>
&lt;li>w5100::read_data함수의 파라미터의 형 변경&lt;/li>
&lt;li>flush() 함수 추가&lt;/li>
&lt;/ul>
&lt;p>Arduino IDE 1.5.xx를 지원하기 위해서는&lt;/p>
&lt;ul>
&lt;li>32비트 SAM용 SPI 드라이버가 추가 되야한다.&lt;/li>
&lt;li>IDE 1.5.x의 폴더 구조가 바뀌어서 헤더파일 include가 변경된다.아래 그림 참고…  예를 들면 #include “w5100.h”가 #include “utility/ w5100.h” 이런 식으로…&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://openmicrolab.com/images/2014/03/Arduino_Folder.png">&lt;img loading="lazy" class="alignnone wp-image-2890" alt="Arduino_Folder" src="https://openmicrolab.com/images/2014/03/Arduino_Folder-826x1024.png" width="578" height="717" srcset="https://openmicrolab.com/images/2014/03/Arduino_Folder-826x1024.png 826w, https://openmicrolab.com/images/2014/03/Arduino_Folder-242x300.png 242w, https://openmicrolab.com/images/2014/03/Arduino_Folder.png 831w" sizes="(max-width: 578px) 100vw, 578px" />&lt;/a>&lt;/p></description></item><item><title>Arduino 코드에서 WIZnet칩 구별하기</title><link>https://openmicrolab.com/arduino-%EC%BD%94%EB%93%9C%EC%97%90%EC%84%9C-wiznet%EC%B9%A9-%EA%B5%AC%EB%B3%84%ED%95%98%EA%B8%B0/</link><pubDate>Sat, 01 Mar 2014 08:41:49 +0000</pubDate><guid>https://openmicrolab.com/arduino-%EC%BD%94%EB%93%9C%EC%97%90%EC%84%9C-wiznet%EC%B9%A9-%EA%B5%AC%EB%B3%84%ED%95%98%EA%B8%B0/</guid><description>
&lt;h3 id="wiznet-칩">WIZnet 칩&lt;/h3>
&lt;p>WIZnet 칩중에서 SPI가 지원되는 칩은 W5100, W5200 그리고 W5500이 있다. 이중 W5100은 아두이노에 적용이 되어 Ethernet Shield 및 Arduino Ethernet 보드에 사용이 되고 있다. 물론 W5200으로 만든 Ethernet Shield도 있고 W5500으로 만든 Ethernet Shield도 있다. 그리고 최근에는 아두이노 팀에서 W5500으로 Ethernet Shield를 만들고 있다. 이렇게 3가지 칩으로 적용된 보드가 있는데, 그럼 코드에서 이 칩들을 구별할 수 있는 방법이 있는가?&lt;/p>
&lt;h3 id="arduino-코드에서-wiznet칩-구별하기">Arduino 코드에서 WIZnet칩 구별하기&lt;/h3>
&lt;p>W5100, W5200, W5500의 칩들의 기본 기능은 같지만 H/W적으로는 패키지도 다르고 핀도 다르고, 내부 메모리 맵도 다르다. 모두 SPI 를 사용하지만 칩을 제어하기 위한 SPI format도 다르다. 그리고 W5100은 소켓이 4개이고 나머지 칩들은 모두 8개의 소켓을 지원한다.&lt;/p></description></item><item><title>W5500 Examples on Parallax</title><link>https://openmicrolab.com/w5500-examples-on-parallax/</link><pubDate>Thu, 13 Feb 2014 09:09:40 +0000</pubDate><guid>https://openmicrolab.com/w5500-examples-on-parallax/</guid><description>
&lt;p>작년 말에 &lt;a href="http://openmicrolab.com/w5500-%EB%93%9C%EB%9D%BC%EC%9D%B4%EB%B2%84-%ED%8F%AC%ED%8C%85-parallax-propeller%EC%B9%A9/" target="_blank">Parallax Activity board에 W5500 드라이버를 포팅&lt;/a>을 했다. 오늘은 관련된 예제 프로그램들을 모두 포팅해서 &lt;a href="https://github.com/jbkim/Parallax_W5500/" target="_blank">github&lt;/a>에 올렸다. 이중 흥미로운 것은 Html 5 지원 Webserver인데, 브라우저에서 실시간으로 변동되는 데이터를 그래프로 보여주는 응용이다.&lt;/p>
&lt;p>At the end of last year I ported the &lt;a href="http://openmicrolab.com/w5500-%EB%93%9C%EB%9D%BC%EC%9D%B4%EB%B2%84-%ED%8F%AC%ED%8C%85-parallax-propeller%EC%B9%A9/" target="_blank">W5500 driver on the Parallax Activity board&lt;/a>. Today, I ported all the related network example and posted on my &lt;a href="https://github.com/jbkim/Parallax_W5500/" target="_blank">github&lt;/a>. Most interesting example is the Html 5 Webserver showing the real time data in the graph.&lt;/p></description></item><item><title>아두이노 커뮤니티 로고</title><link>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8-%EC%BB%A4%EB%AE%A4%EB%8B%88%ED%8B%B0-%EB%A1%9C%EA%B3%A0/</link><pubDate>Tue, 11 Feb 2014 09:21:07 +0000</pubDate><guid>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8-%EC%BB%A4%EB%AE%A4%EB%8B%88%ED%8B%B0-%EB%A1%9C%EA%B3%A0/</guid><description>
&lt;p>2013년 10월에 &lt;a href="http://openmicrolab.com/intel-galileo-board%EC%99%80-arduino-tre/" target="_blank">인텔 갈릴레오 보드와 Arduino tre보드에 대한 포스팅&lt;/a>을 하면서, 아두이노의 2가지 로고 프로그램인 Arduino Certified와 Arduino at Heart에 대한 얘기를 했었다.&lt;/p>
&lt;h3 id="아두이노-커뮤니티-로고">아두이노 커뮤니티 로고&lt;/h3>
&lt;p>&lt;a href="https://openmicrolab.com/images/2014/02/ArduinoCommunityLogo.png">&lt;img loading="lazy" class="alignnone wp-image-2864" alt="ArduinoCommunityLogo" src="https://openmicrolab.com/images/2014/02/ArduinoCommunityLogo.png" width="459" height="194" srcset="https://openmicrolab.com/images/2014/02/ArduinoCommunityLogo.png 765w, https://openmicrolab.com/images/2014/02/ArduinoCommunityLogo-300x127.png 300w" sizes="(max-width: 459px) 100vw, 459px" />&lt;/a>&lt;/p>
&lt;p>아두이노에서는 Arduino Community를 위해서 자유롭게 사용할 수 있는 &lt;a href="http://arduino.cc/en/Trademark/CommunityLogo" target="_blank">아두이노 커뮤니티 로고&lt;/a>를 오픈했다. Arduino at Heart가 제품을 위한 것이라면 이것은 커뮤니티를 위한 것이다.&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="http://arduino.cc/en/Trademark/HomePage">The Arduino Logo is a Trademark&lt;/a> and can only be used by Arduino on products, websites and publications.&lt;/p></description></item><item><title>오픈 소스 하드웨어를 위해 정부가 할 일?</title><link>https://openmicrolab.com/%EC%98%A4%ED%94%88-%EC%86%8C%EC%8A%A4-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4%EB%A5%BC-%EC%9C%84%ED%95%B4-%EC%A0%95%EB%B6%80%EA%B0%80-%ED%95%A0-%EC%9D%BC/</link><pubDate>Wed, 29 Jan 2014 06:09:32 +0000</pubDate><guid>https://openmicrolab.com/%EC%98%A4%ED%94%88-%EC%86%8C%EC%8A%A4-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4%EB%A5%BC-%EC%9C%84%ED%95%B4-%EC%A0%95%EB%B6%80%EA%B0%80-%ED%95%A0-%EC%9D%BC/</guid><description>
&lt;h3 id="오픈-소스-하드웨어">오픈 소스 하드웨어&lt;/h3>
&lt;p>업무때문에 2010년도에 아두이노팀을 만나고 오픈소스 하드웨어에 관심을 갖게되어서 뉴욕에서 열린 오픈하드웨어 서밋에도 참석을 하고, 메이커페어도 참석을 했다. 이후에 아두이노 IDE가 다국어 버젼을 지원을 할때, 한국어 번역도 하고(덕분에 지금도 버젼이 바뀌면 메일이 온다…) &lt;a href="http://openmicrolab.com/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-%EC%A0%95%EC%9D%98-oshw-definition-1-0/" target="_blank">OSHW definition 도 번역&lt;/a>을 했다.  최근 아두이노의 영향때문에 크라우드 펀딩 사이트인 &lt;a href="https://www.kickstarter.com/" target="_blank">Kickstarter.com&lt;/a>에도 아두이노로 검색을 하면 161여개의 프로젝트가 뜬다.&lt;/p>
&lt;p style="text-align: center;">
&lt;a href="https://openmicrolab.com/images/2014/01/Kickstarter_Arduino.png">&lt;img loading="lazy" class=" wp-image-2786 aligncenter" alt="Kickstarter_Arduino" src="https://openmicrolab.com/images/2014/01/Kickstarter_Arduino.png" width="595" height="583" srcset="https://openmicrolab.com/images/2014/01/Kickstarter_Arduino.png 744w, https://openmicrolab.com/images/2014/01/Kickstarter_Arduino-300x293.png 300w" sizes="(max-width: 595px) 100vw, 595px" />&lt;/a>
&lt;/p>
&lt;h3 id="ict-diy">ICT D.I.Y&lt;/h3>
&lt;p>국내에도 오픈소스 하드웨어에 대한 관심아 졌는데 특히 정부에서도 이 분야에 관심을 가지고 있는듯 하다. &lt;a href="http://www.msip.go.kr/www/brd/m_211/view.do?seq=878&amp;srchFr=&amp;srchTo=&amp;srchWord=%EC%B0%BD%EC%A1%B0%EA%B2%BD%EC%A0%9C&amp;srchTp=1&amp;multi_itm_seq=0&amp;itm_seq_1=0&amp;itm_seq_2=0&amp;company_cd=&amp;company_nm=&amp;page=14" target="_blank">미래창조과학부의 보도 자료&lt;/a>에 의하면 2017년까지 ICT R&amp;amp;D예산 총 8.5조를 투자하는데 이중 15대 미래서비스 중 하나로 들어가 있는 것이 ICT D.I.Y서비스 이다. 물론 IoT플랫폼도 오픈 소스 하드웨어와 관련이 있다. 그런데 몇가지 궁금한 점이 있다.&lt;/p></description></item><item><title>오픈소스 하드웨어 정의 – OSHW definition 1.0</title><link>https://openmicrolab.com/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-%EC%A0%95%EC%9D%98-oshw-definition-1-0/</link><pubDate>Wed, 29 Jan 2014 02:47:14 +0000</pubDate><guid>https://openmicrolab.com/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-%EC%A0%95%EC%9D%98-oshw-definition-1-0/</guid><description>
&lt;p>예전에 오픈소스 하드웨어 정의(OSHW definition 1.0)를 &lt;a title="freedomdefined.org" href="http://freedomdefined.org/OSHW" target="_blank">위키&lt;/a>에서 한글 번역을 했다. 이때도 권한이 없어서 변경 저장을 위해 관리자에게 메일을 보내서 수정을 한 기억이 있다. 수정을 끝내고 &lt;a href="http://www.oshwa.org/" target="_blank">오픈소스 하드웨어 협회의 홈페이지&lt;/a>에 게재를 요청하고 승락을 받았는데, 최근에 보니 업데이트가 되어있다.&lt;/p>
&lt;blockquote>
&lt;p> Translations: &lt;a href="http://www.oshwa.org/definition/chinese/" title="Chinese">中文&lt;/a>, &lt;a href="http://www.oshwa.org/definition/french/" title="French">Français&lt;/a>, &lt;a href="http://www.oshwa.org/definition/greek/" title="Greek">Ελληνικά&lt;/a>,  &lt;a href="http://www.oshwa.org/definition/Italian/" title="Italian">Italiano&lt;/a>,  &lt;a href="http://www.oshwa.org/definition/japanese/" title="Japanese">日本語&lt;/a>, &lt;a href="http://www.oshwa.org/definition/korean/" title="Korean">한글&lt;/a>,  &lt;a href="http://www.oshwa.org/definition/latin/" title="Latin">Latina&lt;/a>,&lt;a href="http://www.oshwa.org/definition/portuguese/" title="Portuguese">Português&lt;/a>, &lt;a href="http://www.oshwa.org/definition/spanish/" title="Spanish">Español&lt;/a>, &lt;a href="http://www.oshwa.org/definition/swedish/" title="Swedish">Svenska&lt;/a>,   &amp;lt;= 번역된 순서대로인가? ^^&lt;/p>&lt;/blockquote>
&lt;p>&lt;a href="https://openmicrolab.com/images/2014/01/oshw.png">&lt;img loading="lazy" class="wp-image-2780 aligncenter" alt="oshw" src="https://openmicrolab.com/images/2014/01/oshw.png" width="599" height="372" srcset="https://openmicrolab.com/images/2014/01/oshw.png 998w, https://openmicrolab.com/images/2014/01/oshw-300x186.png 300w" sizes="(max-width: 599px) 100vw, 599px" />&lt;/a>&lt;/p>
&lt;p> &lt;/p></description></item><item><title>W5500 드라이버 포팅: Parallax Propeller칩</title><link>https://openmicrolab.com/w5500-%EB%93%9C%EB%9D%BC%EC%9D%B4%EB%B2%84-%ED%8F%AC%ED%8C%85-parallax-propeller%EC%B9%A9/</link><pubDate>Tue, 10 Dec 2013 02:54:02 +0000</pubDate><guid>https://openmicrolab.com/w5500-%EB%93%9C%EB%9D%BC%EC%9D%B4%EB%B2%84-%ED%8F%AC%ED%8C%85-parallax-propeller%EC%B9%A9/</guid><description>
&lt;p>&lt;a href="http://parallax.com/" target="_blank">Parrallax&lt;/a>는 미국의 펩리스 반도체 회사이다. 이 회사의 칩은 &lt;a href="http://parallax.com/microcontrollers/propeller" target="_blank">Propeller&lt;/a>인데 이 칩은 특이하게도 내부에 8개의 프로세어 코아가 있어서 병렬처리가 가능하다. 이 8개의 코아를 COG라고 부르는데, 아래 블럭다이아그램 처럼 내부에 각각 프로세서, RAM, 레지스터, 카운터 등이 있고 이 COG가 외부에 나와 있는 I/O를 공유한다. 그리고 각각의 COG를 제어하는 HUB가 있어서 각각의 COG각 언제 I/O를 access할지를 결정한다.&lt;/p>
&lt;p>&lt;a href="https://openmicrolab.com/images/2013/12/parallax_propeller.png">&lt;img loading="lazy" class="alignnone size-full wp-image-2736" alt="parallax_propeller" src="https://openmicrolab.com/images/2013/12/parallax_propeller.png" width="921" height="570" srcset="https://openmicrolab.com/images/2013/12/parallax_propeller.png 921w, https://openmicrolab.com/images/2013/12/parallax_propeller-300x185.png 300w" sizes="(max-width: 921px) 100vw, 921px" />&lt;/a>&lt;/p>
&lt;p>Propeller칩을 프로그래밍하게 위해서는 어셈블러, SPIN이라는 언어로 프로그래밍이 가능하며, 최근에는 C 컴파일러가 지원이어서 C로도 프로그래밍이 가능하지만 코드사이즈나 성능이슈로 대부분의 코드는 어셈블러나 SPIN으로 만들어져 있다.&lt;/p></description></item><item><title>Intel Galileo board와 Arduino Tre</title><link>https://openmicrolab.com/intel-galileo-board%EC%99%80-arduino-tre/</link><pubDate>Mon, 07 Oct 2013 08:08:37 +0000</pubDate><guid>https://openmicrolab.com/intel-galileo-board%EC%99%80-arduino-tre/</guid><description>
&lt;h3 id="intel-galileo-board">Intel Galileo Board&lt;/h3>
&lt;p>최근 &lt;a href="http://arduino.cc/" target="_blank">아두이노&lt;/a>는 매년 메이커페어에서 신제품의 출시에 대한 내용을 발표하는 것 같다. 올해는 지난 주말에 이태리 로마에서 있었던 &lt;a href="http://www.makerfairerome.eu/en/" target="_blank">메이커페어 유럽에디션&lt;/a>에서 인텔과의 협력으로 나온 보드인 &lt;a href="http://arduino.cc/en/ArduinoCertified/IntelGalileo" target="_blank">Intel Galileo Board&lt;/a>를 발표를 했다. PC 기반의 칩셋업체인 인텔이 임베디드분야에 그것도 오픈하드웨어에 발을 담그기 시작한 것이니 최근 오픈 소스 하드웨어의 열풍이 세상을 변화시키고 있는 것은 확실한 것 같다.&lt;/p>
&lt;blockquote>
&lt;p>그런데 한가지 재미있는 것은 이 제품이 아두이노의 “Arduino Certified” 제품군에 들어간 것이다. 우리가 익히 알고 있듯이 인텔은 자신들의 칩셋을 PC 업체에 공급을 하면서 Intel Inside라는 로고를 붙이게 했다. 하지만 오픈소스하드웨어 시장에서는 도리어 아두이노가 거대 기업 인텔에게 “Arduino Certified”라는 로고를 주다니…&lt;/p></description></item><item><title>LPC810 ARM CortexM0+ Project -1</title><link>https://openmicrolab.com/lpc810-arm-cortexm0-project-1/</link><pubDate>Mon, 09 Sep 2013 07:22:03 +0000</pubDate><guid>https://openmicrolab.com/lpc810-arm-cortexm0-project-1/</guid><description>
&lt;h3 id="project-description">Project Description&lt;/h3>
&lt;p>이 프로젝트의 목적은 가장 작은 MCU에 Ethernet connectivity를 구현하는 것이다. 아마 아래 그림과 같은 형태가 될것이다.&lt;/p>
&lt;p>&lt;a href="https://openmicrolab.com/images/2013/09/lpc810_ethernet.jpg">&lt;img loading="lazy" class=" wp-image-2651 alignnone" alt="lpc810_ethernet" src="https://openmicrolab.com/images/2013/09/lpc810_ethernet.jpg" width="717" height="484" srcset="https://openmicrolab.com/images/2013/09/lpc810_ethernet.jpg 1024w, https://openmicrolab.com/images/2013/09/lpc810_ethernet-300x202.jpg 300w" sizes="(max-width: 717px) 100vw, 717px" />&lt;/a>&lt;/p>
&lt;h3 id="cortexmo">CortexMo+&lt;/h3>
&lt;p>NXP에서 출시한 LPC800시리즈는 ARM사의 CortexM0+ 시리즈의 칩이다. ARM의 소개 페이지에 있는 것 처럼 CortexM0와 마찬가지로 8, 16비트 시장을 타겟으로 하고 있다. CortexM0와 비교해서는 파워소모를 더 줄였고 성능은 더 높인 버젼이라고 이해하면 될 듯 하다. &lt;a href="http://deltas.blog.com/2013/03/13/arm-cortex-m0-vs-msp430-or-are-m0-based-devices-really-16-bit-mcu-replacements-2/" target="_blank">TI의 MSP430과 비교를 한 사이트&lt;/a>도 있는데, GPIO만 적을뿐 가격, 파워 소모, 성능등 모든 면에서 우월하다.&lt;/p></description></item><item><title>오픈소스하드웨어에 관하여</title><link>https://openmicrolab.com/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4%EC%97%90-%EA%B4%80%ED%95%98%EC%97%AC/</link><pubDate>Thu, 05 Sep 2013 02:59:24 +0000</pubDate><guid>https://openmicrolab.com/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4%EC%97%90-%EA%B4%80%ED%95%98%EC%97%AC/</guid><description>
&lt;p>최근 국내에서도 오픈소스하드웨어가 점차 인기를 끌고 있다.&lt;/p>
&lt;p>인기를 어떻게 알 수 있을까? 오픈소스하드웨어중 하나인 아두이노 관련 책을 인터넷 서점에서 검색해보면 2010년도에 한 권이던 책이, 2012년도를 기점으로 2013년에는 15권이나 된다. 대학에서도 아두이노를 가르치고 심지어는 고등학교 동아리에서도 아두이노를 가지고 프로젝트를 하는 것을 보았다.&lt;/p>
&lt;p>&lt;a href="http://www.seouldigitalforum.org/kr/years/cur_introduction.jsp" target="_blank">2013년도 서울디지털포럼&lt;/a>의 주제가 초협력이었고, 여기서 마친 자쿠보우스키(&lt;a href="http://opensourceecology.org/" target="_blank">오픈소스 에콜로지&lt;/a> 창립자), 카타리나 모타(&lt;a href="http://openmaterials.org/" target="_blank">오픈 머티리얼&lt;/a> &amp;amp; &lt;a href="http://everywheretech.org/" target="_blank">에브리웨어테크&lt;/a> 공동 창립자), 강윤서(&lt;a href="https://opentechforever.com/" target="_blank">오픈테크포에버&lt;/a> 창립자) 등 오픈소스 하드웨어 운동가들이 SDF에 참석해 오픈소스 정신의 중요성을 알렸다.  – &lt;a href="http://www.bloter.net/archives/151659" target="_blank">참고기사&lt;/a>. 크라우드펀딩 사이트인 &lt;a href="http://www.kickstarter.com" target="_blank">Kickstarter.com&lt;/a> 에서 오픈소스하드웨어 플랫폼인 아두이노로 검색을 하면 &lt;a href="http://www.kickstarter.com/projects/search?utf8=%E2%9C%93&amp;term=arduino" target="_blank">122개의 프로젝트&lt;/a>가 나온다. 우리나라는 몇 년 늦은 감이 있지만 이미 전세계적으로 오픈소스하드웨어의 열풍은 대단하다. 리눅스같은 오픈소스소프트웨어는 알겠는데, 그럼 오픈소스하드웨어란무엇인가?&lt;/p></description></item><item><title>오픈 소스 하드웨어란?</title><link>https://openmicrolab.com/%EC%98%A4%ED%94%88-%EC%86%8C%EC%8A%A4-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4%EB%9E%80/</link><pubDate>Wed, 26 Jun 2013 08:39:35 +0000</pubDate><guid>https://openmicrolab.com/%EC%98%A4%ED%94%88-%EC%86%8C%EC%8A%A4-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4%EB%9E%80/</guid><description>
&lt;p>오픈 소스 하드웨어에 대한 정의를 &lt;a title="OSHWA" href="http://www.oshwa.org/" target="_blank">오픈 소스 하드웨어 협회(Open Source Hardware Association: OSHWA)&lt;/a>가 정의 했으며, &lt;a href="http://www.oshwa.org/definition/" target="_blank">1.0버젼&lt;/a>이 릴리즈되어 있으며, 1.1 버젼이 작업중이다.  &lt;a href="http://freedomdefined.org/OSHW" target="_blank">&lt;a href="http://freedomdefined.org/OSHW">http://freedomdefined.org/OSHW&lt;/a>&lt;/a> 에 위키 형태로 올라와 있어서 한글 번역을 했는데, &lt;del>new user라서 아직 업로드가 안된다. -_-;;; Moderator들에게 메일을 보내놨으니 회신이 오겠지…&lt;/del> 하루 만에 바로 연락이 와서 업로드가 가능.. ^^  &lt;a href="http://freedomdefined.org/OSHW/translations/ko" target="_blank">WiKi 링크&lt;/a>&lt;/p>
&lt;p>&lt;del>한글 번역본을 테스트용 WiKi에… 그리고 &lt;a href="https://github.com/jbkim/OSHW" target="_blank">github&lt;/a>에도…&lt;/del>&lt;/p></description></item><item><title>오픈 소스 하드웨어를 말한다</title><link>https://openmicrolab.com/%EC%98%A4%ED%94%88-%EC%86%8C%EC%8A%A4-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4%EB%A5%BC-%EB%A7%90%ED%95%9C%EB%8B%A4/</link><pubDate>Wed, 26 Jun 2013 07:55:36 +0000</pubDate><guid>https://openmicrolab.com/%EC%98%A4%ED%94%88-%EC%86%8C%EC%8A%A4-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4%EB%A5%BC-%EB%A7%90%ED%95%9C%EB%8B%A4/</guid><description>
&lt;p>지난번에 블로터넷에서 진행한 인터뷰(?) 혹은 대담(?)에 참석해서 김성수님과 한 대화의 내용이 기사화됐다. ^^*&lt;/p>
&lt;p>&lt;a href="https://openmicrolab.com/images/2013/06/open-HW.jpg">&lt;img loading="lazy" class="alignleft size-full wp-image-2559" alt="open-HW" src="https://openmicrolab.com/images/2013/06/open-HW.jpg" width="500" height="333" srcset="https://openmicrolab.com/images/2013/06/open-HW.jpg 500w, https://openmicrolab.com/images/2013/06/open-HW-300x199.jpg 300w" sizes="(max-width: 500px) 100vw, 500px" />&lt;/a>{.prettyPhoto}&lt;/p>
&lt;p>&lt;a title="블로터넷 기사" href="http://www.bloter.net/archives/156583" target="_blank">&lt;a href="http://www.bloter.net/archives/156583">http://www.bloter.net/archives/156583&lt;/a>&lt;/a>&lt;/p></description></item><item><title>How big can the DIY and maker movement get? SparkFun wants to know</title><link>https://openmicrolab.com/how-big-can-the-diy-and-maker-movement-get-sparkfun-wants-to-know/</link><pubDate>Fri, 31 May 2013 08:33:50 +0000</pubDate><guid>https://openmicrolab.com/how-big-can-the-diy-and-maker-movement-get-sparkfun-wants-to-know/</guid><description>
&lt;p>See on &lt;a style='font-weight: bold; font-size: 18px;' href='http://www.scoop.it/t/open-hardware-news/p/4002526231/how-big-can-the-diy-and-maker-movement-get-sparkfun-wants-to-know'>Scoop.it&lt;/a> – &lt;a href="http://www.scoop.it/t/open-hardware-news">Open Hardware News&lt;/a>&lt;br>
&lt;a href="http://www.scoop.it/t/open-hardware-news/p/4002526231/how-big-can-the-diy-and-maker-movement-get-sparkfun-wants-to-know">&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt=""
class="image_figure image_external image_processed"
width="500"
height="375"
src="https://openmicrolab.com/CXiV9MMc6mRHMn3uVTvDPTl72eJkfbmt4t8yenImKBXEejxNn4ZJNZ2ss5Ku7Cxt_3296446555761442927.jpg"
/>
&lt;/picture>
&lt;/figure>
&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>The excitement around events like last week’s Maker Faire is huge. But are more people making or is the growth in this market coming from more electronics products finally coming within reach for existing makers?&lt;/p>&lt;/blockquote>
&lt;p>See on &lt;a href="http://gigaom.com/2013/05/26/how-big-can-the-diy-and-maker-movement-get-sparkfun-wants-to-know/">gigaom.com&lt;/a>&lt;/p></description></item><item><title>오픈 하드웨어 무브먼트 – 크리스 앤더슨</title><link>https://openmicrolab.com/%EC%98%A4%ED%94%88%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-%EB%AC%B4%EB%B8%8C%EB%A8%BC%ED%8A%B8-%ED%81%AC%EB%A6%AC%EC%8A%A4-%EC%95%A4%EB%8D%94%EC%8A%A8/</link><pubDate>Wed, 14 Nov 2012 11:16:09 +0000</pubDate><guid>https://openmicrolab.com/%EC%98%A4%ED%94%88%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-%EB%AC%B4%EB%B8%8C%EB%A8%BC%ED%8A%B8-%ED%81%AC%EB%A6%AC%EC%8A%A4-%EC%95%A4%EB%8D%94%EC%8A%A8/</guid><description>
&lt;p style="text-align: center; clear: none; float: none;">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile29.uf.1258BD3B50A37C301C85D4.jpg" class="aligncenter" width="512" height="344" filename="andersonchris_1352688938_77.jpg" filemime="image/jpeg" />
&lt;/p>
&lt;p style="text-align: right;">
&lt;i>이미지 출처: &lt;a href="http://about.me/andersonchris" target="_blank" class="tx-link">http://about.me/andersonchris&lt;/a>&lt;/i>
&lt;/p>
&lt;ul style="list-style-type: square;">
&lt;li>
오픈하드웨어 분야에서 가장 영향력있는 사람중의 한사람인 크리스 앤더슨.&amp;nbsp;&lt;a href="http://techcrunch.com/2012/10/09/wireds-chris-anderson-todays-maker-movement-is-the-new-industrial-revolution-tctv/" target="_blank" class="tx-link">테크크런치 인터뷰 동영상&lt;/a>
&lt;/li>
&lt;li>
지난 &lt;a href="http://liketheocean.tistory.com/entry/Open-Hardware-Summit-2012" target="_blank" class="tx-link">오픈 하드웨어 서밋&lt;/a>에서 키노트 발표를 하기도 했다. 이렇게 얘기할 수 있는 이유는 자기의 논리를 책으로 쓰고&amp;nbsp;직접 이를 실천해&amp;nbsp;사업을 하기 때문이다.
&lt;/li>
&lt;/ul>
&lt;ul style="list-style-type: square;">
&lt;li>
크리스 앤더슨의 책: 롱테일 경제학, 프리(Free), Makers. Makers는 아직 한국어판이 나오지 않았다. &lt;a href="http://news.chosun.com/site/data/html_dir/2009/11/27/2009112701014.html" target="_blank" class="tx-link">조선일보 Weekly Biz와 인터뷰 기사&lt;/a>&amp;nbsp;에서는 주로 프리(Free)에 관한 설명.
&lt;/li>
&lt;/ul>
&lt;ul style="list-style-type: square;">
&lt;li>
최근에는 와이어드 편집장을 그만두고&amp;nbsp;UAV 스타트업인&amp;nbsp;3D Robotics의 풀타임 CEO로 간단다. 그러면서 $5M 투자를 받기도 했다. 관련 기사&amp;nbsp;&lt;a href="http://diydrones.ning.com/profiles/blogs/3d-robotics-announces-vc-funding-expansion-plans" target="_blank" class="tx-link">http://diydrones.ning.com/profiles/blogs/3d-robotics-announces-vc-funding-expansion-plans&lt;/a>
&lt;/li>
&lt;/ul></description></item><item><title>Open Hardware Summit 2012</title><link>https://openmicrolab.com/open-hardware-summit-2012/</link><pubDate>Mon, 15 Oct 2012 05:50:14 +0000</pubDate><guid>https://openmicrolab.com/open-hardware-summit-2012/</guid><description>
&lt;p>지난 9월 27일 &lt;a href="http://summit.oshwa.org/" target="_blank" class="tx-link">Open Hardware Summit&lt;/a>이 올해에도 뉴욕에서 열렸다. 올해로 3년째 인데 매년 추석전에 열리는 듯하다. -_-;;&lt;/p>
&lt;p>올해는 &lt;a href="http://eyebeam.org/" target="_blank" class="tx-link">EyeBeam&lt;/a>이라는 Art &amp;amp; Technology 센터에서 열렸다. &lt;/p>
&lt;p style="text-align: center; clear: none; float: none; ">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile7.uf.011C7E49507BA0C5119349.jpg" class="aligncenter" width="683" height="512" filename="SAM_6999.jpg" filemime="image/jpeg" style="""" />
&lt;/p>
&lt;p>Arduino의 Ethernet Shield의 W5100 메이커인 &lt;a href="http://www.wiznet.co.kr/en/" target="_blank" class="tx-link">Wiznet&lt;/a>는 올해로 3년째 이 서밋에 &lt;a href="http://summit.oshwa.org/sponsor/" target="_blank" class="tx-link">스폰서&lt;/a>로 지원을 하고 있다.&lt;/p>
&lt;p style="text-align: center; clear: none; float: none; ">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile25.uf.12560F4E507BA0EB12608A.jpg" class="aligncenter" width="683" height="455" filename="SAM_6910.jpg" filemime="image/jpeg" style="""" />
&lt;/p>
&lt;p>오전 8시 30분 부터 등록을 하고 나눠주는 뱃지를 받았다. 뱃지는 &lt;a href="http://www.evilmadscientist.com" target="_blank" class="tx-link">Evil Mad Scientist Lab&lt;/a>에서 제작을 했는데 레고 블럭으로 만들어졌다. &lt;/p>
&lt;p style="text-align: center; clear: none; float: none; ">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile1.uf.1515E03C507BA1B8058AFE.jpg" class="aligncenter" width="456" height="608" filename="SAM_7004.jpg" filemime="image/jpeg" style="""" />
&lt;/p></description></item><item><title>Eagle CAD로 작업한 PCB에 이미지 파일 넣기</title><link>https://openmicrolab.com/eagle-cad%EB%A1%9C-%EC%9E%91%EC%97%85%ED%95%9C-pcb%EC%97%90-%EC%9D%B4%EB%AF%B8%EC%A7%80-%ED%8C%8C%EC%9D%BC-%EB%84%A3%EA%B8%B0/</link><pubDate>Mon, 18 Jun 2012 11:12:14 +0000</pubDate><guid>https://openmicrolab.com/eagle-cad%EB%A1%9C-%EC%9E%91%EC%97%85%ED%95%9C-pcb%EC%97%90-%EC%9D%B4%EB%AF%B8%EC%A7%80-%ED%8C%8C%EC%9D%BC-%EB%84%A3%EA%B8%B0/</guid><description>
&lt;p>Eagle CAD로 PCB작업을 하다보면 회사 로고 같은 이미지를 PCB에 넣을 때가 있다.&lt;/p>
&lt;p>방법은 다음과 같다.&lt;/p>
&lt;p>1. 원하는 그림을 그림판에서 불러와서 단색 BMP로 저장을 한다.&lt;/p>
&lt;ol start="2">
&lt;li>
&lt;p>새로 프로젝트를 만들고, 보드 파일을 연후에 , File &amp;gt; Run &amp;gt; “import-bmp.ulp”을 실행한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>윈도우가 하나 뜨면 OK버튼을 누르고, BMP 파일을 불러온다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>단색 BMP로 저장을 했기 때문에 다음과 같이 사용할 색깔이 2가지 색으로 나온다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>   검적색으로 된 부분만 필요하므로 검정색만 선택을 한다.&lt;/p>
&lt;p style="text-align: center; clear: none; float: none; ">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile23.uf.137C073E4FDF03610C6CBD.png" class="aligncenter" width="356" height="166" filename="eagle_bmp_1.png" filemime="image/jpeg" style="""" />
&lt;/p></description></item><item><title>데일 도허티의 강연</title><link>https://openmicrolab.com/%EB%8D%B0%EC%9D%BC-%EB%8F%84%ED%97%88%ED%8B%B0%EC%9D%98-%EA%B0%95%EC%97%B0/</link><pubDate>Fri, 08 Jun 2012 08:11:35 +0000</pubDate><guid>https://openmicrolab.com/%EB%8D%B0%EC%9D%BC-%EB%8F%84%ED%97%88%ED%8B%B0%EC%9D%98-%EA%B0%95%EC%97%B0/</guid><description>
&lt;p style="text-align: center; clear: none; float: none; ">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile25.uf.180D23424FD1B2FF07F455.PNG" class="aligncenter" width="516" height="840" filename="dale.PNG" filemime="image/jpeg" />
&lt;/p>
&lt;p>이번에 한국에서 1회로 열린 메이커페어를 기념해서 메이커페어의 창시자인 데일 도허티(Dale Dougherty)가 방한을 하여 강연이 있었다. 회사에서 홍대까지 멀지 않은 거리임에도 참석을 했는데, 꽤 많은 사람이 강연에 참석을 했다.&lt;/p>
&lt;p>강연의 사회는 김국현님이 진행을 하고, 정지훈박사의 강연도 있었다. 데일의 강연은 동시통역을 해줘서 부담이 없었다는…&lt;/p>
&lt;p>전세계적으로 일어나고 있는 Maker 운동과 우리 자신이 Maker라는 내용의 강연… 전세계적으로 60여개의 Maker Fair가 있다는 얘기도 있었는데, 올해가 한국처럼 제1회인 경우가 많았다.&lt;/p></description></item><item><title>Maker Fair SEOUL</title><link>https://openmicrolab.com/maker-fair-seoul/</link><pubDate>Fri, 08 Jun 2012 07:14:25 +0000</pubDate><guid>https://openmicrolab.com/maker-fair-seoul/</guid><description>
&lt;p style="text-align: center; clear: none; float: none; ">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile8.uf.1479D8334FD1A0EB20966F.PNG" class="aligncenter" width="421" height="622" filename="maker_fair.PNG" filemime="image/jpeg" />
&lt;/p>
&lt;p>지난 토,일요일(6/9, 10) 한국에서도 메이커페어가 열렸다.&lt;/p>
&lt;p>흥미로운 작품이 많았는데, 예술하는(미디어쪽) 사람들의 작품은 간단한 기술로 멋진 작품을 만드는 것 같다.&lt;/p>
&lt;p>취미로 이런 활동을 하는 분도 계시고, 사업을 하는 분들도 계신데, 아무래도 사업을 하시는 분들의 작품이 완성도가 높은 것 같다. 사진을 많이 찍지는 못했는데, 한번 아래 사진으로 느껴보시라…&lt;/p>
&lt;p>다음해에는 좀더 큰 &lt;/p>
&lt;p style="text-align: center; clear: none; float: none; ">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile21.uf.111054334FD1A30414C119.jpg" class="aligncenter" width="683" height="515" filename="SAM_6219-tile.jpg" filemime="image/jpeg" />
&lt;/p>&lt;/p>
&lt;p style="text-align: center; clear: none; float: none; ">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile22.uf.1177363D4FD1A44211D51B.jpg" class="aligncenter" width="683" height="515" filename="SAM_6179-tile.jpg" filemime="image/jpeg" />
&lt;/p></description></item><item><title>Eagle CAD 3D 모델 만들기</title><link>https://openmicrolab.com/eagle-cad-3d-%EB%AA%A8%EB%8D%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link><pubDate>Wed, 25 Apr 2012 04:20:42 +0000</pubDate><guid>https://openmicrolab.com/eagle-cad-3d-%EB%AA%A8%EB%8D%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid><description>
&lt;p>Eagle CAD에는 많은 ULP(User Language Program)이 존재한다. 일종의 C-like 프로그램으로 Eagle CAD의 데이터를 가지고 어떤 작업을 할 수 있게 해준다. 예를 들면 BOM를 뽑아주는 ULP 등…&lt;/p>
&lt;p>Eagle 홈페이지에 사용자가 자신이 작업한 ULP를 올릴 수 도 있다. &lt;/p>
&lt;p>&lt;a href="http://www.cadsoftusa.com/downloads/ulps?language=en">http://www.cadsoftusa.com/downloads/ulps?language=en&lt;/a>&lt;/p>
&lt;p>스위스의 &lt;a href="http://eagleup.wordpress.com/about/" target="_blank" class="tx-link">Jerome Lamy&lt;/a> 라는 엔지니어는  Eagle CAD에서 작업한 PCB를 3D로 모델링해 주는 ULP를 만들었다.&lt;/p>
&lt;p>이것을 하기위해서는 다음과 같은 s/w가 필요하다.&lt;/p>
&lt;ul style="list-style-type: disc; ">
&lt;li>
Eagle CAD : 당연히 이게 필요하고&amp;#8230;.
&lt;/li>
&lt;li>
Google Sketchup:&amp;nbsp;&lt;a href="http://sketchup.google.com/intl/en/download/">http://sketchup.google.com/intl/en/download/&lt;/a>
&lt;/li>
&lt;li>
ImageMagic:&amp;nbsp;&lt;a href="http://www.imagemagick.org/script/index.php">http://www.imagemagick.org/script/index.php&lt;/a>&amp;nbsp;여기에서 Binary Releases에서 OS에 맞는 것을 설치
&lt;/li>
&lt;li>
Eagleup ULP:&amp;nbsp;&lt;a href="https://sites.google.com/site/eagleupwarehouse/eagleUp4.3.zip?attredirects=0&amp;d=1">https://sites.google.com/site/eagleupwarehouse/eagleUp4.3.zip?attredirects=0&amp;d=1&lt;/a>&amp;nbsp;
&lt;/li>
&lt;/ul>
&lt;div>
위 s/w를 다운로드하고 인스톨한다.
&lt;/div>
&lt;div>
Eagleup ULP 압축 파일을 풀면 아래 그림의 폴더와 같다.
&lt;/div>
&lt;div>
&lt;p style="text-align: center; clear: none; float: none; ">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile7.uf.185C1A344F977564062E55.PNG" class="aligncenter" width="173" height="138" filename="eagleup.PNG" filemime="image/jpeg" style="""" />
&lt;/p></description></item><item><title>DIP TRACE – PCB 디자인 툴</title><link>https://openmicrolab.com/dip-trace-pcb-%EB%94%94%EC%9E%90%EC%9D%B8-%ED%88%B4/</link><pubDate>Wed, 25 Apr 2012 03:27:37 +0000</pubDate><guid>https://openmicrolab.com/dip-trace-pcb-%EB%94%94%EC%9E%90%EC%9D%B8-%ED%88%B4/</guid><description>
&lt;p style="text-align: center; clear: none; float: none; ">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile2.uf.1451B9344F97660C11B27D.PNG" class="aligncenter" width="683" height="514" filename="diptrace.PNG" filemime="image/jpeg" style="""" />
&lt;/p>
&lt;p>Open hardware 분야에서 &lt;a href="http://liketheocean.tistory.com/199" target="_blank" class="tx-link">Eagle CAD&lt;/a>가 가장 많이 사용이 되는 것 같다. &lt;/p>
&lt;p>이런 툴들이 상용 버젼도 있지만 Hobbist 나 학생 그리고 비상어업적인 용도를 위해서는 훨씬 싼 가격으로 제품을 공급을 한다.&lt;/p>
&lt;p>물론 약간의 기능의 제한이 있지만 무료버젼도 제공을 한다. 사실 무료버젼이라도 PCB가 복잡하지 않으면 웬만한 PCB 디자인은 가능하다. 그리고 Windows 버젼 뿐 아니라 당연히 MAC 버젼도 제공을 한다.&lt;/p>
&lt;p>&lt;a href="http://www.diptrace.com/index.php?en=1" target="_blank" class="tx-link">DIP TRACE&lt;/a> 역시 Open hardware 분야서 사용되는 PCB 디자인 툴이다.&lt;/p></description></item><item><title>아두이노 IDE 빌드 환경 만들기</title><link>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8-ide-%EB%B9%8C%EB%93%9C-%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link><pubDate>Sat, 14 Apr 2012 13:41:34 +0000</pubDate><guid>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8-ide-%EB%B9%8C%EB%93%9C-%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid><description>
&lt;p>&lt;a href="http://arduino.cc/playground/Main/LanguagesIDE" target="_blank" class="tx-link">아두이노 IDE의 한글화&lt;/a>를 진행하기 위해 윈도우즈 환경에 아두이노 IDE 빌드 환경을 세팅을 했다. &lt;/p>
&lt;p>&lt;strong>1. 개발툴 설치&lt;/strong>&lt;/p>
&lt;p>필요한 사항: Cygwin, Java JDK, ant가 필요하다.&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Cygwin&lt;/strong> : Cygwin 은 윈도우즈 환경에서 리눅스를 쓰기위한 툴이다. 이걸 다운로드 한다. &lt;u>&lt;span style="color: rgb(9, 0, 255); ">&lt;a href="http://www.cygwin.com/setup.exe" target="_blank" class="tx-link">&lt;span style="color: rgb(9, 0, 255); ">http://&lt;/span>&lt;/a>&lt;/span>&lt;span style="color: rgb(9, 0, 255); ">&lt;a href="http://www.cygwin.com/setup.exe" target="_blank" class="tx-link">&lt;span style="color: rgb(9, 0, 255); ">&lt;a href="https://www.cygwin.com/setup.exe">www.cygwin.com/setup.exe&lt;/a>&lt;/span>&lt;/a>&lt;span style="color: rgb(9, 0, 255); ">&lt;/span>&lt;/span>&lt;/u>&lt;/li>
&lt;/ol>
&lt;p>    다운받은 파일을 실행시키고, 필요한 패키지만 선택을 해서 다운로드 받는다.&lt;/p>
&lt;p>    필요한 패키지는 &lt;strong>git, make, gcc-mingw, g++, perl, unzip, zip, coreutils, gzip, tar&lt;/strong> 이다.&lt;/p></description></item><item><title>Eagle CAD</title><link>https://openmicrolab.com/eagle-cad/</link><pubDate>Thu, 22 Mar 2012 08:33:31 +0000</pubDate><guid>https://openmicrolab.com/eagle-cad/</guid><description>
&lt;p>Open Hardware를 위해 &lt;a title="[http://www.cadsoftusa.com/]로 이동합니다." href="http://www.cadsoftusa.com/" target="_blank">Eagel CAD&lt;/a>를 많이 사용을 하지만 정작 사용법에 대한 한글 안내는 많지 않다.&lt;br>
유일한 것이 &lt;a href="http://nohau.com.ne.kr/eagle.htm">http://nohau.com.ne.kr/eagle.htm&lt;/a> 의 링크에 있는 내용이다.&lt;br>
이 링크는 일본 자료를 번역한 것 같은데, 실제 툴이라는 것이 각각의 기능에 대한 알기보다는 실제로 자기가 사용을 해가면서 왜 기능이 필요한 가를 터득하는 것이 중요하다. 툴의 모든 기능이 다 필요로 하지는 않으니까…&lt;br>
이 링크가 별로 마음에 안드는 것은 웹사이트의 모든 키를 막아놔서 copy가 안되는데, Evernote같은 툴로 페이지를 스크랩하는 것은 가능하다. ^^*&lt;/p></description></item><item><title>Fritzing에 Wiz820io 라이브러리 공식 등록</title><link>https://openmicrolab.com/fritzing%EC%97%90-wiz820io-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EA%B3%B5%EC%8B%9D-%EB%93%B1%EB%A1%9D/</link><pubDate>Tue, 24 Jan 2012 10:18:03 +0000</pubDate><guid>https://openmicrolab.com/fritzing%EC%97%90-wiz820io-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EA%B3%B5%EC%8B%9D-%EB%93%B1%EB%A1%9D/</guid><description>
&lt;p>&lt;A title="[http://liketheocean.tistory.com/159]로 이동합니다." href="http://liketheocean.tistory.com/159" target=_blank>Fritzing &lt;/A>툴의이 최근 버젼(0.6.4)버젼부터 &lt;A title="[http://liketheocean.tistory.com/169]로 이동합니다." href="http://liketheocean.tistory.com/169" target=_blank>지난번에 제가 만든 Wiz820io&lt;/A>가 공식 라이브러리도 등록이 되었습니다.&lt;br>
이번 버젼에서 눈에 띄게 달라진 점은 part 라이브러리가 각 제조사별로 브랜딩되어 있습니다.&lt;br>
즉 Arduino, Parallax, Sparkfun등의 탭들이 생겨서 각 제조사 별로 부품을 찾을 수 있게 되어 있네요.&lt;br>
제가 만든 Wiz820io는 Core Parts에 Connection 항목에 들어가 있습니다.&lt;/p>
&lt;P style="MARGIN: 0px">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile24.uf.1353813F4F1E84A618F627.PNG" class="aligncenter" width="290" height="700" alt="" filename="Fritzing_Wiz820io.PNG" filemime="image/jpeg" />
&lt;/P></description></item><item><title>Raspberry Pi</title><link>https://openmicrolab.com/raspberry-pi/</link><pubDate>Thu, 05 Jan 2012 12:01:03 +0000</pubDate><guid>https://openmicrolab.com/raspberry-pi/</guid><description>
&lt;p>저가의 리눅스 박스를 기치로 내건 Raspberry Pi&lt;br>
관련 자료: &lt;a href="http://www.raspberrypi.org/">http://www.raspberrypi.org/&lt;/a>&lt;/p>
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile2.uf.144E19384F05907426D36C.jpg" class="aligncenter" width="488" height="349" alt="" filename="Rasberrypi.jpg" filemime="image/jpeg" />
&lt;p>**An ARM GNU/Linux box for $25. Take a byte!&lt;br>
위키피디아에 자세한 자료가 있다.&lt;br>
** &lt;a href="http://en.wikipedia.org/wiki/Raspberry_Pi#cite_note-Broadcom-BCM2835-Website-3">&lt;strong>http://en.wikipedia.org/wiki/Raspberry_Pi#cite_note-Broadcom-BCM2835-Website-3&lt;/strong>&lt;/a>&lt;/p>
&lt;H2 style="BACKGROUND-IMAGE: none; BORDER-BOTTOM: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.17em; OVERFLOW-X: hidden; OVERFLOW-Y: hidden; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px 0px 0.6em; WIDTH: auto; LETTER-SPACING: normal; FONT: 19px/19px sans-serif; WHITE-SPACE: normal; ORPHANS: 2; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0.5em; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-origin: initial; background-clip: initial">
&lt;SPAN id=Specifications class=mw-headline>Specifications&lt;/SPAN>
&lt;/H2>
&lt;TABLE style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 1em 1em 1em 0px; LETTER-SPACING: normal; BORDER-COLLAPSE: collapse; FONT: 13px/19px sans-serif; WHITE-SPACE: normal; ORPHANS: 2; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; border-image: initial; background-origin: initial; background-clip: initial" class=wikitable>
&lt;TH style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: center; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; BACKGROUND-COLOR: rgb(242,242,242); PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial; background-origin: initial; background-clip: initial">
&lt;/TH>
&lt;TH style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: center; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; BACKGROUND-COLOR: rgb(242,242,242); PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial; background-origin: initial; background-clip: initial">
Model A
&lt;/TH>
&lt;TH style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: center; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; BACKGROUND-COLOR: rgb(242,242,242); PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial; background-origin: initial; background-clip: initial">
Model B
&lt;/TH>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
Target price:&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;SUP style="LINE-HEIGHT: 1em; FONT-STYLE: normal; FONT-WEIGHT: normal" id=cite_ref-faq_0-4 class=reference>&lt;A style="BACKGROUND-IMAGE: none; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" href="http://en.wikipedia.org/wiki/Raspberry_Pi#cite_note-faq-0">&lt;SPAN>[&lt;/SPAN>1&lt;SPAN>]&lt;/SPAN>&lt;/A>&lt;/SUP>
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" class=mw-redirect title=USD href="http://en.wikipedia.org/wiki/USD">USD&lt;/A>&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>$25 (&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" class=mw-redirect title=GBP href="http://en.wikipedia.org/wiki/GBP">GBP&lt;/A>&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>£16)
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
USD $35 (GBP £22)
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" class=mw-redirect title=System-on-a-chip href="http://en.wikipedia.org/wiki/System-on-a-chip">SoC&lt;/A>:&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;SUP style="LINE-HEIGHT: 1em; FONT-STYLE: normal; FONT-WEIGHT: normal" id=cite_ref-faq_0-5 class=reference>&lt;A style="BACKGROUND-IMAGE: none; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" href="http://en.wikipedia.org/wiki/Raspberry_Pi#cite_note-faq-0">&lt;SPAN>[&lt;/SPAN>1&lt;SPAN>]&lt;/SPAN>&lt;/A>&lt;/SUP>
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial" colSpan=2>&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" title=Broadcom href="http://en.wikipedia.org/wiki/Broadcom">Broadcom&lt;/A>&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(165,88,88); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" class=new title="BCM2835 (page does not exist)" href="http://en.wikipedia.org/w/index.php?title=BCM2835&amp;action=edit&amp;redlink=1">BCM2835&lt;/A>&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>(CPU + GPU + DSP + SDRAM)&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;SUP style="LINE-HEIGHT: 1em; FONT-STYLE: normal; FONT-WEIGHT: normal" id=cite\_ref-Broadcom-BCM2835-Website\_3-3 class=reference>&lt;A style="BACKGROUND-IMAGE: none; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" href="http://en.wikipedia.org/wiki/Raspberry_Pi#cite_note-Broadcom-BCM2835-Website-3">&lt;SPAN>[&lt;/SPAN>4&lt;SPAN>]&lt;/SPAN>&lt;/A>&lt;/SUP>&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
CPU:
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial" colSpan=2>700&amp;nbsp;MHz ARM1176JZF-S core (&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" title=ARM11 href="http://en.wikipedia.org/wiki/ARM11">ARM11&lt;/A>&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>family)&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;SUP style="LINE-HEIGHT: 1em; FONT-STYLE: normal; FONT-WEIGHT: normal" id=cite\_ref-Broadcom-BCM2835-Website\_3-4 class=reference>&lt;A style="BACKGROUND-IMAGE: none; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" href="http://en.wikipedia.org/wiki/Raspberry_Pi#cite_note-Broadcom-BCM2835-Website-3">&lt;SPAN>[&lt;/SPAN>4&lt;SPAN>]&lt;/SPAN>&lt;/A>&lt;/SUP>&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
GPU:
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial" colSpan=2>Broadcom&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" title=VideoCore href="http://en.wikipedia.org/wiki/VideoCore">VideoCore&lt;/A>&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>IV,&lt;SUP style="LINE-HEIGHT: 1em; FONT-STYLE: normal; FONT-WEIGHT: normal" id=cite\_ref-hq-qa\_25-0 class=reference>&lt;A style="BACKGROUND-IMAGE: none; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" href="http://en.wikipedia.org/wiki/Raspberry_Pi#cite_note-hq-qa-25">&lt;SPAN>[&lt;/SPAN>26&lt;SPAN>]&lt;/SPAN>&lt;/A>&lt;/SUP>&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>OpenGL ES 2.0, 1080p30 H.264 high-profile decode&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;SUP style="LINE-HEIGHT: 1em; FONT-STYLE: normal; FONT-WEIGHT: normal" id=cite\_ref-Broadcom-BCM2835-Website\_3-5 class=reference>&lt;A style="BACKGROUND-IMAGE: none; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" href="http://en.wikipedia.org/wiki/Raspberry_Pi#cite_note-Broadcom-BCM2835-Website-3">&lt;SPAN>[&lt;/SPAN>4&lt;SPAN>]&lt;/SPAN>&lt;/A>&lt;/SUP>&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
Memory (SDRAM):
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
128&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" title=Mebibyte href="http://en.wikipedia.org/wiki/Mebibyte">MiB&lt;/A>
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
256&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" title=Mebibyte href="http://en.wikipedia.org/wiki/Mebibyte">MiB&lt;/A>
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
USB 2.0 ports:&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;SUP style="LINE-HEIGHT: 1em; FONT-STYLE: normal; FONT-WEIGHT: normal" id=cite_ref-VerifiedPeripheralList_8-2 class=reference>&lt;A style="BACKGROUND-IMAGE: none; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" href="http://en.wikipedia.org/wiki/Raspberry_Pi#cite_note-VerifiedPeripheralList-8">&lt;SPAN>[&lt;/SPAN>9&lt;SPAN>]&lt;/SPAN>&lt;/A>&lt;/SUP>
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
1
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
2 (via integrated USB hub)&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;SUP style="LINE-HEIGHT: 1em; FONT-STYLE: normal; FONT-WEIGHT: normal" id=cite_ref-SMSC-LAN9512-Website_24-1 class=reference>&lt;A style="BACKGROUND-IMAGE: none; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" href="http://en.wikipedia.org/wiki/Raspberry_Pi#cite_note-SMSC-LAN9512-Website-24">&lt;SPAN>[&lt;/SPAN>25&lt;SPAN>]&lt;/SPAN>&lt;/A>&lt;/SUP>
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
Video outputs:&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;SUP style="LINE-HEIGHT: 1em; FONT-STYLE: normal; FONT-WEIGHT: normal" id=cite_ref-faq_0-6 class=reference>&lt;A style="BACKGROUND-IMAGE: none; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" href="http://en.wikipedia.org/wiki/Raspberry_Pi#cite_note-faq-0">&lt;SPAN>[&lt;/SPAN>1&lt;SPAN>]&lt;/SPAN>&lt;/A>&lt;/SUP>
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial" colSpan=2>&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" title="Composite video" href="http://en.wikipedia.org/wiki/Composite_video">Composite RCA&lt;/A>,&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" title=HDMI href="http://en.wikipedia.org/wiki/HDMI">HDMI&lt;/A>&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
Audio outputs:&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;SUP style="LINE-HEIGHT: 1em; FONT-STYLE: normal; FONT-WEIGHT: normal" id=cite_ref-faq_0-7 class=reference>&lt;A style="BACKGROUND-IMAGE: none; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" href="http://en.wikipedia.org/wiki/Raspberry_Pi#cite_note-faq-0">&lt;SPAN>[&lt;/SPAN>1&lt;SPAN>]&lt;/SPAN>&lt;/A>&lt;/SUP>
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial" colSpan=2>&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" title="TRS connector" href="http://en.wikipedia.org/wiki/TRS_connector">3.5 mm jack&lt;/A>, HDMI&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
Onboard storage:&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;SUP style="LINE-HEIGHT: 1em; FONT-STYLE: normal; FONT-WEIGHT: normal" id=cite_ref-VerifiedPeripheralList_8-3 class=reference>&lt;A style="BACKGROUND-IMAGE: none; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" href="http://en.wikipedia.org/wiki/Raspberry_Pi#cite_note-VerifiedPeripheralList-8">&lt;SPAN>[&lt;/SPAN>9&lt;SPAN>]&lt;/SPAN>&lt;/A>&lt;/SUP>
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial" colSpan=2>&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" title="Secure Digital" href="http://en.wikipedia.org/wiki/Secure_Digital">SD&lt;/A>&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>/&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" title=MultiMediaCard href="http://en.wikipedia.org/wiki/MultiMediaCard">MMC&lt;/A>&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>/ SDIO card slot&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
Onboard network:&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;SUP style="LINE-HEIGHT: 1em; FONT-STYLE: normal; FONT-WEIGHT: normal" id=cite_ref-faq_0-8 class=reference>&lt;A style="BACKGROUND-IMAGE: none; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" href="http://en.wikipedia.org/wiki/Raspberry_Pi#cite_note-faq-0">&lt;SPAN>[&lt;/SPAN>1&lt;SPAN>]&lt;/SPAN>&lt;/A>&lt;/SUP>&lt;SUP style="LINE-HEIGHT: 1em; FONT-STYLE: normal; FONT-WEIGHT: normal" id=cite_ref-VerifiedPeripheralList_8-4 class=reference>&lt;A style="BACKGROUND-IMAGE: none; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" href="http://en.wikipedia.org/wiki/Raspberry_Pi#cite_note-VerifiedPeripheralList-8">&lt;SPAN>[&lt;/SPAN>9&lt;SPAN>]&lt;/SPAN>&lt;/A>&lt;/SUP>
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
None
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
10/100&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" title=Ethernet href="http://en.wikipedia.org/wiki/Ethernet">Ethernet&lt;/A>&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>(&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" title="Registered jack" href="http://en.wikipedia.org/wiki/Registered_jack#RJ45">RJ45&lt;/A>)&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;SUP style="LINE-HEIGHT: 1em; FONT-STYLE: normal; FONT-WEIGHT: normal" id=cite_ref-SMSC-LAN9512-Website_24-2 class=reference>&lt;A style="BACKGROUND-IMAGE: none; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" href="http://en.wikipedia.org/wiki/Raspberry_Pi#cite_note-SMSC-LAN9512-Website-24">&lt;SPAN>[&lt;/SPAN>25&lt;SPAN>]&lt;/SPAN>&lt;/A>&lt;/SUP>
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
Low-level peripherals:
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial" colSpan=2>2&amp;#215;13 header pins for&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" title="General Purpose Input/Output" href="http://en.wikipedia.org/wiki/General_Purpose_Input/Output">GPIO&lt;/A>,&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" title="Serial Peripheral Interface Bus" href="http://en.wikipedia.org/wiki/Serial_Peripheral_Interface_Bus">SPI&lt;/A>,&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" title=I²C href="http://en.wikipedia.org/wiki/I%C2%B2C">I²C&lt;/A>,&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" title="Universal asynchronous receiver/transmitter" href="http://en.wikipedia.org/wiki/Universal_asynchronous_receiver/transmitter">UART&lt;/A>, +3.3 Volt, +5 Volt&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;SUP style="LINE-HEIGHT: 1em; FONT-STYLE: normal; FONT-WEIGHT: normal" id=cite\_ref-hq-qa\_25-1 class=reference>&lt;A style="BACKGROUND-IMAGE: none; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" href="http://en.wikipedia.org/wiki/Raspberry_Pi#cite_note-hq-qa-25">&lt;SPAN>[&lt;/SPAN>26&lt;SPAN>]&lt;/SPAN>&lt;/A>&lt;/SUP>&lt;SUP style="LINE-HEIGHT: 1em; FONT-STYLE: normal; FONT-WEIGHT: normal" id=cite_ref-26 class=reference>&lt;A style="BACKGROUND-IMAGE: none; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" href="http://en.wikipedia.org/wiki/Raspberry_Pi#cite_note-26">&lt;SPAN>[&lt;/SPAN>27&lt;SPAN>]&lt;/SPAN>&lt;/A>&lt;/SUP>&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" title="Real-time clock" href="http://en.wikipedia.org/wiki/Real-time_clock">Real-time clock&lt;/A>:&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;SUP style="LINE-HEIGHT: 1em; FONT-STYLE: normal; FONT-WEIGHT: normal" id=cite_ref-faq_0-9 class=reference>&lt;A style="BACKGROUND-IMAGE: none; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" href="http://en.wikipedia.org/wiki/Raspberry_Pi#cite_note-faq-0">&lt;SPAN>[&lt;/SPAN>1&lt;SPAN>]&lt;/SPAN>&lt;/A>&lt;/SUP>
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial" colSpan=2>No clock or battery&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
Power ratings:
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
500&amp;nbsp;mA, (2.5 Watt)&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;SUP style="LINE-HEIGHT: 1em; FONT-STYLE: normal; FONT-WEIGHT: normal" id=cite_ref-faq_0-10 class=reference>&lt;A style="BACKGROUND-IMAGE: none; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" href="http://en.wikipedia.org/wiki/Raspberry_Pi#cite_note-faq-0">&lt;SPAN>[&lt;/SPAN>1&lt;SPAN>]&lt;/SPAN>&lt;/A>&lt;/SUP>
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
700&amp;nbsp;mA, (3.5&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" title=Watt href="http://en.wikipedia.org/wiki/Watt">Watt&lt;/A>)
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
Power source:&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;SUP style="LINE-HEIGHT: 1em; FONT-STYLE: normal; FONT-WEIGHT: normal" id=cite_ref-faq_0-11 class=reference>&lt;A style="BACKGROUND-IMAGE: none; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" href="http://en.wikipedia.org/wiki/Raspberry_Pi#cite_note-faq-0">&lt;SPAN>[&lt;/SPAN>1&lt;SPAN>]&lt;/SPAN>&lt;/A>&lt;/SUP>
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial" colSpan=2>5&amp;nbsp;&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" title=Volt href="http://en.wikipedia.org/wiki/Volt">Volt&lt;/A>&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>via&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" title=USB href="http://en.wikipedia.org/wiki/USB#Physical_appearance">MicroUSB&lt;/A>&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>or GPIO header&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
Size:
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial" colSpan=2>85.60mm × 53.98mm&lt;SUP style="LINE-HEIGHT: 1em; FONT-STYLE: normal; FONT-WEIGHT: normal" id=cite_ref-27 class=reference>&lt;A style="BACKGROUND-IMAGE: none; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" href="http://en.wikipedia.org/wiki/Raspberry_Pi#cite_note-27">&lt;SPAN>[&lt;/SPAN>28&lt;SPAN>]&lt;/SPAN>&lt;/A>&lt;/SUP>&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>(3.370 inch × 2.125 inch)&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
Supported operating systems:
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial" colSpan=2>&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" title=Debian href="http://en.wikipedia.org/wiki/Debian">Debian GNU/Linux&lt;/A>,&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" title="Fedora (operating system)" href="http://en.wikipedia.org/wiki/Fedora_(operating_system)">Fedora&lt;/A>,&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" title="Arch Linux" href="http://en.wikipedia.org/wiki/Arch_Linux">Arch Linux&lt;/A>&lt;SUP style="LINE-HEIGHT: 1em; FONT-STYLE: normal; FONT-WEIGHT: normal" id=cite\_ref-raspberrypi\_faqs_1-2 class=reference>&lt;A style="BACKGROUND-IMAGE: none; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" href="http://en.wikipedia.org/wiki/Raspberry_Pi#cite_note-raspberrypi_faqs-1">&lt;SPAN>[&lt;/SPAN>2&lt;SPAN>]&lt;/SPAN>&lt;/A>&lt;/SUP>&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial">
Unsupported operating systems:
&lt;/TD>
&lt;TD style="BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-LEFT: 0.2em; PADDING-RIGHT: 0.2em; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0.2em; border-image: initial" colSpan=2>&lt;SPAN style="WHITE-SPACE: nowrap" class=nowrap>&lt;A style="BACKGROUND-IMAGE: none; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" title="RISC OS" href="http://en.wikipedia.org/wiki/RISC_OS">RISC OS&lt;/A>&lt;/SPAN>&lt;SUP style="LINE-HEIGHT: 1em; FONT-STYLE: normal; FONT-WEIGHT: normal" id=cite\_ref-osnews\_risc\_os\_2-3 class=reference>&lt;A style="BACKGROUND-IMAGE: none; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128); TEXT-DECORATION: none; background-origin: initial; background-clip: initial" href="http://en.wikipedia.org/wiki/Raspberry_Pi#cite_note-osnews_risc_os-2">&lt;SPAN>[&lt;/SPAN>3&lt;SPAN>]&lt;/SPAN>&lt;/A>&lt;/SUP>&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>(shared source)&lt;/TD>&lt;/TABLE>
**관련기사도 떳네요
**
&lt;H1 style="TEXT-ALIGN: left; PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; OUTLINE-COLOR: ; PADDING-LEFT: 0px; OUTLINE-WIDTH: 0px; LETTER-SPACING: -0.05em; PADDING-RIGHT: 0px; FONT: bold 25px/30px 'Lucida Sans Unicode', 'Lucida Grande', sans-serif; WHITE-SPACE: normal; ORPHANS: 2; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; COLOR: rgb(0,0,0); CLEAR: none; VERTICAL-ALIGN: baseline; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; border-image: initial">
&lt;SPAN style="FONT-SIZE: 12pt">&lt;SPAN style="FONT-SIZE: 11pt">&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 11pt">$25 computers sell for over $3,000, money goes to charity&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>
&lt;/H1>
&lt;DIV style="POSITION: absolute; TEXT-ALIGN: left; PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px -3px 0px 0px; OUTLINE-COLOR: ; PADDING-LEFT: 0px; OUTLINE-WIDTH: 0px; BOTTOM: 20px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 12px/17px Verdana, sans-serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: right; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; COLOR: rgb(0,0,0); VERTICAL-ALIGN: baseline; BORDER-LEFT-WIDTH: 0px; RIGHT: 0px; WORD-SPACING: 0px; PADDING-TOP: 11px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; border-image: initial" class="article_actions cmt_actions">
&lt;/DIV>
&lt;H2 style="TEXT-ALIGN: left; PADDING-BOTTOM: 2px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; OUTLINE-WIDTH: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 35px; FONT: 17px/23px 'Lucida Sans Unicode', 'Lucida Grande', sans-serif; WHITE-SPACE: normal; ORPHANS: 2; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; COLOR: rgb(0,0,0); VERTICAL-ALIGN: baseline; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; border-image: initial">
&lt;SPAN style="FONT-SIZE: 11pt">&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 11pt">First run of ultra-cheap Raspberry Pi computers hits eBay for a good&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;SPAN class=Apple-converted-space>&lt;SPAN style="FONT-SIZE: 11pt">&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 11pt">&amp;nbsp;&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;br /> &lt;A href="http://www.tecca.com/news/2012/01/05/raspberry-pi-ebay/">&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 11pt">http://www.tecca.com/news/2012/01/05/raspberry-pi-ebay/&lt;/SPAN>&lt;/SPAN>&lt;/A>&lt;br />
&lt;/H2>
&lt;H2 style="TEXT-ALIGN: left; PADDING-BOTTOM: 2px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; OUTLINE-WIDTH: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 35px; FONT: 17px/23px 'Lucida Sans Unicode', 'Lucida Grande', sans-serif; WHITE-SPACE: normal; ORPHANS: 2; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; COLOR: rgb(0,0,0); VERTICAL-ALIGN: baseline; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; border-image: initial">
&amp;nbsp;
&lt;/H2>
&lt;p>&lt;strong>Fast Company의 기사&lt;br>
TO REDEFINE COMPUTING, HAVE A COUPLE BEERS: THE RASPBERRY PI CREATION STORY&lt;/strong>&lt;br>
&lt;a href="http://www.fastcocreate.com/1679342/to-redefine-computing-have-a-couple-beers-the-raspberry-pi-creation-story?partner=best_of_newsletter">&lt;SPAN style="FONT-SIZE: 11pt">&lt;SPAN style="FONT-SIZE: 9pt">http://www.fastcocreate.com/1679342/to-redefine-computing-have-a-couple-beers-the-raspberry-pi-creation-story?partner=best_of_newsletter&lt;/SPAN>&lt;/SPAN>&lt;/a>&lt;/p></description></item><item><title>BeagleBone</title><link>https://openmicrolab.com/beaglebone/</link><pubDate>Thu, 05 Jan 2012 11:50:13 +0000</pubDate><guid>https://openmicrolab.com/beaglebone/</guid><description>
&lt;P style="MARGIN: 0px">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile26.uf.187B973E4F058BC90C1C0D.jpg" class="aligncenter" width="368" height="354" alt="" filename="beaglebone.jpg" filemime="image/jpeg" />
&lt;/P>
&lt;p>TI사의 Beagleboard의 장점만을 가져온 저가형 오픈 하드웨어 플랫폼인 BeageBone&lt;br>
보드사이즈도 작고 TI사의 AM3358 ARM Cortex-A8 기반의 칩이 사용되었고, 물론 Linux 기반이다.&lt;br>
&lt;A title="[http://liketheocean.tistory.com/186]로 이동합니다." href="http://liketheocean.tistory.com/186" target=_blank>Rascal&lt;/A>과 비슷하게 웹서버 내장형 개발 환경을 제공한다.&lt;/p>
&lt;p>오픈 하드웨어이므로 관련 정보는 모두 오픈되어 있다. &lt;a href="http://beagleboard.org/hardware/design/">http://beagleboard.org/hardware/design/&lt;/a>&lt;br>
&lt;SPAN style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; LETTER-SPACING: normal; DISPLAY: inline !important; FONT: 12px/16px Verdana, Arial, Helvetica, sans-serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; COLOR: rgb(82,82,82); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&lt;br /> &lt;STRONG>BeagleBone에 대한 설명&lt;/STRONG>&lt;br /> The BeagleBone is the low-cost, high-expansion hardware-hacker focused BeagleBoard. It is a bare-bones BeagleBoard that acts as a USB or Ethernet connected expansion companion for your current BeagleBoard and BeagleBoard-xM or works stand-alone. The BeagleBone is small even by BeagleBoard standards and with the high-performance ARM capabilities you expect from a BeagleBoard, the BeagleBone brings full-featured Linux to places it has never gone before.&lt;/p></description></item><item><title>Rascal 오픈 하드웨어 플랫폼</title><link>https://openmicrolab.com/rascal-%EC%98%A4%ED%94%88-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-%ED%94%8C%EB%9E%AB%ED%8F%BC/</link><pubDate>Thu, 05 Jan 2012 11:29:06 +0000</pubDate><guid>https://openmicrolab.com/rascal-%EC%98%A4%ED%94%88-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-%ED%94%8C%EB%9E%AB%ED%8F%BC/</guid><description>
&lt;P style="MARGIN: 0px">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile10.uf.15648E464F05855D0BE66D.jpg" class="aligncenter" width="492" height="299" alt="" filename="rascal-0.6-beta-2011-02-26.jpg" filemime="image/jpeg" />
&lt;/P>
&lt;p>위 사진에 보이는 보드가 Rascal이다. Rascal은 아두이노와 같은 오픈하드웨어 플랫폼이다.&lt;br>
특징은 아두이노보다 파워풀한 하드웨어 스펙이라서 아두이노 보다 높은 성능을 요구하는 응용에 알맞다. &lt;/p>
&lt;p>**하드웨어&lt;br>
**&lt;/p>
&lt;UL style="LIST-STYLE-TYPE: square">
&lt;br />
&lt;LI>
Atmel사의 AT91SAM9G20
&lt;/LI>
&lt;br />
&lt;LI>
MicroSD
&lt;/LI>
&lt;br />
&lt;LI>
4M Serial Flash&lt;br /> 등의 하드웨어의 리눅스 기반의 보드이다.&lt;br /> 관련 하드웨어 정보: &lt;A href="http://rascalmicro.com/docs/sources.html">http://rascalmicro.com/docs/sources.html&lt;/A>
&lt;/LI>
&lt;/UL>
&lt;p>그리고 아두이노의 쉴드들을 활용할 수 있게 보드사이즈를 맞추었다.&lt;/p>
&lt;p>**가장 특징적인 것은 기본적으로 네트워크가 지원이 되고 Phyton을 이용해서 프로그래밍을 한다.&lt;br>
즉 보드에 자체 웹서버가 있고 웹 에디터가 내장이 되어 있어서 PC에서 보드에 접속을 해서 웹 환경에서 Phyton으로 프로그래밍을 하는 형태이다.&lt;br>
**&lt;br>
&lt;strong>Rascal의 특징&lt;/strong>&lt;/p></description></item><item><title>IRON HACK 참가기</title><link>https://openmicrolab.com/iron-hack-%EC%B0%B8%EA%B0%80%EA%B8%B0/</link><pubDate>Mon, 26 Dec 2011 11:31:12 +0000</pubDate><guid>https://openmicrolab.com/iron-hack-%EC%B0%B8%EA%B0%80%EA%B8%B0/</guid><description>
&lt;p>지난 목요일(12/22) 저녁 8시 &lt;A title="[http://www.kunsthalle.com/]로 이동합니다." href="http://www.kunsthalle.com/" target=_blank>플라툰 쿤스트할래&lt;/A>에서 개최된 IRON HACK 행사에 참석했습니다. &lt;/p>
&lt;P style="MARGIN: 0px">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile1.uf.1530A84B4EF85310114D0F.jpg" class="aligncenter" width="364" height="251" alt="" filename="iron hack.jpg" filemime="image/jpeg" />
&lt;/P>아래 내용은 &lt;A title="[http://hackerspaceseoul.com/?p=500]로 이동합니다." href="http://hackerspaceseoul.com/?p=500" target=_blank>Hacker Space Seoul&lt;/A>에 있는 행사에 대한&amp;nbsp;소개 내용입니다.&amp;nbsp;
&lt;DIV style="BORDER-BOTTOM: #fedec7 1px solid; BORDER-LEFT: #fedec7 1px solid; PADDING-BOTTOM: 10px; BACKGROUND-COLOR: #fedec7; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; BORDER-TOP: #fedec7 1px solid; BORDER-RIGHT: #fedec7 1px solid; PADDING-TOP: 10px" class=txc-textbox>**아이언 핵**
&amp;nbsp;
아이언 핵 (해킹 철인) 은 아이언 세프 (요리 철인 ) 이라는 세계적인 TV 프로그램을 패러디한 디자인 대회이다. 대회 참가자들에게는 대회 당일날 엄청난 양의 비밀스런 재료가 공개된다. 주어진 시간은 단 2시간. 참가자들은 그 재료를 자신만의 방식으로 해킹하여, 유용하거나 혹은 흥미로운 무언가를 만들어 내야 된다. 현장에는 심사위원들이 있으며, 최고의 해킹 철인을 위한 소정의 상이 마련되어 있다.
&amp;nbsp;
해킹, 누구나 할수 있다. 할아버지도, 며느리도,&amp;nbsp; 울 강아지도!. …이번 해커스페이스 서울은 이번 경연에서 기존의 틀을 깨어내는 창의적인 마인드에 집중하고자 한다. 일상속에 갇혀있는 일탈의 기운을 흔들고 싶으신 분, 자신만의 아이디어를 실현하고 싶으신 분들의 참여를 환영합니다.
…
이 경연에 참가하시고 싶으신 분은 &lt;seoulhackerspace@gmail.com> 로 이메일로 신청해주십시오. 지금!
시간: 12월 22일 목요일 8시&lt;/DIV>
&lt;DIV style="BORDER-BOTTOM: #fedec7 1px solid; BORDER-LEFT: #fedec7 1px solid; PADDING-BOTTOM: 10px; BACKGROUND-COLOR: #fedec7; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; BORDER-TOP: #fedec7 1px solid; BORDER-RIGHT: #fedec7 1px solid; PADDING-TOP: 10px" class=txc-textbox>장소: 플라툰 쿤스트할래&lt;/DIV>
&lt;DIV style="BORDER-BOTTOM: #fedec7 1px solid; BORDER-LEFT: #fedec7 1px solid; PADDING-BOTTOM: 10px; BACKGROUND-COLOR: #fedec7; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; BORDER-TOP: #fedec7 1px solid; BORDER-RIGHT: #fedec7 1px solid; PADDING-TOP: 10px" class=txc-textbox>대회 참가비: 10000 원&lt;/DIV>
&lt;DIV style="BORDER-BOTTOM: #fedec7 1px solid; BORDER-LEFT: #fedec7 1px solid; PADDING-BOTTOM: 10px; BACKGROUND-COLOR: #fedec7; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; BORDER-TOP: #fedec7 1px solid; BORDER-RIGHT: #fedec7 1px solid; PADDING-TOP: 10px" class=txc-textbox>조기 예약자 할인: 5000 원 (12/18일까지)&lt;/DIV>
&lt;P style="MARGIN: 0px">
&lt;br /> 일단 참가를 하게된 동기는&amp;nbsp;&lt;A title="[http://liketheocean.tistory.com/121]로 이동합니다." href="http://liketheocean.tistory.com/121" target=_blank>London Hacksace를 다녀와서&lt;/A> 한국에 있는 hack space를 찾다보니 Hacker Space Seoul를 찾게 되었고, 여기서 주관하는 행사에 참석을 하게됐습니다. 예상과는 달리 많은 사람들이 참석을 했으며, 제가 앉은 테이블에는 수능을 본 학생, 대전에서 대학을 졸업하고 창업을 한 분, 모바일 마케팅쪽에 종사하시는 분등 다양한 분들이 참석을 했습니다.&lt;br /> 참고로 한국의 Hacker Space는 런던의 HackSpace와는 사뭇다른 bar 분위기 입니다.&lt;br />
&lt;/P>
&lt;P style="TEXT-ALIGN: center; MARGIN: 0px">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile26.uf.1141D84F4EF8592A14404F.jpg" class="aligncenter" width="532" height="376" alt="" filename="2011-12-22 20.28.20.jpg" filemime="image/jpeg" />행사의 주제인 스카치테이프가 수북히 쌓여 있습니다.&lt;br />
&lt;/P>
&lt;P style="MARGIN: 0px">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile29.uf.1241D84F4EF8592A158F19.jpg" class="aligncenter" width="502" height="387" alt="" filename="2011-12-22 22.18.41.jpg" filemime="image/jpeg" />
&lt;/P>
&lt;P style="MARGIN: 0px">
이날 행사의 주제는 스카치테이프를 가지고, 2시간 동안 창의적인 작품을 만드는 것인데, 전 고작 위 사진같이 해파리 같은 모자를 만들었는데, 다른 분들은 아래 사진처럼 정말 잘 만들더라구요. 그런데 전공을 물어보니 대부분 미술쪽 전공&amp;#8230; 홍대 출신.. -_-;; 역쉬&amp;#8230;.&lt;br /> &lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile22.uf.1341D84F4EF8592A167EBD.jpg" class="aligncenter" width="530" height="409" alt="" filename="2011-12-22 22.19.45.jpg" filemime="image/jpeg" />
&lt;/P>
&lt;P style="TEXT-ALIGN: center; MARGIN: 0px">
Speak
&lt;/P>
&lt;P style="TEXT-ALIGN: center; MARGIN: 0px">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile22.uf.162C584B4EF8598031EEEA.jpg" class="aligncenter" width="403" height="527" alt="" filename="2011-12-22 22.21.54.jpg" filemime="image/jpeg" />
&lt;/P>
&lt;P style="TEXT-ALIGN: center; MARGIN: 0px">
롤러코스터&lt;br /> &lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile25.uf.172C584B4EF8598032A2D6.jpg" class="aligncenter" width="415" height="543" alt="" filename="2011-12-22 22.25.15.jpg" filemime="image/jpeg" />
&lt;/P>
&lt;P style="TEXT-ALIGN: center; MARGIN: 0px">
스카치페이프로 옷을 만드신 분과 공룡 모양의 공연의상을 만드신 분&lt;br /> &lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile7.uf.182C584B4EF85980333A4A.jpg" class="aligncenter" width="425" height="577" alt="" filename="2011-12-22 22.33.36.jpg" filemime="image/jpeg" />
&lt;/P>
&lt;P style="TEXT-ALIGN: center; MARGIN: 0px">
거미줄에 걸린 루돌프 (1등)&lt;br />
&lt;/P>
&lt;P style="TEXT-ALIGN: center; MARGIN: 0px">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile25.uf.202C584B4EF8598134C0E4.jpg" class="aligncenter" width="532" height="392" alt="" filename="2011-12-22 22.36.30.jpg" filemime="image/jpeg" />
&lt;/P>
&lt;P style="TEXT-ALIGN: center; MARGIN: 0px">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile9.uf.112C584B4EF859813537CD.jpg" class="aligncenter" width="541" height="393" alt="" filename="2011-12-22 22.36.42.jpg" filemime="image/jpeg" />
&lt;/P>
&lt;P style="TEXT-ALIGN: center; MARGIN: 0px">
위 작품은 정면에서 봤을때는 Iron hack 이라는 글자가 보이는 작품
&lt;/p></description></item><item><title>LeafLabs의 Maple mini, Maple Ret 5 보드 사용기</title><link>https://openmicrolab.com/leaflabs%EC%9D%98-maple-mini-maple-ret-5-%EB%B3%B4%EB%93%9C-%EC%82%AC%EC%9A%A9%EA%B8%B0/</link><pubDate>Fri, 25 Nov 2011 11:31:38 +0000</pubDate><guid>https://openmicrolab.com/leaflabs%EC%9D%98-maple-mini-maple-ret-5-%EB%B3%B4%EB%93%9C-%EC%82%AC%EC%9A%A9%EA%B8%B0/</guid><description>
&lt;p>&lt;A title="[http://arduino.cc]로 이동합니다." href="http://arduino.cc/" target=_blank>Arduino&lt;/A>가 AVR을 기반으로 하여 오픈하드웨어 플랫폼을 주도하고 있는데, &lt;A title="[http://leaflabs.com/]로 이동합니다." href="http://leaflabs.com/" target=_blank>Leaflabs&lt;/A>은 STM32시리즈를 기반으로 하는 오픈하드웨어 플랫폼을 만들고 있다. &lt;A title="[http://leaflabs.com/]로 이동합니다." href="http://leaflabs.com/" target=_blank>Leaflabs&lt;/A>의 보드들의 이름은 Maple이다.&lt;br>
&lt;A title="[http://leaflabs.com/]로 이동합니다." href="http://leaflabs.com/" target=_blank>Leaflabs&lt;/A>사의 홈페이지에서 주문을 하니 한 일주일만에 배송이 되었다. &lt;A title="[http://arduino.cc]로 이동합니다." href="http://arduino.cc/" target=_blank>Arduino&lt;/A>가 요즘에는 브랜딩 작업을 하고 있고, 포장 및 디자인까지 신경을 쓰는 반면 역시 후발 주자답게 포장이 좀 허접하다. 대신 사탕을 같이 넣어서 주네..ㅋㅋ&lt;/p>
&lt;P style="MARGIN: 0px">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile23.uf.180B40494ECF78311B6A81.jpg" class="aligncenter" width="490" height="322" alt="" filename="Maple with Candy.jpg" filemime="image/jpeg" />
&lt;/P>
&lt;P style="MARGIN: 0px">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile6.uf.180B55484ECF78B6227356.jpg" class="aligncenter" width="551" height="331" alt="" filename="Maple.jpg" filemime="image/jpeg" />
&lt;/P>
&lt;p>아두이노와 같은 모습의 IDE를 사용하는데, 일단 처음 부터 막힌다. &lt;A title="[http://static.leaflabs.com/pub/leaflabs/maple-ide/maple-ide-0.0.12-windowsxp32.zip]로 이동합니다." href="http://static.leaflabs.com/pub/leaflabs/maple-ide/maple-ide-0.0.12-windowsxp32.zip" target=_blank>IDE 다운로드&lt;/A>&lt;/p></description></item><item><title>Footprint를 살짝 변경함으로 생산의 에러를 줄이는 방법</title><link>https://openmicrolab.com/footprint%EB%A5%BC-%EC%82%B4%EC%A7%9D-%EB%B3%80%EA%B2%BD%ED%95%A8%EC%9C%BC%EB%A1%9C-%EC%83%9D%EC%82%B0%EC%9D%98-%EC%97%90%EB%9F%AC%EB%A5%BC-%EC%A4%84%EC%9D%B4%EB%8A%94-%EB%B0%A9%EB%B2%95/</link><pubDate>Wed, 23 Nov 2011 11:03:31 +0000</pubDate><guid>https://openmicrolab.com/footprint%EB%A5%BC-%EC%82%B4%EC%A7%9D-%EB%B3%80%EA%B2%BD%ED%95%A8%EC%9C%BC%EB%A1%9C-%EC%83%9D%EC%82%B0%EC%9D%98-%EC%97%90%EB%9F%AC%EB%A5%BC-%EC%A4%84%EC%9D%B4%EB%8A%94-%EB%B0%A9%EB%B2%95/</guid><description>
&lt;p>핀헤더를 PCB보드에 직각으로 제대로 솔더링하기 위해서 PCB footprint를 변경하는 아이디어&lt;/p>
&lt;P style="MARGIN: 0px">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile9.uf.133175404ECCD22E15A1F6.jpg" class="aligncenter" width="500" height="97" alt="" filename="PCB_Footprint_existing.jpg" filemime="image/jpeg" />
&lt;/P>
&lt;P style="TEXT-ALIGN: center; MARGIN: 0px">
기존의 라이브러리
&lt;/P>
&lt;P style="MARGIN: 0px">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile1.uf.143175404ECCD22E16DED8.jpg" class="aligncenter" width="500" height="173" alt="" filename="PCB_Footprint_Modified.jpg" filemime="image/jpeg" />
&lt;/P>
&lt;DIV style="TEXT-ALIGN: center">
화살표 방향으로 센터를 옮긴 라이브러리&lt;/p>
&lt;p>
&lt;/DIV>&lt;br />
&lt;pre>&lt;code>&amp;lt;DIV style=&amp;quot;TEXT-ALIGN: left&amp;quot;&amp;gt;
양방향으로 조금 벌어진 구멍때문에 핀헤더를 지지하게 되어, PCB 보드에 핀헤더가 직각으로 장착이 된다.&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
관련 자료: &amp;lt;A href=&amp;quot;http://www.sparkfun.com/tutorials/114&amp;quot;&amp;gt;http://www.sparkfun.com/tutorials/114&amp;lt;/A&amp;gt;&amp;lt;br /&amp;gt; &amp;lt;/DIV&amp;gt;&amp;lt;br /&amp;gt;
&amp;lt;DIV style=&amp;quot;TEXT-ALIGN: left&amp;quot;&amp;gt;
&amp;lt;br /&amp;gt; SparkFun의 EagleCAD Footprint 라이브러리 : &amp;lt;A href=&amp;quot;http://www.opencircuits.com/SFE_Footprint_Library_Eagle&amp;quot;&amp;gt;http://www.opencircuits.com/SFE_Footprint_Library_Eagle&amp;lt;/A&amp;gt;
&amp;lt;/DIV&amp;gt;
&amp;lt;/p&amp;gt;
&lt;/code>&lt;/pre></description></item><item><title>Fritzing 라이브러리 만들기</title><link>https://openmicrolab.com/fritzing-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link><pubDate>Fri, 04 Nov 2011 11:53:09 +0000</pubDate><guid>https://openmicrolab.com/fritzing-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid><description>
&lt;p>Frtizing이라는 툴을 지난번에 소개한 적이 있다.  &lt;a title="[http://liketheocean.tistory.com/159]로 이동합니다." href="http://liketheocean.tistory.com/159" target="_blank" rel="noopener">독일의 오픈 소스툴&lt;/a>&lt;br>
이 툴을 직접 사용을 해봤는데, 실제 피지컬한 보드를 가지고 설계를 하는 듯한 느낌이 있고 이것을 다시 회로로 변환을 해주는 것이 흥미롭다. 전자공학을 하는 초보자들에게는 좋은 툴인 동시에 이미 많이 개발된 파트 라이브러리 덕에 문서 작업에 유용하게 쓰일 수 있다.&lt;br>
이미 아두이노, 아두이노 이더넷 쉴드, Xbee, mbed…등등의 파트들이 제작이 되어 있다.&lt;/p>
&lt;p style="margin: 0px;">
&lt;p style="margin: 0px;">
&lt;img loading="lazy" class="aligncenter" src="https://openmicrolab.com/images/1/cfile22.uf.1357A9424EB3D30434EFCF.PNG" alt="" width="683" height="575" />
&lt;/p>
&lt;p>
자신만의 라이브러리를 만들여면 이미지 작업을 해야하는데, 이미 만들어 놓은 라이브러리를 수정해서 사용하면 좀 편하다. 이미지 파일은 벡터기반의 SVG포맷으로 만들어야 한다. 따라서 오픈 소스 툴인 &lt;a title="[http://inkscape.org/]로 이동합니다." href="http://inkscape.org/" target="_blank" rel="noopener">InkScape&lt;/a>를 사용하던지 상용툴인 어도비사의 일러스트레이터를 사용해야 한다. 구체적인 정보: &lt;a href="http://fritzing.org/learning/tutorials/creating-custom-parts/">http://fritzing.org/learning/tutorials/creating-custom-parts/&lt;/a>
&lt;/p></description></item><item><title>오픈소스 커뮤니티에 대해…</title><link>https://openmicrolab.com/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%EC%BB%A4%EB%AE%A4%EB%8B%88%ED%8B%B0%EC%97%90-%EB%8C%80%ED%95%B4/</link><pubDate>Thu, 06 Oct 2011 03:28:52 +0000</pubDate><guid>https://openmicrolab.com/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%EC%BB%A4%EB%AE%A4%EB%8B%88%ED%8B%B0%EC%97%90-%EB%8C%80%ED%95%B4/</guid><description>
&lt;p>&lt;SPAN style="FONT-SIZE: 10pt">&lt;SPAN style="FONT-SIZE: 9pt">아래 기사는 삼성전자의 모바일 플랫폼인 ‘바다’에 대한 조언이지만, 크게 보면 오픈 소스 커뮤니티를 구성을 할때 어떻게 해야하는지에 대한 전문가의 의견이다.&lt;br /> &lt;/SPAN>중요한 이슈는 &lt;STRONG>“오픈 소스 커뮤니티에 개발 과정을 전부 공개하고, 개발자들이 참여를 할 수 있도록 하는 것”&lt;br /> &lt;/STRONG>&lt;br /> &lt;STRONG>“바다 성공하려면 제3의 조직에서 운영해야”&lt;/STRONG>&lt;/SPAN>&lt;br>
“삼성전자 자체 모바일 플랫폼 ‘바다’가 성공하려면 삼성에서 분리된 별도 조직에서 바다를 운영해야 합니다.”&lt;br>
헤럴드 웰테(Harald Welte) &lt;A title="[http://gpl-violations.org/]로 이동합니다." href="http://gpl-violations.org/" target=_blank>GPL바이올레이션스 &lt;/A>설립자는 바다 성공의 전제 조건을 제3의 비영리조직 설립이라고 제안했다. 웰테는 2004년 오픈소스 지식재산권 감시 비영리 조직 GPL바이올레이션스를 설립했으며 오픈소스 관련 컨설팅 대가다. 그는 또, 리눅스 커널 방화벽 엔진 넷파일러·아이피테이블(Netfiller/iptables)과 리눅스 커널 패킷 필터 서비스 시스템 핵심 개발자다.&lt;br>
웰테는 “삼성이 바다를 공개한 것이 오픈소스화하는 것인지 휴대폰 제조사에게만 주는 것인지 명확하지 않다”며 “바다가 노키아 심비안의 전철을 밟지 않으려면 **&lt;SPAN style="FONT-SIZE: 12pt">&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">오픈소스 커뮤니티에 개발 과정 전체를 공개해야 &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>**한다”고 설명했다. 그는 “노키아 심비안은 오픈소스 SW지만 개발과정에 외부 개발자를 참여시키지 않았다”며 “그냥 웹 사이트에 공개한 오픈소스는 의미가 없다”고 지적했다. 웰테는 “바다가 오픈소스 전략으로 성공하려면 삼성으로부터 완전히 분리해야 한다”며 “바다 파운데이션과 같은 별도의 조직에서 다른 기업과 개발자가 참여할 수 있게 해야 한다”고 설명했다. 삼성은 초기 바다 파운데이션 설립에 힘을 보태고 꾸준한 지원을 하며 개발자는 물론이고 대학, 다른 기업을 참여시키는 형태다.&lt;br>
웰테는 “모바일 플랫폼의 성공 여부는 서드파트 애플리케이션 확보에 달려있다”고 덧붙였다. – 출처: &lt;A title="[http://www.etnews.com/news/detail.html?id=201110040153&amp;mc=m\_014\_00001]로 이동합니다." href="http://www.etnews.com/news/detail.html?id=201110040153&amp;mc=m\_014\_00001" target=_blank>전자신문&lt;/A>&lt;/p></description></item><item><title>Visual diffs</title><link>https://openmicrolab.com/visual-diffs/</link><pubDate>Wed, 05 Oct 2011 10:38:11 +0000</pubDate><guid>https://openmicrolab.com/visual-diffs/</guid><description>
&lt;p>오픈 소스 소프트웨어의 버젼관리는 SourceForge, GitHub, Google Code등을 이용가능하다.&lt;br>
하지만 오픈 소스 하드웨어의 경우는 아직 이런 툴들이 없다.&lt;br>
물론 버전관리는 하지만 회로도나 거버파일같은 CAD 자료의 경우 text로 적어 놓은 버젼을 관리하는게 이제까지의 방법이다.&lt;br>
만약 이런 CAD자료들이 plain text로 저장이 가능하다면 diff를 써서 바뀐 정보를 알수가 있는데,&lt;br>
다른 방법은 &lt;A title="[http://www.imagemagick.org/script/index.php]로 이동합니다." href="http://www.imagemagick.org/script/index.php" target=_blank>imageMagic utility&lt;/A>를 사용을해서 바뀐 정보를 확인하는 것이다.&lt;br>
또 다른 방법은 자료를 PDF로 만든후 &lt;A title="[http://www.qtrac.eu/diffpdf.html]로 이동합니다." href="http://www.qtrac.eu/diffpdf.html" target=_blank>DiffPDF&lt;/A>를 사용하는 방법&lt;br>
구체적인 방법은 &lt;SPAN style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; LETTER-SPACING: normal; FONT: 13px 'Trebuchet MS', 'Gill Sans', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; ORPHANS: 2; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px" class=Apple-style-span>&lt;/p></description></item><item><title>Fritzing</title><link>https://openmicrolab.com/fritzing/</link><pubDate>Tue, 27 Sep 2011 11:27:38 +0000</pubDate><guid>https://openmicrolab.com/fritzing/</guid><description>
&lt;p>독일의 오픈 소스툴.&lt;br>
&lt;a href="http://fritzing.org/">http://fritzing.org/&lt;/a>&lt;/p>
&lt;p>Fritzing is an open-source initiative to support designers, artists, researchers and hobbyists to work creatively with interactive electronics. We are creating a software and website in the spirit of Processing and Arduino, developing a tool that allows users to document their prototypes, share them with others, teach electronics in a classroom, and to create a pcb layout for professional manufacturing.&lt;/p>
&lt;p>가상의 부품을 보드에 올릴수 있도록 해주고, 서킷을 만들어 준다. 이 내용을 가지고 문서를 만들기 편하게 해준다.&lt;br>
또한 Auto routing으로 PCB까지 제작을 할 수 있도록 해주는 툴이다.&lt;/p></description></item><item><title>아두이노의 미래</title><link>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8%EC%9D%98-%EB%AF%B8%EB%9E%98/</link><pubDate>Thu, 22 Sep 2011 08:23:23 +0000</pubDate><guid>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8%EC%9D%98-%EB%AF%B8%EB%9E%98/</guid><description>
&lt;IFRAME height=315 src="http://www.youtube.com/embed/GbsgFKyI_Mk" frameBorder=0 width=560 allowfullscreen>&lt;/IFRAME>
What&amp;#8217;s Ahead Of Arduino &amp;#8211; Part 1 &amp;#8211; Massimo &lt;Banzi@MakerFaire> 2011
&lt;IFRAME height=315 src="http://www.youtube.com/embed/zJwtZSS6kqU" frameBorder=0 width=560 allowfullscreen>&lt;/IFRAME>
What&amp;#8217;s Ahead Of Arduino &amp;#8211; Part&amp;nbsp;2 &amp;#8211; Massimo &lt;Banzi@MakerFaire> 2011
결국 아두이노의 힘은 커뮤니티!!
&lt;p>아래 사진은 Make Fair에서 나눠준 아두이노의 리플렛인데 신제품만 모았다.&lt;br>
각각의 제품마다 밑에 이 보드로 무엇을 할 수 있는지 설명이 있다.&lt;br>
가령 WiFi의 경우 Fully Hackable!&lt;br>
ADK의 경우 Develop your own android accessory !&lt;/p>
&lt;P style="MARGIN: 0px">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile23.uf.141C993E4E7AF181391842.jpg" class="aligncenter" width="683" height="442" alt="" filename="6167088135_1270e2ff44_b.jpg" filemime="image/jpeg" />
&lt;/P>
&lt;p>아래 슬라이드는 아두이노가 OSHW 서밋에서 발표한 자료..&lt;/p></description></item><item><title>아두이노의 신제품</title><link>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8%EC%9D%98-%EC%8B%A0%EC%A0%9C%ED%92%88/</link><pubDate>Thu, 22 Sep 2011 08:04:07 +0000</pubDate><guid>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8%EC%9D%98-%EC%8B%A0%EC%A0%9C%ED%92%88/</guid><description>
&lt;P style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 5px">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile25.uf.14128D3F4E7AE3971CFAC1.jpg" class="aligncenter" width="223" height="241" alt="" filename="Due-300x300.jpg" filemime="image/jpeg" />
&lt;/P>
&lt;DIV style="BORDER-BOTTOM: #fefeb8 1px solid; BORDER-LEFT: #fefeb8 1px solid; PADDING-BOTTOM: 10px; BACKGROUND-COLOR: #fefeb8; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; BORDER-TOP: #fefeb8 1px solid; BORDER-RIGHT: #fefeb8 1px solid; PADDING-TOP: 10px" class=txc-textbox>For the second year in a row we decided to announce our new products at Maker Faire in NYC.
&lt;P style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 5px">
Tomorrow morning, if you come to the Arduino tent, you will be able to see:
&lt;/P>
&lt;P style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 5px">
&lt;STRONG>Arduino 1.0&lt;/STRONG>, we finally froze the Arduino API, the IDE and the layout of the boards. We’ve made some minor additions to the Arduino connectors to make them more flexible. Tomorrow you will be able to download the release candidate and in 1 month of frantic testing with the community, the platform will be ready and stable.
&lt;/P>
&lt;P style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 5px">
&lt;STRONG>Arduino Leonardo&lt;/STRONG>, a low cost Arduino board with the Atmega32u4. It has the same shape and connectors as the UNO but it has a simpler circuit. On the software side it has a nifty USB driver able to simulate a mouse , a keyboard, a serial port (with more drivers coming later). As usual for Arduino, everything will be released as open source (Core, Bootloader, Hardware).
&lt;/P>
&lt;P style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 5px">
&lt;STRONG>Arduino Due,&lt;/STRONG>&lt;SPAN class=Apple-converted-space> &lt;/SPAN>a major breakthrough for Arduino because we’re launching an Arduino board with a 32bit Cortex-M3 ARM processor on it. We’re using the SAM3U processor from ATMEL running at 96MHz with 256Kb of Flash, 50Kb of Sram, 5 SPI buses, 2 I2C interfaces, 5 UARTS, 16 Analog Inputs at 12Bit resolution and much more.
&lt;/P>
&lt;P style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 5px">
Instead of just releasing the finished platform we are opening the process to the community early on. We’re going to be demoing the board and giving away some boards to a selected group of developers who will be invited to shape the platform while it’s been created. After Maker Faire, we will begin selling a small batch of Developer Edition boards on the Arduino store (store.arduino,cc) for members of the community who want to be join the development effort. We plan a final and tested release by the end of 2011
&lt;/P>
&lt;P style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 5px">
&lt;STRONG>Arduino Wifi Shield.&lt;SPAN class=Apple-converted-space> &lt;/SPAN>&lt;/STRONG>It adds Wi-Fi communication capabilities to any Arduino. Instead of using any of the classic WiFi modules on the market we wanted to have something that will provide the maximum level of hackability to the user. The shield is based on a wifi micro module made by H&amp;D Wireless coupled with a powerful AVR32 processor that carries the full TCP-IP stack leaving room to add your own protocols and customisations. We’ve also worked hard to make sure that you will be able to migrate your code from the Ethernet Shield with minor changes.
&lt;/P>
&lt;P style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 5px">
We’re also going to show some prototypes of new platforms we’ve been working on: We have robots, new IDEs and more.
&lt;/P>
&lt;P style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 5px">
It has been a crazy few months and we want to thank ATMEL very much the support that we got on all the new products.
&lt;/P>
&lt;P style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 5px">
Come over to Maker Faire and have a look for yourself!
&lt;/P>&lt;/DIV>
&lt;p>지난 9월 17, 18일 뉴욕의 &lt;A title="[http://makerfaire.com/]로 이동합니다." href="http://makerfaire.com/" target=_blank>Make Fair&lt;/A>에서 아두이노는 자신들의 신제품 출시 계획을 발표했다.&lt;br>
&lt;strong>Arduino 1.0&lt;/strong>&lt;br>
API, IDE가 드리어 1.0버젼을 달았다. 커뮤니티에서 1달여간의 추가적인 테스트를 거쳐 최종적으로 fix될 예정&lt;br>
&lt;a href="http://code.google.com/p/arduino/wiki/Arduino1">http://code.google.com/p/arduino/wiki/Arduino1&lt;/a> 에서 다운로드 가능하다.&lt;/p></description></item><item><title>임베디드보드에서 트위터하기 2 – 아두이노를 이용한 트위터</title><link>https://openmicrolab.com/%EC%9E%84%EB%B2%A0%EB%94%94%EB%93%9C%EB%B3%B4%EB%93%9C%EC%97%90%EC%84%9C-%ED%8A%B8%EC%9C%84%ED%84%B0%ED%95%98%EA%B8%B0-2-%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C/</link><pubDate>Fri, 16 Sep 2011 06:35:43 +0000</pubDate><guid>https://openmicrolab.com/%EC%9E%84%EB%B2%A0%EB%94%94%EB%93%9C%EB%B3%B4%EB%93%9C%EC%97%90%EC%84%9C-%ED%8A%B8%EC%9C%84%ED%84%B0%ED%95%98%EA%B8%B0-2-%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C/</guid><description>
&lt;p>이전에 올린 &lt;A title="[ http://liketheocean.tistory.com/150]로 이동합니다." href="http://liketheocean.tistory.com/150" target=_blank>&lt;A title="[ http://liketheocean.tistory.com/150]로 이동합니다." href="http://liketheocean.tistory.com/150" target=_blank>임베디드보드에서 트위터&lt;/A>&lt;A title="[ http://liketheocean.tistory.com/150]로 이동합니다." href="http://liketheocean.tistory.com/150" target=_blank>하기&lt;/A>의 2번째 버젼으로 아두이노를 이용해서 트위터하는 방법에 대한 분석자료입니다.&lt;br>
관련 자료: &lt;a href="http://www.arduino.cc/playground/Code/TwitterLibrary">http://www.arduino.cc/playground/Code/TwitterLibrary&lt;/a>&lt;br>
역시 proxy 사용해서 구현을 하고있는데 이전의 &lt;A title="[http://www.supertweet.net/]로 이동합니다." href="http://www.supertweet.net/" target=_blank>Supertweet.net&lt;/A> 보다는 간단한 것 같지만, 테스트를 해보니 단점은 같은 내용의 메시지를 연속해서 보내면 에러가 난다. 아마도 스팸성 트윗을 걸러내기 위한 조치 같네요.&lt;/p>
&lt;P style="MARGIN: 0px">
&lt;A title="[http://arduino-tweet.appspot.com/]로 이동합니다." href="http://arduino-tweet.appspot.com/" target=_blank>&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile10.uf.172B51414E72EB421A9E6C.PNG" class="aligncenter" width="624" height="139" alt="" filename="twitter_arduino.PNG" filemime="image/jpeg" />&lt;/A>
&lt;/P>먼저
&lt;p>&lt;a href="http://arduino-tweet.appspot.com/">http://arduino-tweet.appspot.com/&lt;/a> 에 접속을 해서 사용하는 트위터 아이디의 토큰을 받는다.&lt;br>
이 토큰은 아래 소스에서 사용이 된다.&lt;/p></description></item><item><title>Nanode – An Open Hardware Success Story</title><link>https://openmicrolab.com/nanode-an-open-hardware-success-story/</link><pubDate>Fri, 09 Sep 2011 01:40:06 +0000</pubDate><guid>https://openmicrolab.com/nanode-an-open-hardware-success-story/</guid><description>
&lt;p>&lt;A title="[http://sustburbia.blogspot.com/2011/08/nanode-open-hardware-success-story.html]로 이동합니다." href="http://sustburbia.blogspot.com/2011/08/nanode-open-hardware-success-story.html" target=_blank>From Ken Boak’s blog&lt;/A>&lt;/p>
&lt;embed type="application/x-shockwave-flash" src="http://a.blip.tv/api.swf#AYLPnkAC" style="display:none">
&lt;/embed></description></item><item><title>Pachube 인수되다…</title><link>https://openmicrolab.com/pachube-%EC%9D%B8%EC%88%98%EB%90%98%EB%8B%A4/</link><pubDate>Thu, 08 Sep 2011 05:21:29 +0000</pubDate><guid>https://openmicrolab.com/pachube-%EC%9D%B8%EC%88%98%EB%90%98%EB%8B%A4/</guid><description>
&lt;DIV>
지난번 유럽방문시 &lt;A title="[http://liketheocean.tistory.com/121]로 이동합니다." href="http://liketheocean.tistory.com/121" target=_blank>영국의 펍에서 &lt;/A>잠시 &lt;A title="[http://liketheocean.tistory.com/61]로 이동합니다." href="http://liketheocean.tistory.com/61" target=_blank>Pachube&lt;/A>(발음은 patch bay)의 CTO를 만났는데,
&lt;/DIV>
&lt;DIV>
올 7월에 이 회사가 &lt;A title="[https://secure.logmein.com/KR/]로 이동합니다." href="https://secure.logmein.com/KR/" target=_blank>LogmeIn&lt;/A>사(Nasdaq:LOGM)에 인수 됐습니다 ($15M). 날짜상으로 바로 저희가 만난 직후네요.
&lt;/DIV>
&lt;DIV>
&lt;A title="[http://blog.pachube.com/2011/07/pachube-just-got-some-rocket-fuel.html#more]로 이동합니다." href="http://blog.pachube.com/2011/07/pachube-just-got-some-rocket-fuel.html#more" target=_blank>Pachube의 블로그상에는 &lt;/A>이것을 &amp;#8220;&lt;STRONG>Pachube just got some rocket fuel!&amp;#8221; &lt;/STRONG>이라고 표현을 하고 있습니다.
&lt;/DIV>
&lt;DIV>
LogMeIn상의 공식 press release 자료: &lt;A href="https://investor.logmein.com/releasedetail.cfm?ReleaseID=592763">&lt;FONT color=#0066cc>https://investor.logmein.com/releasedetail.cfm?ReleaseID=592763&lt;/FONT>&lt;/A>
&lt;/DIV>
&lt;DIV>
&lt;/DIV>
&lt;DIV>
&lt;br /> Pachube(&lt;A href="https://pachube.com/">&lt;FONT color=#0066cc>pachube.com&lt;/FONT>&lt;/A>)는 IoT를 지향하며, 기기들의 real time data를 웹상에서 보여주는 서비스를 제공합니다.
&lt;/DIV>
&lt;DIV>
이를 지원하는 기기들도 상용제품에서 arduino까지 다양하며, 앱도 지원을 하고 있습니다.
&lt;/DIV>
&lt;DIV>
&lt;A href="http://community.pachube.com/hardware">&lt;FONT color=#0066cc>http://community.pachube.com/hardware&lt;/FONT>&lt;/A> &lt;/p></description></item><item><title>Arduino Education</title><link>https://openmicrolab.com/arduino-education/</link><pubDate>Thu, 08 Sep 2011 04:00:56 +0000</pubDate><guid>https://openmicrolab.com/arduino-education/</guid><description>
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile26.uf.1127934C4E68393F1E1E93.PNG" class="aligncenter" width="254" height="93" alt="" filename="Arduino_education.PNG" filemime="image/jpeg" />
아두이노가 Store, Labs에 이어 Education이라는 카테고리를 만들었습니다. &lt;http://scuola.arduino.cc/en>
교사를 위한 공간이지만 반드시 교사일 필요는 없고, 기존의 커뮤니티 처럼 모두가 참여할 수 있는 구조입니다.
아직 베타버젼이어서 현재 한 20 명정도가 참여하고 있는데, 활성화가 되면 이들의 커뮤니티 확장이 가속도를 내는 것 같습니다.
&lt;P style="MARGIN: 0px">
&lt;br /> 최근 Lesson중 하나인 아두이노 이더넷 관련 내용 한번 보시죠.&lt;br />
&lt;/P>
&lt;DIV style="TEXT-ALIGN: center">
&lt;SPAN style="WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; LETTER-SPACING: normal; FONT: 12px/16px 'Lucida grande', Tahoma, Verdana, Arial, Helvetica, 'Bitstream Vera Sans', sans-serif; WHITE-SPACE: normal; ORPHANS: 2; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px" class=Apple-style-span>&lt;br /> &lt;H1 style="LINE-HEIGHT: 1.3em; MARGIN-TOP: 0px; FONT-FAMILY: 'Lucida grande', 'Lucida Sans', Lucida, Verdana, sans-serif; MARGIN-BOTTOM: 0px; COLOR: rgb(0,151,156); FONT-SIZE: 1.5em; FONT-WEIGHT: bold" class=title>&lt;A title="[http://scuola.arduino.cc/en/content/getting-started-arduino-ethernet]로 이동합니다." href="http://scuola.arduino.cc/en/content/getting-started-arduino-ethernet" target=_blank>Getting Started With Arduino Ethernet&lt;/A>&lt;/H1>&lt;/SPAN>
&lt;/DIV>
&lt;P style="MARGIN: 0px">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile9.uf.135A27484E683D3B0BC9F8.jpg" class="aligncenter" width="519" height="270" alt="" filename="etherneteserial2usb.jpg" filemime="image/jpeg" />
&lt;/P>최신 보드인 Arduino Ethernet은 W5100이 메인 보드에 default로 들어가 있고, USB가 빠졌습니다. 대신 작은 USB to Serial 보드로 연결해서 툴과 연결을 합니다.
&lt;p>최근에 Arduino의 멤버인 Banzi가 Getting Started with Arduino의 2nd 버젼도 거의 완성이 됐다는 트윗도 있습니다.&lt;/p></description></item><item><title>만화로 배우는 아두이노</title><link>https://openmicrolab.com/%EB%A7%8C%ED%99%94%EB%A1%9C-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8/</link><pubDate>Thu, 08 Sep 2011 03:35:53 +0000</pubDate><guid>https://openmicrolab.com/%EB%A7%8C%ED%99%94%EB%A1%9C-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8/</guid><description>
&lt;p>아두이노의 영향력은 대단하다.&lt;br>
아두이노에 대한 소개가 만화로도 제작이 되었다.&lt;/p>
&lt;P style="MARGIN: 0px">
&lt;A title="[http://www.jodyculkin.com/comics-2/introduction-to-arduino]로 이동합니다." href="http://www.jodyculkin.com/comics-2/introduction-to-arduino" target=_blank>&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile7.uf.115CCF4B4E683796292E2A.jpg" class="aligncenter" width="300" height="158" alt="" filename="cover-panel-300x158.jpg" filemime="image/jpeg" />&lt;/A>
&lt;/P>PDF 버젼도 있다.
&lt;P style="MARGIN: 0px">
&lt;a href="https://openmicrolab.com/images/1/cfile22.uf.177FB24F4E6837D41C0354.pdf" class="aligncenter" filename="arduino-comic-latest.pdf" filemime="application/pdf" />cfile22.uf.177FB24F4E6837D41C0354.pdf&lt;/a>
&lt;/P></description></item><item><title>SDCC putchar 버그 수정</title><link>https://openmicrolab.com/sdcc-putchar-%EB%B2%84%EA%B7%B8-%EC%88%98%EC%A0%95/</link><pubDate>Wed, 01 Jun 2011 08:13:29 +0000</pubDate><guid>https://openmicrolab.com/sdcc-putchar-%EB%B2%84%EA%B7%B8-%EC%88%98%EC%A0%95/</guid><description>
&lt;p>지난번 포스팅때 &lt;A title="[http://liketheocean.tistory.com/83]로 이동합니다." href="http://liketheocean.tistory.com/83" target=_blank>8051 무료 컴파일러인 SDCC&lt;/A>를 소개했었고, 이를 이용해서 &lt;A title="[http://liketheocean.tistory.com/84]로 이동합니다." href="http://liketheocean.tistory.com/84" target=_blank>W7100 TCP loopback 코드까지 &lt;/A>만들어 봤었다.&lt;br>
이미 그때도 printf가 잘 안되어서 이상하다고 했었는데, 이번에 telnet 코드를 포팅하면서 문제를 해결했다.&lt;br>
문제는 SDCC 컴파일러가 제대로 C 코드를 ASM으로 변환을 해주지 못하는게 원인… 역시 무료 컴파일러라서 그런가???&lt;/p>
&lt;DIV style="BORDER-BOTTOM: #c1c1c1 1px dashed; BORDER-LEFT: #c1c1c1 1px dashed; PADDING-BOTTOM: 10px; BACKGROUND-COLOR: #eeeeee; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; BORDER-TOP: #c1c1c1 1px dashed; BORDER-RIGHT: #c1c1c1 1px dashed; PADDING-TOP: 10px" class=txc-textbox>void putchar (char c)&amp;nbsp;
{
&amp;nbsp; SBUF = c;
&amp;nbsp; while(!TI);
&amp;nbsp; TI = 0;
}
&lt;/DIV>
위&amp;nbsp;putchar 함수가 어셈으로 변환된 코드를 보니 TI = 0 을 CLR TI 로 변환을 하지 않네요.
그래서 다음과 같이 inline assembler를 사용해서 수정을 하니 잘 동작을 합니다.
&lt;DIV style="BORDER-BOTTOM: #c1c1c1 1px dashed; BORDER-LEFT: #c1c1c1 1px dashed; PADDING-BOTTOM: 10px; BACKGROUND-COLOR: #eeeeee; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; BORDER-TOP: #c1c1c1 1px dashed; BORDER-RIGHT: #c1c1c1 1px dashed; PADDING-TOP: 10px" class=txc-textbox>void putchar (char c)&amp;nbsp;
{
&amp;nbsp;SBUF = c;
&amp;nbsp;while(!TI);
&lt;FONT color=#e31600>__asm&amp;nbsp;
&amp;nbsp;clr TI
__endasm;
&lt;/FONT>}
&lt;/DIV>
W7100A에 telnet server code를 SDCC로 포팅한 코드로 첨부.
&lt;P style="MARGIN: 0px">
&lt;a href="https://openmicrolab.com/images/1/cfile29.uf.181ED1344DE5F44423398E.zip" class="aligncenter" filename="telnet_sdcc.zip" filemime="application/zip" />cfile29.uf.181ED1344DE5F44423398E.zip&lt;/a>
&lt;/P></description></item><item><title>마이크로칩 chipKIT for the Arduino™ Community</title><link>https://openmicrolab.com/%EB%A7%88%EC%9D%B4%ED%81%AC%EB%A1%9C%EC%B9%A9-chipkit-for-the-arduino-community/</link><pubDate>Tue, 24 May 2011 04:56:22 +0000</pubDate><guid>https://openmicrolab.com/%EB%A7%88%EC%9D%B4%ED%81%AC%EB%A1%9C%EC%B9%A9-chipkit-for-the-arduino-community/</guid><description>
&lt;p>지난 글(&lt;A title="[http://liketheocean.tistory.com/111]로 이동합니다." href="http://liketheocean.tistory.com/111" target=_blank>이젠 오픈소스 하드웨어가 대세&lt;/A>)에서 마이크로칩에서 Arduino 호환 보드인 chipKIT를 릴리즈 했다고 했는데, 유트브에 동영상이 올라왔네요.&lt;/p>
&lt;DIV style="TEXT-ALIGN: center">
&lt;br />
&lt;/DIV>
&lt;DIV>
아래 링크는 공식 릴리즈 주소&lt;br /> &lt;A href="http://www.microchip.com/pagehandler/en-us/chipKIT-Development-Platform.html">http://www.microchip.com/pagehandler/en-us/chipKIT-Development-Platform.html&lt;/A>&lt;/p>
&lt;p>
&lt;/DIV>
&lt;/p></description></item><item><title>이젠 오픈소스 하드웨어가 대세</title><link>https://openmicrolab.com/%EC%9D%B4%EC%A0%A0-%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4%EA%B0%80-%EB%8C%80%EC%84%B8/</link><pubDate>Fri, 20 May 2011 10:58:23 +0000</pubDate><guid>https://openmicrolab.com/%EC%9D%B4%EC%A0%A0-%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4%EA%B0%80-%EB%8C%80%EC%84%B8/</guid><description>
&lt;p>지난 5월 10~11일 구글 I/O 2011 행사에서 구글이 아두이노를 AOA(Android Open Accessory)로 지정한 것은 큰 뉴스거리중의 하나였다. 당연히 이를 통해 아두이노팀이 가장 큰 이득을 보게 될 것이고, 칩 업체로는 아두이노 보드에 MCU로 사용되는 AVR 덕분에 Atmel이 가장 큰 덕을 보게 될 것이다.&lt;/p>
&lt;p>이제는 칩 벤더들도 이 오픈소스 하드웨어를 간과하지 않고 있다.&lt;/p>
&lt;p>일례로 NXP의 경우 mbed, TI의 경우 Beagleboard를 지원하고 있다.&lt;/p>
&lt;p>하지만 최근 마이크로칩이 아두이노 보드와 호환되는 즉 클론 보드를 공개했다.&lt;/p></description></item><item><title>OSHW Logo 선정</title><link>https://openmicrolab.com/oshw-logo-%EC%84%A0%EC%A0%95/</link><pubDate>Wed, 20 Apr 2011 05:12:35 +0000</pubDate><guid>https://openmicrolab.com/oshw-logo-%EC%84%A0%EC%A0%95/</guid><description>
&lt;p>대략 9000명이 투표를 해서 OSHW Logo가 선정이 되었네요.&lt;br>
투표중 몇개의 IP가 자동으로 많은 투표를 했고 이걸 무효 처리했다는 에피소드도 있었답니다.&lt;/p>
&lt;P style="MARGIN: 0px">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile22.uf.11691B454DAE67DE30935D.png" class="aligncenter" width="300" height="300" alt="" filename="OpenHardwareLogo.png" filemime="image/jpeg" />
&lt;/P>PCB에 디자인을 위해 Eagle PCB 및 EDA툴용 자료도 있습니다.
&lt;p>&lt;a href="http://www.openhardwaresummit.org/2011/04/08/eagle-files-for-the-open-hardware-logo/">http://www.openhardwaresummit.org/2011/04/08/eagle-files-for-the-open-hardware-logo/&lt;/a>&lt;/p>
&lt;p>Jason Kruse라는 분이 스티커로도 제작을 해서 배송비만 내면 무료로 보내준다고도 합니다.&lt;br>
&lt;a href="http://www.openhardwaresummit.org/2011/04/13/open-hardware-decals/">http://www.openhardwaresummit.org/2011/04/13/open-hardware-decals/&lt;/a>&lt;br>
미국은 $1, 해외는 $2 이네요. Paypal로 구매했는데 살짝 기대되네요. ^^&lt;/p></description></item><item><title>Spinneret Web Server 보드 사용기</title><link>https://openmicrolab.com/spinneret-web-server-%EB%B3%B4%EB%93%9C-%EC%82%AC%EC%9A%A9%EA%B8%B0/</link><pubDate>Tue, 19 Apr 2011 11:25:11 +0000</pubDate><guid>https://openmicrolab.com/spinneret-web-server-%EB%B3%B4%EB%93%9C-%EC%82%AC%EC%9A%A9%EA%B8%B0/</guid><description>
&lt;p>Spinneret의 뜻은 (동물) (거미·누에 등의) 방적 돌기 ((실이 나오는 구멍))… 보드에 뒷면에 거미와 거미줄 그림이 있다….&lt;/p>
&lt;P style="MARGIN: 0px">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile21.uf.155924474DAD7100060ABA.jpg" class="aligncenter" width="426" height="158" alt="" filename="2011-04-19 20.22.00.jpg" filemime="image/jpeg" />
&lt;/P>
&lt;p>이 보드는 Parallax(&lt;a href="http://www.parallax.com/">www.parallax.com&lt;/a>)사의 Propeller칩과 Wiznet(&lt;a href="http://www.wiznet.co.kr/">www.wiznet.co.kr&lt;/a>)의 W5100이 내장된 웹서버 보드이다.&lt;br>
웹서버 어플리케이션을 위해 mSD카드도 장착이 되어 있다.&lt;br>
Open Source Hardware 플랫폼을 지향하기 때문에 모든 자료들은 웹상에 오픈이 되어 있다.&lt;br>
하지만 Propellar칩은 코아가 8개가 들어간 병렬칩으로 좀 생소하기 때문에 익숙해 지기까지는 좀 시간이 걸릴 것 같다.&lt;br>
각 코아는 Cog라고 불린다. 아래 그림 참고..&lt;/p></description></item><item><title>ODROID</title><link>https://openmicrolab.com/odroid/</link><pubDate>Tue, 19 Apr 2011 09:04:38 +0000</pubDate><guid>https://openmicrolab.com/odroid/</guid><description>
&lt;P style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; MARGIN-RIGHT: 0px">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile26.uf.1815064F4DAD4F8817B696.jpg" class="alignleft" width="399" height="380" alt="" filename="main_1102.jpg" filemime="image/jpeg" />
&lt;/P>
&lt;p>**&lt;SPAN style="FONT-SIZE: 10pt">ODROID-A Only for developers&lt;/SPAN>&lt;br>
** SAMSUNG Exynos4210 Dual-core ARM Cortex-A9&lt;br>
Mali-400 MP Core&lt;br>
1GB LP DDR2 RAM 800Mega data rate&lt;br>
10.1 inch 1366 x 768 TFT with capacitive multi-touch&lt;br>
Android 2.3 Gingerbread&lt;br>
Dual Camera&lt;br>
HSPA+ (Data speed up to 21 Mbps D/L, 5.7 Mbps U/L)&lt;br>
9-axis sensor&lt;br>
Full source code and schematics are included&lt;br>
The shipment will be in 4weeks after your order.&lt;br>
Price : US$749.00&lt;br>
Korean Price : 800,000원(부가세 별도)&lt;/p></description></item><item><title>Open Source Hardware Logo</title><link>https://openmicrolab.com/open-source-hardware-logo/</link><pubDate>Mon, 21 Mar 2011 11:48:47 +0000</pubDate><guid>https://openmicrolab.com/open-source-hardware-logo/</guid><description>
&lt;p>Open Source Software에서는 다음과 같은 로고를 사용을 합니다.&lt;/p>
&lt;P style="MARGIN: 0px">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile25.uf.1844AA504D873A401B5B45.png" class="aligncenter" width="168" height="140" alt="" filename="opensource-logo.png" filemime="image/jpeg" />
&lt;/P>
&lt;p>&lt;strong>OSHW&lt;/strong>에서도 공식 로고를 만들기 위해 공모를 했습니다.&lt;br>
총 129개가 접수가 됐네요.&lt;br>
로고로 선정되기 위한 3가지 기준은&lt;br>
  -. PCB에 인쇄가 쉽고 보기 쉬워야 하고,&lt;br>
  -. 회로도에 인쇄가 쉽고 보기 쉬워야 하고,&lt;br>
  -. 개방성을 잘 나타내야하네요.&lt;/p>
&lt;P style="MARGIN: 0px">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile3.uf.153BC74D4D8739FE389333.png" class="aligncenter" width="100" height="102" alt="" filename="oh-1-100.png" filemime="image/jpeg" />
&lt;/P>
&lt;p>이건 Open Hardware Summit에서 제출한 로고이고…&lt;br>
나머지는 아래 링크에서 확인 가능 합니다.&lt;br>
&lt;a href="http://www.openhardwaresummit.org/oshw-logo-v1-0/">http://www.openhardwaresummit.org/oshw-logo-v1-0/&lt;/a>&lt;/p>
&lt;p>129개의 응모작중에서 10개의 작품이 투표가 진행이 되고 있습니다.&lt;br>
어떤 로고가 좋은신 가요? &lt;a href="http://www.openhardwaresummit.org/oshw-logo-selection/">http://www.openhardwaresummit.org/oshw-logo-selection/&lt;/a>&lt;/p></description></item><item><title>아두이노 팀 (Arduino Team) 뒷조사</title><link>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8-%ED%8C%80-arduino-team-%EB%92%B7%EC%A1%B0%EC%82%AC/</link><pubDate>Mon, 21 Mar 2011 10:35:50 +0000</pubDate><guid>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8-%ED%8C%80-arduino-team-%EB%92%B7%EC%A1%B0%EC%82%AC/</guid><description>
&lt;p>명함을 정리하다가 보니 작년 여름에 이태리에서 미팅한 &lt;A title="[http://www.smartprj.com/catalog/index.php]로 이동합니다." href="http://www.smartprj.com/catalog/index.php" target=_blank>Smart Projects&lt;/A>의 사장이 오픈소스 하드웨어 플랫폼인 아두이노를 개발한 팀의 한명임을 뒤늦게 알았네요.&lt;br>
아두이노 홈페이지에서 다른 멤버들의 이름을 기점으로 뒷조사를 해 보니 재미있네요.&lt;br>
인터넷 세상에서 그 사람이 어디 출신인지 학력은 어떤지 블로그, 이메일, 플리커등의 주소 정보가 고스란히 알 수 있는 세상…&lt;/p>
&lt;P style="MARGIN: 0px">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile9.uf.127178344D87284631DC03.jpg" class="aligncenter" width="454" height="304" alt="" filename="Arduino Team.jpg" filemime="image/jpeg" />
&lt;/P>
&lt;p>사진 출처: &lt;A title="[http://www.flickr.com/photos/dcuartielles/2363657276/in/photostream/]로 이동합니다." href="http://www.flickr.com/photos/dcuartielles/2363657276/in/photostream/" target=_blank>플리커&lt;/A> &amp;lt;= 계정을 보니 David의 플리커 사이트네요.&lt;br>
암튼 위 아두이노 팀 사진에서 제가 만났던 분은 아랫줄 맨 왼쪽의 Gianluca라는 사람입니다.&lt;/p></description></item><item><title>CooCox</title><link>https://openmicrolab.com/coocox/</link><pubDate>Fri, 18 Feb 2011 07:24:07 +0000</pubDate><guid>https://openmicrolab.com/coocox/</guid><description>
&lt;p>&lt;A title="[http://liketheocean.tistory.com/77]로 이동합니다." href="http://liketheocean.tistory.com/77" target=_blank>Nuvoton의 Cortex M0 칩&lt;/A>관련 포스팅 중에 잠시 CooCox를 언급한 적이 있습니다.&lt;/p>
&lt;p>CooCox는 무료 ARM Cortex M3 and Cortex M0 Development Tools 이며, ARM  gcc를 사용을 합니다. 홈페이지를 확인해 보니 중국 대학에서 만들었네요. &lt;br>
ARM Connected Community Member,  NXP Partner,  Nuvoton Tools Partner, Energy Micro 3rd Party 이기도 합니다.&lt;/p>
&lt;p>실제로 IDE를 받아서 설치를 하고 간단한 코드를 만들어 동작을 시켜보니 잘 돌아가네요.&lt;br>
처음 프로젝트를 만들때 디바이스를 선택하고 Repository에서 필요한 라이브러리를 선택을 할 수 있도록 되어 있어서 사용하기가 쉽네요.&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile9.uf.127780344D5E16A72EB3E6.jpg" class="aligncenter" width="680" height="541" alt="" filename="cfile9.uf.127780344D5E16A72EB3E6.jpg" filemime="" />다운로드를 개별적으로도 받을 수 도 있고 CooCox CoCenter라는 프로그램을 받아서 다운로드 및 설치가 가능합니다.&lt;br>
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile25.uf.17191F344D5E1C3807519E.jpg" class="aligncenter" width="651" height="296" alt="" filename="cfile25.uf.17191F344D5E1C3807519E.jpg" filemime="" />&lt;/p></description></item><item><title>무료 8051 컴파일러 – SDCC</title><link>https://openmicrolab.com/%EB%AC%B4%EB%A3%8C-8051-%EC%BB%B4%ED%8C%8C%EC%9D%BC%EB%9F%AC-sdcc/</link><pubDate>Tue, 08 Feb 2011 02:14:47 +0000</pubDate><guid>https://openmicrolab.com/%EB%AC%B4%EB%A3%8C-8051-%EC%BB%B4%ED%8C%8C%EC%9D%BC%EB%9F%AC-sdcc/</guid><description>
&lt;p>SDCC는 Small Device C Compiler의 약자입니다. GPL 라이센스를 따르는 free open source software입니다.&lt;br>
그리고 8051뿐만 아니라 motolora 60HC08 시리즈와 Microchip PIC16, PIC18시리즈도 지원을 하며, Linux, Windows, MAC OS를 지원하네요. 관련자료는 =&amp;gt; &lt;a href="http://sdcc.sourceforge.net/">&lt;A title="[http://sdcc.sourceforge.net/]로 이동합니다." href="http://sdcc.sourceforge.net/" target=_blank>http://sdcc.sourceforge.net/&lt;/a>&lt;/A> 에서 찾을 수 있습니다.&lt;/p>
&lt;p>&lt;a href="http://sourceforge.net/projects/sdcc/files/">http://sourceforge.net/projects/sdcc/files/&lt;/a> 에서 사용하는 OS 맞는 버젼을 다운받으시고 인스톨하시면 됩니다.&lt;br>
압축이 풀린 폴더에는 다음과 같은 내용의 파일들이 설치 됩니다.&lt;br>
**&lt;br>
In &lt;installdir>/bin:&lt;br>
** sdcc – The compiler.&lt;br>
sdcpp – The C preprocessor.&lt;br>
sdas8051 – The assembler for 8051 type processors.&lt;br>
sdasz80, sdasgb – The Z80 and GameBoy Z80 assemblers.&lt;br>
sdas6808 – The 6808 assembler.&lt;br>
sdld -The linker for 8051 type processors.&lt;br>
sdldz80, sdldgb – The Z80 and GameBoy Z80 linkers.&lt;br>
sdld6808 – The 6808 linker.&lt;br>
s51 – The ucSim 8051 simulator.&lt;br>
sz80 – The ucSim Z80 simulator.&lt;br>
shc08 – The ucSim 6808 simulator.&lt;br>
sdcdb – The source debugger.&lt;br>
sdcclib – A tool for creating sdcc libraries&lt;br>
asranlib – A tool for indexing sdcc ar libraries&lt;br>
packihx – A tool to pack (compress) Intel hex files.&lt;br>
makebin – A tool to convert Intel Hex file to a binary and GameBoy binary image file format.&lt;br>
**In &lt;installdir>/share/sdcc/include&lt;br>
** the include files&lt;br>
**In &lt;installdir>/share/sdcc/non-free/include&lt;br>
** the non-free include files&lt;br>
&lt;strong>In &lt;installdir>/share/sdcc/lib&lt;/strong>&lt;br>
the src and target subdirectories with the precompiled relocatables.&lt;br>
**In &lt;installdir>/share/sdcc/non-free/lib&lt;br>
** the src and target subdirectories with the non-free precompiled relocatables.&lt;br>
**In &lt;installdir>/share/sdcc/doc&lt;br>
** the documentation&lt;/p></description></item><item><title>mbed 개발자 구인 스펙</title><link>https://openmicrolab.com/mbed-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EA%B5%AC%EC%9D%B8-%EC%8A%A4%ED%8E%99/</link><pubDate>Fri, 28 Jan 2011 01:38:29 +0000</pubDate><guid>https://openmicrolab.com/mbed-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EA%B5%AC%EC%9D%B8-%EC%8A%A4%ED%8E%99/</guid><description>
&lt;DIV style="LINE-HEIGHT: 1.2">
&lt;SPAN style="WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; BORDER-COLLAPSE: separate; FONT: medium Gulim; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px" class=Apple-style-span>&lt;SPAN style="BORDER-COLLAPSE: collapse; FONT-FAMILY: Arial, Verdana, Tahoma, sans-serif; FONT-SIZE: 14px" class=Apple-style-span>&lt;SPAN style="TEXT-ALIGN: justify" class=pc-rtg-body>&lt;FONT size=2>&lt;B>&lt;SPAN style="WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; BORDER-COLLAPSE: separate; FONT: medium Gulim; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px" class=Apple-style-span>&lt;SPAN style="FONT-FAMILY: 'Arial, sans-serif', sans-serif; FONT-SIZE: 13px" class=Apple-style-span>&lt;SPAN style="WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; BORDER-COLLAPSE: separate; FONT: medium Gulim; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px" class=Apple-style-span>&lt;SPAN style="FONT-FAMILY: 'Arial, sans-serif', sans-serif; FONT-SIZE: 13px" class=Apple-style-span>&lt;br />
&lt;H2 style="FONT-FAMILY: 'Trebuchet MS', sans-serif; FONT-WEIGHT: 700">
&lt;SPAN style="FONT-SIZE: 10pt">&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-FAMILY: Dotum">&lt;SPAN style="FONT-FAMILY: Gulim">﻿mbed 개발자 스펙인데, 세계적인 회사에서 어떤 스펙을 요구하는지 이해하고 국내 개발자들도 실력을 갖추면 좋지 않을 까 생각이 드네요.&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;br /> &lt;FONT size=3>&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-FAMILY: Dotum">&lt;SPAN style="FONT-FAMILY: Gulim">구체적인 내용은 링크 참고 ==> &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/FONT>&lt;A href="http://mbed.org/handbook/Jobs">&lt;A title="[http://mbed.org/handbook/Jobs]로 이동합니다." href="http://mbed.org/handbook/Jobs" target=_blank>&lt;SPAN style="FONT-SIZE: 12pt">&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-FAMILY: Dotum">&lt;SPAN style="FONT-FAMILY: Gulim">http://mbed.org/handbook/Jobs&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/A>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/B>&lt;/FONT>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;SPAN style="WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; BORDER-COLLAPSE: separate; FONT: medium Gulim; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px" class=Apple-style-span>&lt;SPAN style="BORDER-COLLAPSE: collapse; FONT-FAMILY: Arial, Verdana, Tahoma, sans-serif; FONT-SIZE: 14px" class=Apple-style-span>&lt;SPAN style="TEXT-ALIGN: justify" class=pc-rtg-body>&lt;FONT size=2>&lt;B>&lt;SPAN style="WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; BORDER-COLLAPSE: separate; FONT: medium Gulim; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px" class=Apple-style-span>&lt;SPAN style="FONT-FAMILY: 'Arial, sans-serif', sans-serif; FONT-SIZE: 13px" class=Apple-style-span>&lt;SPAN style="WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; BORDER-COLLAPSE: separate; FONT: medium Gulim; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px" class=Apple-style-span>&lt;SPAN style="FONT-FAMILY: 'Arial, sans-serif', sans-serif; FONT-SIZE: 13px" class=Apple-style-span>&lt;br /> &amp;nbsp;&lt;/H2>&lt;/DIV>&lt;br />
&lt;pre>&lt;code>&amp;lt;DIV&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;H2 style=&amp;quot;FONT-FAMILY: 'Trebuchet MS', sans-serif; FONT-WEIGHT: 700&amp;quot;&amp;gt;
Ninja Microcontroller Embedded Software Engineer
&amp;lt;/H2&amp;gt;&amp;lt;/SPAN&amp;gt;&amp;lt;/SPAN&amp;gt;&amp;lt;/SPAN&amp;gt;&amp;lt;/SPAN&amp;gt;&amp;lt;/B&amp;gt;&amp;lt;/FONT&amp;gt;&amp;lt;/SPAN&amp;gt;&amp;lt;/SPAN&amp;gt;&amp;lt;/SPAN&amp;gt;&amp;lt;SPAN style=&amp;quot;WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; BORDER-COLLAPSE: separate; FONT: medium Gulim; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px&amp;quot; class=Apple-style-span&amp;gt;&amp;lt;SPAN style=&amp;quot;FONT-FAMILY: 'Arial, sans-serif', sans-serif; FONT-SIZE: 13px&amp;quot; class=Apple-style-span&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;H3 style=&amp;quot;FONT-FAMILY: 'Trebuchet MS', sans-serif; FONT-WEIGHT: 700&amp;quot;&amp;gt;
Job Requirements
&amp;lt;/H3&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;P&amp;gt;
Essential Skills &amp;amp; Experience
&amp;lt;/P&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;UL&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;LI&amp;gt;
Excellent embedded programming skills in C/C++
&amp;lt;/LI&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;LI&amp;gt;
Experience using MCUs
&amp;lt;/LI&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;LI&amp;gt;
Experience porting and working with stacks (OS/RTOS, TCP/IP, USB, &amp;amp;#8230;)
&amp;lt;/LI&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;LI&amp;gt;
Experience with compilers, build tools and toolchains, Linux
&amp;lt;/LI&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;LI&amp;gt;
Experience with version control (svn, git, github)
&amp;lt;/LI&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;LI&amp;gt;
Good university degree in a relevant subject
&amp;lt;/LI&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;LI&amp;gt;
A desire to be involved in mbed and help deliver its goals
&amp;lt;/LI&amp;gt;
&amp;lt;/UL&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;P&amp;gt;
Desirable Skills &amp;amp; Experience
&amp;lt;/P&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;UL&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;LI&amp;gt;
Experience developing substantial embedded applications
&amp;lt;/LI&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;LI&amp;gt;
Good understanding of electronics, circuit design and fault finding
&amp;lt;/LI&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;LI&amp;gt;
Experience with Assembly, Python, Other languages
&amp;lt;/LI&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;LI&amp;gt;
Experience working with open source projects
&amp;lt;/LI&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;LI&amp;gt;
Interesting portfolio of projects
&amp;lt;/LI&amp;gt;
&amp;lt;/UL&amp;gt;&amp;lt;/SPAN&amp;gt;&amp;lt;/SPAN&amp;gt;
&amp;lt;br /&amp;gt; &amp;lt;SPAN style=&amp;quot;WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; BORDER-COLLAPSE: separate; FONT: medium Gulim; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px&amp;quot; class=Apple-style-span&amp;gt;&amp;lt;SPAN style=&amp;quot;FONT-FAMILY: 'Arial, sans-serif', sans-serif; FONT-SIZE: 13px&amp;quot; class=Apple-style-span&amp;gt;&amp;lt;br /&amp;gt;
&amp;lt;H2 style=&amp;quot;FONT-FAMILY: 'Trebuchet MS', sans-serif; FONT-WEIGHT: 700&amp;quot;&amp;gt;
Embedded Software and Electronics Industrial Placements
&amp;lt;/H2&amp;gt;&amp;lt;/SPAN&amp;gt;&amp;lt;/SPAN&amp;gt;&amp;lt;SPAN style=&amp;quot;WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; BORDER-COLLAPSE: separate; FONT: medium Gulim; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px&amp;quot; class=Apple-style-span&amp;gt;&amp;lt;SPAN style=&amp;quot;FONT-FAMILY: 'Arial, sans-serif', sans-serif; FONT-SIZE: 13px&amp;quot; class=Apple-style-span&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;H3 style=&amp;quot;FONT-FAMILY: 'Trebuchet MS', sans-serif; FONT-WEIGHT: 700&amp;quot;&amp;gt;
Job Requirements
&amp;lt;/H3&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;P&amp;gt;
You should have completed at least two years at a university studying a course with a significant electronics or software engineering element to it.
&amp;lt;/P&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;P&amp;gt;
Desirable Skills &amp;amp; Experience
&amp;lt;/P&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;UL&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;LI&amp;gt;
Embedded programming skills in C/C++
&amp;lt;/LI&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;LI&amp;gt;
Experience developing embedded applications for microcontrollers
&amp;lt;/LI&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;LI&amp;gt;
Hardware and PCB design, circuit level fault finding and debug
&amp;lt;/LI&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;LI&amp;gt;
An understanding of electronic circuit design
&amp;lt;/LI&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;LI&amp;gt;
A keen general interest in software engineering, computer science and embedded electronics
&amp;lt;/LI&amp;gt;
&amp;lt;/UL&amp;gt;&amp;lt;/SPAN&amp;gt;&amp;lt;/SPAN&amp;gt;
&amp;lt;SPAN style=&amp;quot;FONT-SIZE: 12pt&amp;quot;&amp;gt;&amp;lt;br /&amp;gt; &amp;lt;/SPAN&amp;gt;&amp;lt;/A&amp;gt;
&amp;lt;/DIV&amp;gt;&amp;lt;/p&amp;gt;
&lt;/code>&lt;/pre></description></item><item><title>센서 데이터를 위한 데이터베이스: Pachube</title><link>https://openmicrolab.com/%EC%84%BC%EC%84%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EC%9C%84%ED%95%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-pachube/</link><pubDate>Fri, 10 Dec 2010 10:43:03 +0000</pubDate><guid>https://openmicrolab.com/%EC%84%BC%EC%84%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EC%9C%84%ED%95%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-pachube/</guid><description>
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile24.uf.1322152E4D0203A40EA111.jpg" class="aligncenter" width="680" height="484" alt="" filename="pachube.jpg" filemime="image/jpeg" />
&lt;FONT color=#000000>**&lt;SPAN style="FONT-SIZE: 10pt">&lt;SPAN style="FONT-FAMILY: Batang">&lt;SPAN style="FONT-FAMILY: Gulim">Pachube&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>**&lt;SPAN style="FONT-SIZE: 10pt">&lt;SPAN style="FONT-FAMILY: Batang">&lt;SPAN style="FONT-FAMILY: Gulim">, 발음은 &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>**&lt;SPAN style="FONT-SIZE: 10pt">&lt;SPAN style="FONT-FAMILY: Batang">&lt;SPAN style="FONT-FAMILY: Gulim">&amp;#8220;PATCH-bay&amp;#8221;&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>**&lt;SPAN style="FONT-SIZE: 10pt">&lt;SPAN style="FONT-FAMILY: Batang">&lt;SPAN style="FONT-FAMILY: Gulim"> 로 한다고 합니다.&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>
**&lt;SPAN style="FONT-SIZE: 10pt">&lt;SPAN style="FONT-FAMILY: Batang">&lt;SPAN style="FONT-FAMILY: Gulim">Pachube&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>**&lt;SPAN style="FONT-SIZE: 10pt">&lt;SPAN style="FONT-FAMILY: Batang">&lt;SPAN style="FONT-FAMILY: Gulim">는 온라인 센서데이터를&amp;nbsp;웹에 보여주기 위한 온라인 데이터베이스 서비스를 해줍니다.&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>
&lt;SPAN style="FONT-SIZE: 10pt">&lt;SPAN style="FONT-FAMILY: Batang">&lt;SPAN style="FONT-FAMILY: Gulim">즉 전 세계에 있는 다양한 센서들의 정보를 display하고 공유하기 위한 웹 서비스입니다.&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>
&lt;p>&lt;SPAN style="FONT-SIZE: 10pt">&lt;SPAN style="FONT-FAMILY: Batang">&lt;SPAN style="FONT-FAMILY: Gulim">이 서비스가 제공하는 기능은 다음과 같습니다.&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;br>
&lt;/FONT>&lt;strong>&lt;FONT color=#000000>&lt;SPAN style="FONT-SIZE: 10pt">&lt;SPAN style="FONT-SIZE: 10pt">&lt;SPAN style="FONT-FAMILY: Batang">&lt;SPAN style="FONT-FAMILY: Gulim">  &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;br /> &lt;SPAN style="FONT-SIZE: 10pt">&lt;SPAN style="FONT-FAMILY: Batang">&lt;SPAN style="FONT-FAMILY: Gulim">  -. Manage realtime sensor &amp;amp; environment data&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;br /> &lt;/SPAN>&lt;SPAN style="FONT-SIZE: 10pt">&lt;SPAN style="FONT-SIZE: 10pt">&lt;SPAN style="FONT-FAMILY: Batang">&lt;SPAN style="FONT-FAMILY: Gulim">  -. Graph, monitor &amp;amp; control remote environments&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;br>
&lt;SPAN style="FONT-SIZE: 10pt">&lt;SPAN style="FONT-SIZE: 10pt">&lt;SPAN style="FONT-FAMILY: Batang">&lt;SPAN style="FONT-FAMILY: Gulim">  -. Build mobile &amp;amp; web apps that create value&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;br>
&lt;SPAN style="FONT-SIZE: 10pt">&lt;SPAN style="FONT-SIZE: 10pt">&lt;SPAN style="FONT-FAMILY: Batang">&lt;SPAN style="FONT-FAMILY: Gulim">  -. Share data &amp;amp; create communitie&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/FONT>&lt;/strong>&lt;/p></description></item><item><title>Top 40 Arduino 프로젝트</title><link>https://openmicrolab.com/top-40-arduino-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8/</link><pubDate>Thu, 04 Nov 2010 11:06:33 +0000</pubDate><guid>https://openmicrolab.com/top-40-arduino-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8/</guid><description>
&lt;p>&lt;SPAN style="WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; BORDER-COLLAPSE: separate; FONT: medium Gulim; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px" class=Apple-style-span>&lt;SPAN style="TEXT-ALIGN: left; FONT-FAMILY: Arial, Helvetica, sans-serif" class=Apple-style-span>&lt;/p>
&lt;P style="PADDING-BOTTOM: 0px; BACKGROUND-COLOR: rgb(255,255,255); MARGIN: 12px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px; background-origin: initial; background-clip: initial">
출처: &lt;A href="http://hacknmod.com/hack/top-40-arduino-projects-of-the-web/">http://hacknmod.com/hack/top-40-arduino-projects-of-the-web/&lt;/A>
&lt;/p>
&lt;OL style="PADDING-BOTTOM: 0px; BACKGROUND-COLOR: rgb(255,255,255); LIST-STYLE-TYPE: decimal; MARGIN: 12px 0px 12px 20px; PADDING-LEFT: 25px; PADDING-RIGHT: 0px; PADDING-TOP: 0px; background-origin: initial; background-clip: initial">
&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=40>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.instructables.com/id/Make-a-wall-avoiding-Robot!/" target=_blank>Make a Simple Wall Avoiding Robot&lt;/A>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.instructables.com/id/How-To-Smell-Pollutants/?ALLSTEPS" target=_blank>&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=39>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.atomicvpp.com/wpblog/2007/11/25/led-cube-project/">Basic LED Cube&lt;/A>&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>–&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.hacknmod.com/hack/tutorial-how-to-make-led-cubes/" target=_blank>Learn to Make LED Cubes&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=38>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.instructables.com/id/How-To-Smell-Pollutants/?ALLSTEPS" target=_blank>How To Smell Pollutants&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=37>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.damonkohler.com/2008/11/xbee-znet-25-wireless-accelerometer.html" target=_blank>XBee Wireless Accelerometer&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=36>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.instructables.com/id/Breathalyzer-Microphone/?ALLSTEPS" target=_blank>Breathalyzer Microphone&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=35>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.hacknmod.com/hack/control-servo-motors-with-the-wii-mote-joystick/" target=_blank>Control Servo Motors with the Wii Mote Joystick&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=34>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.instructables.com/id/Lo_fi_Arduino_Guitar_Pedal/?ALLSTEPS" target=_blank>Lo-fi Arduino Guitar Pedal&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=33>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.cibomahto.com/2008/02/thing-a-day-day-9-servo-as-input-device/" target=_blank>Positional Memory with a Servo&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=32>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.critterandguitari.com/home/store/arduino-piano.php" target=_blank>Miniature Pocket Piano&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=31>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.hacknmod.com/hack/dirt-simple-pov-led-display/" target=_blank>Dirt Simple POV LED Display&lt;/A>&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>see also&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://translate.google.com/translate?hl=en&amp;sl=es&amp;u=http://www.bricogeek.com/index/cat/7/nid/913/&amp;sa=X&amp;oi=translate&amp;resnum=3&amp;ct=result&amp;prev=/search%3Fq%3Dbricogeek%2Bpov%26hl%3Den%26sa%3DG" target=_blank>Wireless POV&lt;/A>&lt;/LI>
&lt;/OL>
&lt;P style="PADDING-BOTTOM: 0px; BACKGROUND-COLOR: rgb(255,255,255); MARGIN: 12px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px; background-origin: initial; background-clip: initial">
&lt;IMG style="BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px auto; DISPLAY: block; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px" class="aligncenter size-full wp-image-2534" title=arduino-projects-61 alt=arduino-projects-61 src="http://www.hacknmod.com/wp-content/uploads/2009/01/arduino-projects-61.jpg" width=600 height=275>
&lt;/P>
&lt;OL style="PADDING-BOTTOM: 0px; BACKGROUND-COLOR: rgb(255,255,255); LIST-STYLE-TYPE: decimal; MARGIN: 12px 0px 12px 20px; PADDING-LEFT: 25px; PADDING-RIGHT: 0px; PADDING-TOP: 0px; background-origin: initial; background-clip: initial">
&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=30>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.hacknmod.com/hack/make-a-mini-segway-using-the-arduino/" target=_blank>How to Build a Self Balancing Segway-like Robot&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=29>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.hacknmod.com/hack/website-visitor-blinker/" target=_blank>Website Visitor Blinker&lt;/A>&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>–&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://tinkerlog.com/2007/12/04/arduino-xmas-hitcounter/" target=_blank>Christmas Bell&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=28>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.instructables.com/id/turn-signal-biking-jacket/" target=_blank>Turn Signal Biking Jacket&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=27>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.larsby.com/johan/diytar/" target=_blank>DIY Musical Keytar&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=26>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://blog.makezine.com/archive/2009/01/tweetawatt_our_entry_for_the_core77.html" target=_blank>Tweet-a-Watt Wireless Electricity Monitor&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=25>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.hacknmod.com/hack/rc-car-controled-via-the-web/" target=_blank>RC Car Controlled Via the Web&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=24>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.instructables.com/id/DIY-3D-Controller/" target=_blank>DIY Gaming with a 3D Controller&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=23>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://sanguino.cc/" target=_blank>Sanguino&lt;/A>&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>–&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.vimeo.com/1491854?pg=embed&amp;sec=1491854" target=_blank>Arduino with extra I/O pins&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=22>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.hacknmod.com/hack/rocker-scale-measures-how-hard-you-rock/" target=_blank>Rocker Scale Measures how Hard You Rock&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=21>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.hacknmod.com/hack/hack-a-nes-controller-into-a-security-keypad/" target=_blank>Hack a NES Controller into a Security Keypad&lt;/A>&lt;/LI>
&lt;/OL>
&lt;P style="PADDING-BOTTOM: 0px; BACKGROUND-COLOR: rgb(255,255,255); MARGIN: 12px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px; background-origin: initial; background-clip: initial">
&lt;IMG style="BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px auto; DISPLAY: block; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px" class="aligncenter size-full wp-image-2530" title=arduino-projects-8 alt=arduino-projects-8 src="http://www.hacknmod.com/wp-content/uploads/2009/01/arduino-projects-8.jpg" width=600 height=275>
&lt;/P>
&lt;OL style="PADDING-BOTTOM: 0px; BACKGROUND-COLOR: rgb(255,255,255); LIST-STYLE-TYPE: decimal; MARGIN: 12px 0px 12px 20px; PADDING-LEFT: 25px; PADDING-RIGHT: 0px; PADDING-TOP: 0px; background-origin: initial; background-clip: initial">
&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=20>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://blog.makezine.com/archive/2008/12/maya_and_arduino_control.html" target=_blank>Interfacing with Maya&lt;/A>&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>and&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://melka.one.free.fr/blog/?p=34" target=_blank>3d Studio Max&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=19>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://subzonepen.blogspot.com/2009/01/arduino-webcam-servo-project.html" target=_blank>Web Based Servo Control&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=18>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://vimeo.com/2402904?pg=embed&amp;sec=2402904" target=_blank>How To Make A Daft Punk Helmet&lt;/A>&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>– (see also&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.hacknmod.com/hack/how-to-make-your-clothing-glow-using-electroluminescent-wire/">DIY Daft Punk Suits&lt;/A>)&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=17>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.hacknmod.com/hack/automatic-head-tracking-with-arduino/" target=_blank>Automatic Head Tracking with Arduino&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=16>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.arduino.cc/cgi-bin/yabb2/YaBB.pl?num=1187659197">Pong with the Arduino&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=15>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://blog.makezine.com/archive/2008/12/arduino_accelerometer_papervision3d.html" target=_blank>Interactive gaming controller&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=14>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://someoneknows.wordpress.com/2009/01/12/arduino-powered-robotic-labyrinth-game/" target=_blank>Marble Labrynth controlled using the WiiFit&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=13>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.ladyada.net/make/eshield/index.html" target=_blank>Connect the the web: Ethernet Shield&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=12>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.hacknmod.com/hack/make-an-led-gmail-notifier/">Physical Gmail LED Notifiers&lt;/A>&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>–&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.hacknmod.com/hack/gmail-and-rss-notifiers-using-the-arduino/">RSS Notifier&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=11>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://blog.mozmonkey.com/2008/ganzbot-an-arduino-robot-who-reads-twitter/" target=_blank>Robot that Reads and Speaks RSS Feeds&lt;/A>&lt;/LI>
&lt;/OL>
&lt;P style="PADDING-BOTTOM: 0px; BACKGROUND-COLOR: rgb(255,255,255); MARGIN: 12px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px; background-origin: initial; background-clip: initial">
&lt;IMG style="BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px auto; DISPLAY: block; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px" class="aligncenter size-full wp-image-2533" title=arduino-projects-7 alt=arduino-projects-7 src="http://www.hacknmod.com/wp-content/uploads/2009/01/arduino-projects-7.jpg" width=600 height=275>
&lt;/P>
&lt;OL style="PADDING-BOTTOM: 0px; BACKGROUND-COLOR: rgb(255,255,255); LIST-STYLE-TYPE: decimal; MARGIN: 12px 0px 12px 20px; PADDING-LEFT: 25px; PADDING-RIGHT: 0px; PADDING-TOP: 0px; background-origin: initial; background-clip: initial">
&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=10>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.botanicalls.com/" target=_blank>Botanicalls Twittering Plants&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=9>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://growdown.blogspot.com/2008/04/arduino-and-silvia-two-italians-one.html">Wiimote Controlled Espresso Machine&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=8>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.hacknmod.com/hack/high-speed-photography-how-to-trigger-using-arduino/" target=_blank>How to: High Speed Photography using the Arduino&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=7>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.hacknmod.com/hack/use-the-wii-and-iphone-to-control-an-rc-car/" target=_blank>Controlling an RC Car with iPhone and Wii&lt;/A>&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>–&lt;SPAN class=Apple-converted-space>&amp;nbsp;&lt;/SPAN>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.hacknmod.com/hack/iphone-controlled-rc-car/" target=_blank>Another version&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=6>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://blog.makezine.com/archive/2008/03/etchasketch_clock.html?CMP=OTC-0D6B48984890" target=_blank>Etch-a-Sketch Clock&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=5>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://antipastohw.blogspot.com/2008/10/using-inputshield-to-make-open-source.html" target=_blank>Open source Game Boy&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=4>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.hacknmod.com/hack/electronics-filled-arduino-powered-room/" target=_blank>Electronics Filled, Arduino Powered Room&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=3>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://hackaday.com/2008/06/12/how-to-make-an-rgb-combination-door-lock-%20# art-1/" target=_blank>How-To: Make an RGB combination door lock&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=2>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.hacknmod.com/hack/make-a-uav-spyplane-using-the-arduino/" target=_blank>Make a UAV Spyplane Using the Arduino&lt;/A>&lt;/LI>&lt;br /> &lt;LI style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 14px; PADDING-TOP: 0px" value=1>&lt;A style="COLOR: rgb(255,82,0); FONT-WEIGHT: 700; TEXT-DECORATION: none" href="http://www.hacknmod.com/hack/create-techno-with-a-laser-harp/" target=_blank>Fantastic Arduino Laser Harp&lt;/A>&lt;/LI>
&lt;/OL>&lt;/SPAN>&lt;/SPAN></description></item><item><title>어떻게 하면 오픈 소스 하드웨어 (Open Source Hardware)가 성공을 할까?</title><link>https://openmicrolab.com/%EC%96%B4%EB%96%BB%EA%B2%8C-%ED%95%98%EB%A9%B4-%EC%98%A4%ED%94%88-%EC%86%8C%EC%8A%A4-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-open-source-hardware%EA%B0%80-%EC%84%B1%EA%B3%B5%EC%9D%84-%ED%95%A0%EA%B9%8C/</link><pubDate>Mon, 06 Sep 2010 12:28:51 +0000</pubDate><guid>https://openmicrolab.com/%EC%96%B4%EB%96%BB%EA%B2%8C-%ED%95%98%EB%A9%B4-%EC%98%A4%ED%94%88-%EC%86%8C%EC%8A%A4-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-open-source-hardware%EA%B0%80-%EC%84%B1%EA%B3%B5%EC%9D%84-%ED%95%A0%EA%B9%8C/</guid><description>
&lt;p>&lt;font class="Apple-style-span" size="4">&lt;span class="Apple-style-span" style="font-size: 15px; line-height: 22px;">&lt;/p>&lt;/p>
&lt;p class="MsoNormal" align="left" style="text-align:left;mso-pagination:widow-orphan;
text-autospace:ideograph-numeric ideograph-other;word-break:keep-all">
&lt;font class="Apple-style-span" color="#000000">이미 소프트웨어쪽에서는&lt;/font>&lt;span lang="EN-US">&lt;font class="Apple-style-span" color="#000000"> Linux&lt;/font>&lt;/span>&lt;font class="Apple-style-span" color="#000000">를 필두로 많은&lt;/font>&lt;span lang="EN-US">&lt;font class="Apple-style-span" color="#000000"> Open Source Software&lt;/font>&lt;/span>&lt;font class="Apple-style-span" color="#000000">들이&lt;br /> 있었고 지금도 활성화되고 있다&lt;/font>&lt;span lang="EN-US">&lt;font class="Apple-style-span" color="#000000">. &lt;/font>&lt;/span>&lt;font class="Apple-style-span" color="#000000">이러한 움직임은 하드웨어에도 영향을 미치게 되었다&lt;/font>&lt;span lang="EN-US">&lt;font class="Apple-style-span" color="#000000">. &lt;/font>&lt;/span>&lt;font class="Apple-style-span" color="#000000">잘 정리된 페이지는&lt;/font>&lt;span lang="EN-US">&lt;font class="Apple-style-span" color="#000000">&amp;nbsp;&lt;/font>&lt;a href="http://makezine.com/" target="_blank" title="[http://makezine.com/]로 이동합니다.">&lt;font class="Apple-style-span" color="#5C7FB0">MakeZine&lt;/font>&lt;/a>&lt;/span>&lt;font class="Apple-style-span" color="#000000">의&lt;br /> 블로그를 참고하자&lt;/font>&lt;span lang="EN-US">&lt;font class="Apple-style-span" color="#000000">.&amp;nbsp;&lt;/font>&lt;/span>&lt;b>&lt;span lang="EN-US" style="font-size: 11pt; ">&lt;a href="http://blog.makezine.com/archive/2009/12/open_source_hardware_2009_-_the_def.html" target="_blank" title="[http://blog.makezine.com/archive/2009/12/open_source_hardware_2009_-_the_def.html]로 이동합니다.">&lt;font class="Apple-style-span" color="#5C7FB0">Open source hardware 2009 &amp;#8211; The definitive guide to open&lt;br /> source hardware projects in 2009&lt;/font>&lt;/a>&lt;/span>&lt;/b>
&lt;/p>
&lt;p>
&lt;/span>&lt;/font>&lt;font class="Apple-style-span" size="4" style="line-height: 1; ">&lt;span class="Apple-style-span" style="font-size: 15px; line-height: 22px;">&lt;/p>
&lt;p class="MsoNormal" align="left" style="text-align:left;mso-pagination:widow-orphan;
text-autospace:ideograph-numeric ideograph-other;word-break:keep-all">
&lt;font class="Apple-style-span" color="#000000">내용을 살펴보면&lt;br /> 매우 다양한 분야에서 오픈 소스 하드웨어의 이슈가 있다&lt;/font>&lt;span lang="EN-US">&lt;font class="Apple-style-span" color="#000000">.&amp;nbsp;&lt;/font>&lt;/span>&lt;font class="Apple-style-span" color="#000000">그럼 어떻게&lt;br /> 하면 이 오픈 소스 하드웨어가 활성화 될 수 있을까&lt;/font>&lt;span lang="EN-US">&lt;font class="Apple-style-span" color="#000000">?&lt;/font>&lt;/span>
&lt;/p></description></item></channel></rss>