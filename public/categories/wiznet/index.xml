<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Wiznet on OpenMicroLab</title><link>https://openmicrolab.com/categories/wiznet/</link><description>Recent content in Wiznet on OpenMicroLab</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Fri, 05 Feb 2016 07:47:54 +0000</lastBuildDate><atom:link href="https://openmicrolab.com/categories/wiznet/index.xml" rel="self" type="application/rss+xml"/><item><title>아두이노 스케치를 네트워크로 업로드하기 – Arduino update remotely</title><link>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8-%EC%8A%A4%EC%BC%80%EC%B9%98%EB%A5%BC-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC%EB%A1%9C-%EC%97%85%EB%A1%9C%EB%93%9C%ED%95%98%EA%B8%B0-arduino-remote-firmware-update/</link><pubDate>Fri, 05 Feb 2016 07:47:54 +0000</pubDate><guid>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8-%EC%8A%A4%EC%BC%80%EC%B9%98%EB%A5%BC-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC%EB%A1%9C-%EC%97%85%EB%A1%9C%EB%93%9C%ED%95%98%EA%B8%B0-arduino-remote-firmware-update/</guid><description>
&lt;p>아두이노 보드의 펌웨어는 USB 케이블을 PC와 연결후 PC상에서 잡히는 것은 COM 포트를 통해 아두이노 IDE를 통해 업데이트가 된다. 좀 더 구체적으로는 &lt;a href="http://www.nongnu.org/avrdude/" target="_blank">avrdude&lt;/a>라는 프로그램을 써서 &lt;a href="http://www.atmel.com/images/doc2591.pdf" target="_blank">stk500프로토콜&lt;/a>을 사용해서 프로그램이 된다.&lt;/p>
&lt;h3 id="아두이노-스케치를-네트워크로-업로드하기">아두이노 스케치를 네트워크로 업로드하기&lt;/h3>
&lt;p>&lt;strong>필요한 것들&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.wiznet.co.kr/product-item/wiz550s2e/" target="_blank">Wiznet의 WIZ550S2E&lt;/a> –  1개&lt;/li>
&lt;li>Arduino pro mini – 테스트에 사용한 아두이노 보드&lt;/li>
&lt;li>와이어링 케이블 – WIZ550S2E와 Arduino pro mini를 연결&lt;/li>
&lt;li>TFTP server program – Windows의 경우 &lt;a href="http://tftpd32.jounin.net/tftpd32_download.html" target="_blank">tftpd&lt;/a>, 맥의 경우 &lt;a href="http://ww2.unime.it/flr/tftpserver/" target="_blank">Tftp Server&lt;/a>&lt;/li>
&lt;li>아두이노 IDE 프로그램&lt;/li>
&lt;/ul>
&lt;h4 id="케이블-연결-및-설정">케이블 연결 및 설정&lt;/h4>
&lt;p>WIZ550S2E는 Serial to Ethernet 게이트웨이 모듈로 시리얼로 들어온 데이터는 네트워크로 보내고, 네트워크에서 들어온 데이터는 시리얼로 보낸다. &lt;a href="http://wizwiki.net/wiki/doku.php?id=products:wiz550s2e:wiz550s2eds_kr" target="_blank">WIZ550S2E의 회로도&lt;/a>를 보면 J1에 있는 입력핀들은 풀업이 되어 있어서, 아두이노와 연결에 필요한 핀은  3V3D, GND, TXD, RXD, STATUS2 핀이다.&lt;/p></description></item><item><title>ICT DIY 포럼 행사</title><link>https://openmicrolab.com/ict-diy-%ED%8F%AC%EB%9F%BC-%ED%96%89%EC%82%AC/</link><pubDate>Wed, 09 Jul 2014 14:14:11 +0000</pubDate><guid>https://openmicrolab.com/ict-diy-%ED%8F%AC%EB%9F%BC-%ED%96%89%EC%82%AC/</guid><description>
&lt;p>2014년 7월 9일에 있었던 ICT DIY 행사 (&lt;a href="http://www.ictdiy.org/wp/" target="_blank">&lt;a href="http://www.ictdiy.org/wp/">http://www.ictdiy.org/wp/&lt;/a>&lt;/a>)&lt;/p>
&lt;img loading="lazy" class="alignnone" alt="" src="http://openmicrolab.cdn2.cafe24.com/ICT%EC%BB%A8%ED%8D%BC%EB%9F%B0%EC%8A%A4-%ED%8F%AC%EC%8A%A4%ED%84%B04-3-1.jpg" width="694" height="942" />
&lt;p>그리고 이건 발표자료.&lt;/p>
&lt;div style="margin-bottom: 5px;">
&lt;strong> &lt;a title="WIZnet OSHW Global Business" href="https://www.slideshare.net/JinbuhmKim/wiznet-oshw-global-business" target="_blank">WIZnet OSHW Global Business&lt;/a> &lt;/strong> from &lt;strong>&lt;a href="http://www.slideshare.net/JinbuhmKim" target="_blank">Jinbuhm Kim&lt;/a>&lt;/strong>
&lt;/div></description></item><item><title>WIZnet 디자인 컨테스트 설문 조사</title><link>https://openmicrolab.com/wiznet-%EB%94%94%EC%9E%90%EC%9D%B8-%EC%BB%A8%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%84%A4%EB%AC%B8-%EC%A1%B0%EC%82%AC/</link><pubDate>Thu, 20 Mar 2014 07:20:36 +0000</pubDate><guid>https://openmicrolab.com/wiznet-%EB%94%94%EC%9E%90%EC%9D%B8-%EC%BB%A8%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%84%A4%EB%AC%B8-%EC%A1%B0%EC%82%AC/</guid><description>
&lt;blockquote>
&lt;p>2014 WIZnet Connect the Magic 디자인 챌린지를 하면서 진행한 설문조사결과.&lt;/p>&lt;/blockquote></description></item><item><title>Arduino Ethernet 라이브러리 업데이트</title><link>https://openmicrolab.com/arduino-ethernet-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8/</link><pubDate>Sat, 01 Mar 2014 09:26:21 +0000</pubDate><guid>https://openmicrolab.com/arduino-ethernet-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8/</guid><description>
&lt;p>WZnet 칩 W5100, W5200과 W5500을 지원하는 통합 아두이노 라이브러리인 &lt;a href="https://github.com/Wiznet/WIZ_Ethernet_Library" target="_blank">Arduino Ethernet 라이브러리&lt;/a>를 업데이트 했다. 기존 코드에서 달라진 점은 다음과 같다.&lt;/p>
&lt;ul>
&lt;li>Arduino IDE 1.5.x 지원 : Arduino Due를 지원하기 위함.&lt;/li>
&lt;li>Due용  SPI 드라이버 추가&lt;/li>
&lt;li>W5200및 W5500의 경우 SPI드라이버 속도를 높였다. 무려 42Mhz까지 지원&lt;/li>
&lt;li>w5100::read_data함수의 파라미터의 형 변경&lt;/li>
&lt;li>flush() 함수 추가&lt;/li>
&lt;/ul>
&lt;p>Arduino IDE 1.5.xx를 지원하기 위해서는&lt;/p>
&lt;ul>
&lt;li>32비트 SAM용 SPI 드라이버가 추가 되야한다.&lt;/li>
&lt;li>IDE 1.5.x의 폴더 구조가 바뀌어서 헤더파일 include가 변경된다.아래 그림 참고…  예를 들면 #include “w5100.h”가 #include “utility/ w5100.h” 이런 식으로…&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://openmicrolab.com/images/2014/03/Arduino_Folder.png">&lt;img loading="lazy" class="alignnone wp-image-2890" alt="Arduino_Folder" src="https://openmicrolab.com/images/2014/03/Arduino_Folder-826x1024.png" width="578" height="717" srcset="https://openmicrolab.com/images/2014/03/Arduino_Folder-826x1024.png 826w, https://openmicrolab.com/images/2014/03/Arduino_Folder-242x300.png 242w, https://openmicrolab.com/images/2014/03/Arduino_Folder.png 831w" sizes="(max-width: 578px) 100vw, 578px" />&lt;/a>&lt;/p></description></item><item><title>Arduino 코드에서 WIZnet칩 구별하기</title><link>https://openmicrolab.com/arduino-%EC%BD%94%EB%93%9C%EC%97%90%EC%84%9C-wiznet%EC%B9%A9-%EA%B5%AC%EB%B3%84%ED%95%98%EA%B8%B0/</link><pubDate>Sat, 01 Mar 2014 08:41:49 +0000</pubDate><guid>https://openmicrolab.com/arduino-%EC%BD%94%EB%93%9C%EC%97%90%EC%84%9C-wiznet%EC%B9%A9-%EA%B5%AC%EB%B3%84%ED%95%98%EA%B8%B0/</guid><description>
&lt;h3 id="wiznet-칩">WIZnet 칩&lt;/h3>
&lt;p>WIZnet 칩중에서 SPI가 지원되는 칩은 W5100, W5200 그리고 W5500이 있다. 이중 W5100은 아두이노에 적용이 되어 Ethernet Shield 및 Arduino Ethernet 보드에 사용이 되고 있다. 물론 W5200으로 만든 Ethernet Shield도 있고 W5500으로 만든 Ethernet Shield도 있다. 그리고 최근에는 아두이노 팀에서 W5500으로 Ethernet Shield를 만들고 있다. 이렇게 3가지 칩으로 적용된 보드가 있는데, 그럼 코드에서 이 칩들을 구별할 수 있는 방법이 있는가?&lt;/p>
&lt;h3 id="arduino-코드에서-wiznet칩-구별하기">Arduino 코드에서 WIZnet칩 구별하기&lt;/h3>
&lt;p>W5100, W5200, W5500의 칩들의 기본 기능은 같지만 H/W적으로는 패키지도 다르고 핀도 다르고, 내부 메모리 맵도 다르다. 모두 SPI 를 사용하지만 칩을 제어하기 위한 SPI format도 다르다. 그리고 W5100은 소켓이 4개이고 나머지 칩들은 모두 8개의 소켓을 지원한다.&lt;/p></description></item><item><title>W5500 Examples on Parallax</title><link>https://openmicrolab.com/w5500-examples-on-parallax/</link><pubDate>Thu, 13 Feb 2014 09:09:40 +0000</pubDate><guid>https://openmicrolab.com/w5500-examples-on-parallax/</guid><description>
&lt;p>작년 말에 &lt;a href="http://openmicrolab.com/w5500-%EB%93%9C%EB%9D%BC%EC%9D%B4%EB%B2%84-%ED%8F%AC%ED%8C%85-parallax-propeller%EC%B9%A9/" target="_blank">Parallax Activity board에 W5500 드라이버를 포팅&lt;/a>을 했다. 오늘은 관련된 예제 프로그램들을 모두 포팅해서 &lt;a href="https://github.com/jbkim/Parallax_W5500/" target="_blank">github&lt;/a>에 올렸다. 이중 흥미로운 것은 Html 5 지원 Webserver인데, 브라우저에서 실시간으로 변동되는 데이터를 그래프로 보여주는 응용이다.&lt;/p>
&lt;p>At the end of last year I ported the &lt;a href="http://openmicrolab.com/w5500-%EB%93%9C%EB%9D%BC%EC%9D%B4%EB%B2%84-%ED%8F%AC%ED%8C%85-parallax-propeller%EC%B9%A9/" target="_blank">W5500 driver on the Parallax Activity board&lt;/a>. Today, I ported all the related network example and posted on my &lt;a href="https://github.com/jbkim/Parallax_W5500/" target="_blank">github&lt;/a>. Most interesting example is the Html 5 Webserver showing the real time data in the graph.&lt;/p></description></item><item><title>WizFi210과 IoT서비스 연동</title><link>https://openmicrolab.com/wizfi210%EA%B3%BC-iot%EC%84%9C%EB%B9%84%EC%8A%A4-%EC%97%B0%EB%8F%99/</link><pubDate>Tue, 19 Feb 2013 00:28:46 +0000</pubDate><guid>https://openmicrolab.com/wizfi210%EA%B3%BC-iot%EC%84%9C%EB%B9%84%EC%8A%A4-%EC%97%B0%EB%8F%99/</guid><description>
&lt;p>&lt;a class="tx-link" href="https://cosm.com" target="_blank">Cosm&lt;/a>은 &lt;span style="font-size: 9pt; line-height: 1.5;">&lt;a class="tx-link" href="http://liketheocean.tistory.com/183" target="_blank">IoT 서비스&lt;/a>로 예전에 Pachube라는 이름으로 서비스를 하다가 LogMeIn에 인수가 되면서 Cosm으로 이름이 바뀌었다.먼저 Cosm의 서비스를 사용하기 위해서는 회원 가입을 하고, Device/Feed를 추가해야한다.&lt;/span>&lt;/p>
&lt;div>
&lt;div>
&lt;/div>
&lt;div>
&lt;b>&lt;span style="font-size: 10pt;">Cosm 설정&lt;/span>&lt;/b>
&lt;/div>
&lt;div>
&lt;span style="font-size: 9pt; line-height: 1.5;">&lt;b>1. 회원 가입&lt;/b>&lt;/span>
&lt;/div>
&lt;div>
&lt;span style="font-size: 9pt; line-height: 1.5;">회원&lt;/span>&lt;span style="font-size: 9pt; line-height: 1.5;"> &lt;/span>&lt;span style="font-size: 9pt; line-height: 1.5;">가입을 하면 &lt;/span>&lt;span style="font-size: 9pt; line-height: 1.5;">API키를 발급을 하는데, 이 정보는 기억을 해둬야하고, 나중에 Keys에서 다시 확인을 할 수 있다.&lt;/span>
&lt;/div>
&lt;div>
&lt;p>
&lt;a href="https://openmicrolab.com/images/2013/02/cosm_00.png">&lt;img loading="lazy" class="size-full wp-image-2348 aligncenter" alt="cosm_00" src="https://openmicrolab.com/images/2013/02/cosm_00.png" width="253" height="115" />&lt;/a>
&lt;/p>
&lt;/div>
&lt;div>
&lt;b>2. Device/Feed 추가&lt;/b>
&lt;/div>
&lt;div>
Something Else를 선택한다.
&lt;/div>
&lt;div>
&lt;/div>
&lt;div>
&lt;a href="https://openmicrolab.com/images/2013/03/cosm_01.png">&lt;img loading="lazy" class="alignnone size-full wp-image-2358" alt="cosm_01" src="https://openmicrolab.com/images/2013/03/cosm_01.png" width="683" height="345" srcset="https://openmicrolab.com/images/2013/03/cosm_01.png 683w, https://openmicrolab.com/images/2013/03/cosm_01-300x151.png 300w" sizes="(max-width: 683px) 100vw, 683px" />&lt;/a>
&lt;/div>
&lt;div>
Step1에서 디폴트로 선택이 되어 있는 &amp;#8220;No, I will push data to Cosm&amp;#8221;를 선택을 한다.
&lt;/div>
&lt;div>
&lt;p style="text-align: center; clear: none; float: none;">
&lt;a href="https://openmicrolab.com/images/2013/03/cosm_02.png">&lt;img loading="lazy" class=" wp-image-2357 aligncenter" alt="cosm_02" src="https://openmicrolab.com/images/2013/03/cosm_02.png" width="678" height="465" srcset="https://openmicrolab.com/images/2013/03/cosm_02.png 678w, https://openmicrolab.com/images/2013/03/cosm_02-300x205.png 300w" sizes="(max-width: 678px) 100vw, 678px" />&lt;/a>
&lt;/p></description></item><item><title>WizFi210의 F/W를 SPI버젼으로 바꾸기</title><link>https://openmicrolab.com/wizfi210%EC%9D%98-fw%EB%A5%BC-spi%EB%B2%84%EC%A0%BC%EC%9C%BC%EB%A1%9C-%EB%B0%94%EA%BE%B8%EA%B8%B0/</link><pubDate>Mon, 17 Dec 2012 06:51:48 +0000</pubDate><guid>https://openmicrolab.com/wizfi210%EC%9D%98-fw%EB%A5%BC-spi%EB%B2%84%EC%A0%BC%EC%9C%BC%EB%A1%9C-%EB%B0%94%EA%BE%B8%EA%B8%B0/</guid><description>
&lt;ul style="list-style-type: square;">
&lt;li>
&lt;b>&lt;span style="font-size: 10pt;">H/W 설정&lt;/span>&lt;/b>
&lt;/li>
&lt;/ul>
&lt;p>&lt;span style="font-size: 10pt;">WizFi210의 F/W를 업데이트하기 위해서는 모듈을 RUN mode에서 PROGRAM mode로 설정을하고, UART를 이용해서 업데이트를 해야한다. &lt;/span>&lt;span style="font-size: 10pt;">아래 회로도를 보면 모듈의 37번핀을 Low로 하면 RUN mode이고, High로 하면 PROGRAM mode이다. &lt;/span>&lt;span style="font-size: 10pt;">이 핀을 High로하고, UART핀 TX(40번), RX(42번)핀을 RS232 트랜시버를 거쳐서 PC의 시리얼 포트에 연결을 한다.&lt;/span>&lt;/p>
&lt;p>&lt;a href="https://openmicrolab.com/images/2012/12/wizfi210_program.png">&lt;img loading="lazy" class="aligncenter size-full wp-image-2364" alt="wizfi210_program" src="https://openmicrolab.com/images/2012/12/wizfi210_program.png" width="683" height="351" srcset="https://openmicrolab.com/images/2012/12/wizfi210_program.png 683w, https://openmicrolab.com/images/2012/12/wizfi210_program-300x154.png 300w" sizes="(max-width: 683px) 100vw, 683px" />&lt;/a>&lt;/p>
&lt;ul style="list-style-type: disc;">
&lt;li>
&lt;b>&lt;span style="font-size: 10pt;">PC프로그램 설정&lt;/span>&lt;/b>
&lt;/li>
&lt;/ul>
&lt;p>&lt;span style="font-size: 10pt;">WIZSamrtScript 프로그램을 다운로드 받는다. &lt;/span>&lt;span style="font-size: 10pt;">&lt;a class="tx-link" href="http://www.wiznet.co.kr/UpLoad_Files/ReferenceFiles/WIZSmartScript(1.1.0.5(W)).zip" target="_blank">링크&lt;/a>&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-size: 10pt;">SPI 용 F/W를 다운로르 받는다. &lt;/span>&lt;a class="tx-link" href="http://www.wiznet.co.kr/sub_modules/en/product/product_detail.asp?Refid=496&amp;page=1&amp;cate1=5&amp;cate2=43&amp;cate3=0&amp;pid=1132&amp;cType=2" target="_blank">&lt;span style="font-size: 10pt;">링크&lt;/span>&lt;/a>&lt;/p></description></item><item><title>Maple mini 보드에서 Wiz820io 사용하기</title><link>https://openmicrolab.com/maple-mini-%EB%B3%B4%EB%93%9C%EC%97%90%EC%84%9C-wiz820io-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link><pubDate>Mon, 12 Dec 2011 10:00:00 +0000</pubDate><guid>https://openmicrolab.com/maple-mini-%EB%B3%B4%EB%93%9C%EC%97%90%EC%84%9C-wiz820io-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid><description>
&lt;P style="MARGIN: 0px">
&lt;A title="[http://leaflabs.com/]로 이동합니다." href="http://leaflabs.com/" target=_blank>Leaflab&lt;/A>사의 &lt;A title="[http://leaflabs.com/2011/10/wizzin-through-the-ether-net/]로 이동합니다." href="http://leaflabs.com/2011/10/wizzin-through-the-ether-net/" target=_blank>블로그&lt;/A>를 보고 Maple mini보드에 &lt;A title="[http://www.wiznet.co.kr/wiz820io]로 이동합니다." href="http://www.wiznet.co.kr/wiz820io" target=_blank>Wiz820io&lt;/A>를 연결해서 테스트를 진행했다. 브레드보드가 있으니 연결은 금방한다. 예제들이 UART3를 사용하기 때문에 아래 그림처럼 RS232 트랜시버가 달려있는 쪽보드를 사용해서 시리얼을 연결했다. &lt;br /> &lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile5.uf.195BA43E4EE5A0B1143718.jpg" class="aligncenter" width="483" height="338" alt="" filename="maple mini test.jpg" filemime="image/jpeg" />
&lt;/P>
&lt;P style="MARGIN: 0px">
&lt;STRONG>H/W 연결&lt;/STRONG>&lt;br /> Maple mini보드의 Fritzing라이브러리도 만들고&amp;#8230; 회로 연결은 아래 그림과 같다. 사실 연결할 것은 SPI 시그널과 VCC, GND 밖에 없다.&amp;nbsp;&lt;br /> &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;STRONG>Maple mini Fritzing 라이브러리:&lt;/P>&lt;br />
&lt;P style="MARGIN: 0px">
&lt;a href="https://openmicrolab.com/images/1/cfile4.uf.1460D83F4EE5A5580D181E.fzpz" class="aligncenter" filename="maple mini.fzpz" filemime="application/zip" />cfile4.uf.1460D83F4EE5A5580D181E.fzpz&lt;/a>&lt;/STRONG>&lt;br /> &lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile22.uf.135BA43E4EE5A0B316548A.PNG" class="aligncenter" width="463" height="407" alt="" filename="maple_mini_Wiz820io.PNG" filemime="image/jpeg" />&lt;STRONG>라이브러리&lt;/STRONG>&lt;br /> 아래 첨부한 파일을 Leaflab IDE의 \libraries\wizEthernet에 압축을 풀어서 넣는다.&lt;br /> 예제 파일이 telnetServer, webServer 2가지가 있는데, 제공되는 예제가 약간 문제가 있다.&lt;br /> telentServer의 경우 password를 칠때는 문제가 없지만 다른 경우에 매 문자마다 echo back를 해서 이것을 수정을 했고, webServer의 경우 브라우져에서 favicon을 요청시 처리를 위해 &amp;#8220;HTTP/1.1 404 Not Found&amp;#8221; 페이지를 돌려주기 위한 코드를 추가 했다.&amp;nbsp;&lt;br /> &lt;STRONG>&amp;nbsp;&amp;nbsp;&amp;nbsp;wizEthernet 라이브러리:&amp;nbsp;&lt;/P>&lt;br />
&lt;pre>&lt;code>&amp;lt;P style=&amp;quot;MARGIN: 0px&amp;quot;&amp;gt;
&amp;lt;a href=&amp;quot;/images/1/cfile29.uf.175DF13F4EE5A4850D2B13.zip&amp;quot; class=&amp;quot;aligncenter&amp;quot; filename=&amp;quot;wizEthernet.zip&amp;quot; filemime=&amp;quot;application/zip&amp;quot; /&amp;gt;cfile29.uf.175DF13F4EE5A4850D2B13.zip&amp;lt;/a&amp;gt;
&amp;lt;/P&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;P style=&amp;quot;MARGIN: 0px&amp;quot;&amp;gt;
&amp;lt;/STRONG&amp;gt;&amp;lt;br /&amp;gt; &amp;lt;STRONG&amp;gt;&amp;amp;nbsp; 수정된 예제 파일: &amp;lt;/P&amp;gt;&amp;lt;br /&amp;gt;
&amp;lt;P style=&amp;quot;MARGIN: 0px&amp;quot;&amp;gt;
&amp;lt;a href=&amp;quot;/images/1/cfile3.uf.172F71414EE5A4430F27EA.pde&amp;quot; class=&amp;quot;aligncenter&amp;quot; filename=&amp;quot;telnetserver.pde&amp;quot; filemime=&amp;quot;text/x-c; charset=us-ascii&amp;quot; /&amp;gt;cfile3.uf.172F71414EE5A4430F27EA.pde&amp;lt;/a&amp;gt;
&amp;lt;/P&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;P style=&amp;quot;MARGIN: 0px&amp;quot;&amp;gt;
&amp;lt;a href=&amp;quot;/images/1/cfile27.uf.17335D414EE5A4542CA563.pde&amp;quot; class=&amp;quot;aligncenter&amp;quot; filename=&amp;quot;webserver.pde&amp;quot; filemime=&amp;quot;text/x-c; charset=us-ascii&amp;quot; /&amp;gt;cfile27.uf.17335D414EE5A4542CA563.pde&amp;lt;/a&amp;gt;
&amp;lt;/P&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;P style=&amp;quot;MARGIN: 0px&amp;quot;&amp;gt;
&amp;lt;br /&amp;gt; &amp;lt;/STRONG&amp;gt;&amp;lt;br /&amp;gt; 혹시 컴파일후 보드에 다운로그가 문제가 있을 경우, 이전 포스트를 참고(&amp;lt;A title=&amp;quot;[http://liketheocean.tistory.com/174]로 이동합니다.&amp;quot; href=&amp;quot;http://liketheocean.tistory.com/174&amp;quot; target=_blank&amp;gt;LeafLabs의 Maple mini, Maple Ret 5 보드 사용기&amp;lt;/A&amp;gt;)
&amp;lt;/P&amp;gt;&amp;lt;/p&amp;gt;
&lt;/code>&lt;/pre></description></item><item><title>아두이노 보드에서 W5200 사용하기</title><link>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8-%EB%B3%B4%EB%93%9C%EC%97%90%EC%84%9C-w5200-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link><pubDate>Mon, 12 Dec 2011 09:59:33 +0000</pubDate><guid>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8-%EB%B3%B4%EB%93%9C%EC%97%90%EC%84%9C-w5200-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid><description>
&lt;p>아두이노의 공식 Ethernet 쉴드에는 &lt;A title="[http://wiznet.co.kr]로 이동합니다." href="http://wiznet.co.kr/" target=_blank>Wiznet&lt;/A>의 &lt;A title="[http://www.wiznet.co.kr/w5100]로 이동합니다." href="http://www.wiznet.co.kr/w5100" target=_blank>W5100&lt;/A>이 사용된다. 따라서 모든 Ethernet 라이브러리는 &lt;A title="[http://www.wiznet.co.kr/w5100]로 이동합니다." href="" target=_blank>W5100&lt;/A>을 이용하는 것으로 되어있는데 &lt;A title="[http://wiznet.co.kr]로 이동합니다." href="" target=_blank>Wiznet&lt;/A>의 신규칩인 &lt;A title="[http://www.wiznet.co.kr/w5200]로 이동합니다." href="http://www.wiznet.co.kr/w5200" target=_blank>W5200&lt;/A>을 아두이노 보드에서 사용하기 위해서는 라이브러리를 일부 수정을 해야 한다. &lt;A title="[http://www.wiznet.co.kr/w5100]로 이동합니다." href="" target=_blank>W5100&lt;/A>과 비교해서 &lt;A title="[http://www.wiznet.co.kr/w5200]로 이동합니다." href="" target=_blank>W5200&lt;/A>의 장점은 대략 작은 패키지, 8 socket 지원(W5100의 경우 4 socket 지원), Power down mode, Wake on LAN 기능 지원 등이다. &lt;br>
**    W5100 to W5200 migration guide&lt;/P>&lt;/p>
&lt;DIV style="TEXT-ALIGN: center">
&lt;br />
&lt;P style="MARGIN: 0px">
&lt;a href="https://openmicrolab.com/images/1/cfile3.uf.1221F0404EE59A7B11507B.pdf" class="aligncenter" filename="w5100_w5200_migration guide.pdf" filemime="application/pdf" />cfile3.uf.1221F0404EE59A7B11507B.pdf&lt;/a>
&lt;/P>&lt;/STRONG>
&lt;/DIV>
&lt;p>&lt;strong>Hardware 연결&lt;/strong>&lt;br>
간단한 테스트를 위해 &lt;A title="[http://www.wiznet.co.kr/wiz820io]로 이동합니다." href="http://www.wiznet.co.kr/wiz820io" target=_blank>Wiz820io&lt;/A>를 사용을 해서 아래 그림처럼 테스트를 했다. 아래 그림은 Fritzing 이라는 툴로 &lt;A title="[http://www.wiznet.co.kr/wiz820io]로 이동합니다." href="" target=_blank>Wiz820io &lt;/A>라이브러리를 만든 후 작성한 연결도이다. Fritzing관련해서는 이전 포스트 참고(&lt;A title="[http://liketheocean.tistory.com/159]로 이동합니다." href="http://liketheocean.tistory.com/159" target=_blank>Fritzing&lt;/A>, &lt;A title="[http://liketheocean.tistory.com/169]로 이동합니다." href="http://liketheocean.tistory.com/169" target=_blank>Fritzing 라이브러리 만들기&lt;/A>)&lt;br>
&lt;strong>    Wiz820io의 Fritzing 라이브러리&lt;/strong>&lt;/p></description></item><item><title>WIZFi210을 SPI로 제어하자</title><link>https://openmicrolab.com/wizfi210%EC%9D%84-spi%EB%A1%9C-%EC%A0%9C%EC%96%B4%ED%95%98%EC%9E%90/</link><pubDate>Wed, 23 Nov 2011 10:27:13 +0000</pubDate><guid>https://openmicrolab.com/wizfi210%EC%9D%84-spi%EB%A1%9C-%EC%A0%9C%EC%96%B4%ED%95%98%EC%9E%90/</guid><description>
&lt;p>&lt;strong>H/W 연결&lt;/strong>&lt;br>
&lt;A title="[http://www.wiznet.co.kr/Sub\_Modules/kr/product/Product\_Detail.asp?cate1=&amp;cate2=&amp;cate3=&amp;pid=1132]로 이동합니다." href="http://www.wiznet.co.kr/Sub\_Modules/kr/product/Product\_Detail.asp?cate1=&amp;cate2=&amp;cate3=&amp;pid=1132" target=_blank>WIZFi210&lt;/A>은 SPI slave로 동작을 하고 MCU의 SPI는 master로 동작을 한다.&lt;br>
다음 그림과 같이 H/W 연결을 하는데, 테스트에 사용된 MCU는 &lt;A title="[http://www.wiznet.co.kr/Sub\_Modules/kr/product/Product\_Detail.asp?cate1=5&amp;cate2=7&amp;cate3=56&amp;pid=1152]로 이동합니다." href="http://www.wiznet.co.kr/Sub\_Modules/kr/product/Product\_Detail.asp?cate1=5&amp;cate2=7&amp;cate3=56&amp;pid=1152" target=_blank>W5200E01-M3&lt;/A>에 있는 &lt;A title="[http://www.st.com/internet/mcu/product/164476.jsp]로 이동합니다." href="http://www.st.com/internet/mcu/product/164476.jsp" target=_blank>STM32F103C8&lt;/A>을 사용하였다.&lt;br>
SPI signal외에 WIZFi210의 GPIO19핀(Host wake up signal: High Active)의 연결이 필요하며, WIZFi210의 H/W reset을 위해 전원을 control하기 위해 GPIO가 하나 더 필요하다.&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile30.uf.13467A344ECCC712298C14.jpg" class="aligncenter" width="594" height="434" alt="" filename="WizFi210_SPI.jpg" filemime="image/jpeg" />&lt;/p>
&lt;p>이외에 GPIO29번은 &amp;lt;데이터/커맨드 모드간의 변경&amp;gt;에 사용되며 GPIO21번은 &amp;lt;공장초기화&amp;gt; &amp;lt;Limited AP 모드&amp;gt; 등의 개발 및 운용을 위한 다양한 용도를 위해 사용된다. 따라서, 예외적인 경우를 제외하고는 반드시 고려되는 것이 좋다. 또한 펌웨어를 업그레이드 하기 위해서는, 37번 핀을 pull up/pull down 하기 하여, Program/Run Mode를 전환하여 시리얼을 통해 펌웨어 파일을 전송할 수 있는 하드웨어적인 구성이 꼭 필요하다. &lt;/p></description></item><item><title>STM8S-DISCOVERY 보드와 WIZ820io의 연결</title><link>https://openmicrolab.com/stm8s-discovery-%EB%B3%B4%EB%93%9C%EC%99%80-wiz820io%EC%9D%98-%EC%97%B0%EA%B2%B0/</link><pubDate>Fri, 04 Nov 2011 11:18:34 +0000</pubDate><guid>https://openmicrolab.com/stm8s-discovery-%EB%B3%B4%EB%93%9C%EC%99%80-wiz820io%EC%9D%98-%EC%97%B0%EA%B2%B0/</guid><description>
&lt;p>ST마이크로의 8비트 MCU EVB인 STM8S-Discovery 보드에 Wiznet의 WIZ820io를 SPI로 연결하여 테스트를 해보았다.&lt;/p>
&lt;p style="margin: 0px;">
&lt;img loading="lazy" class="aligncenter" src="https://openmicrolab.com/images/1/cfile2.uf.193F25424EB3C8CB2DBE49.jpg" alt="" width="413" height="298" />
&lt;/p>
&lt;p>STM8S-DISCOVERY 관련자료 : &lt;a href="http://www.st.com/internet/evalboard/product/247087.jsp">http://www.st.com/internet/evalboard/product/247087.jsp&lt;/a>&lt;br>
STM8S-DISCOVERY보드의 메뉴얼;&lt;/p>
&lt;p style="margin: 0px;">
&lt;a class="aligncenter" href="https://openmicrolab.com/images/1/cfile7.uf.185721394EB3C4731FDE54.pdf">cfile7.uf.185721394EB3C4731FDE54.pdf&lt;/a>WIZ820io 관련 자료 : &lt;a href="http://www.wiznet.co.kr/wiz820io">http://www.wiznet.co.kr/wiz820io&lt;/a>
&lt;/p>
&lt;p>&lt;strong>1. 하드웨어 연결&lt;/strong>&lt;br>
SPI 신호들은 CN1, CN2에 나와 있는 SPI 신호에 연결하고, nSS, nINT, nRESET, PWDN 신호들은 각각 STM8S의 GPIOs(PA4, PA5, PA3 and PA6)에 연결이 된다.&lt;/p>
&lt;p style="margin: 0px;">
&lt;img loading="lazy" class="aligncenter" src="https://openmicrolab.com/images/1/cfile25.uf.170ABB3C4EB3C578357278.png" alt="" width="449" height="357" />
&lt;/p>
&lt;p>**2. Firmware&lt;br>
** 컴파일러는 &lt;a title="[http://www.cosmic-software.com/]로 이동합니다." href="http://www.cosmic-software.com/" target="_blank" rel="noopener noreferrer">Cosmic&lt;/a>사의 &lt;a title="[http://www.cosmic-software.com/stm8.php]로 이동합니다." href="http://www.cosmic-software.com/stm8.php" target="_blank" rel="noopener noreferrer">CXSTM8 compiler&lt;/a>와 ST 홈페이지에서 다운로드 받을 수 있는 STVD를 사용한다. CXSTM8 compiler는 등록을 하면 일정기간 사용이 가능하다.&lt;/p></description></item><item><title>임베디드 보드에서 트위터하기</title><link>https://openmicrolab.com/%EC%9E%84%EB%B2%A0%EB%94%94%EB%93%9C-%EB%B3%B4%EB%93%9C%EC%97%90%EC%84%9C-%ED%8A%B8%EC%9C%84%ED%84%B0%ED%95%98%EA%B8%B0/</link><pubDate>Thu, 15 Sep 2011 12:32:02 +0000</pubDate><guid>https://openmicrolab.com/%EC%9E%84%EB%B2%A0%EB%94%94%EB%93%9C-%EB%B3%B4%EB%93%9C%EC%97%90%EC%84%9C-%ED%8A%B8%EC%9C%84%ED%84%B0%ED%95%98%EA%B8%B0/</guid><description>
&lt;p>이 블로그 포스트는 Twitter API Proxy 서비스인 supertweet.net를 이용해서 PC나 스마트폰이 아닌 임베디드 보드에서 트위터 메시지를 보내는 방법을 설명한다.&lt;br>
참조 사이트:mbed의 &lt;A title="[http://mbed.org/cookbook/SuperTweet]로 이동합니다." href="http://mbed.org/cookbook/SuperTweet" target=_blank>post to Twitter via SuperTweet &lt;/A>&lt;/p>
&lt;p>먼저 트위터 아이디가 필요한데, 테스트를 위해 twitter.com 에서 ID를 하나 만들었다. EspressoDopio2. 참고로 내 트위터 아이디는 EspressoDopio&lt;/p>
&lt;p>&lt;A title="[http://www.supertweet.net/]로 이동합니다." href="http://www.supertweet.net/" target=_blank>Supertweet.net&lt;/A> 에 접속해서 docoment link에 가면 3가지 step으로 설명을 해 놓고 있다.&lt;/p>
&lt;ol>
&lt;li>Sign UP/ Sign in now를 클릭해서 MyAuthAPIProxy가 계정 사용을 승인하도록 한다.&lt;/li>
&lt;li>Basic Auth를 위한 패스워드를 설정한다. 이 password는 패스워드와 다르게 설정함.&lt;br>
이 설정이 되면 다음과 같이 Username이 나타다고 Secret 밑에 Show 를 클릭하면 내가 정한 password가 나타난다.&lt;/li>
&lt;/ol>
&lt;P style="MARGIN: 0px">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile29.uf.167B64414E71EC861C6440.PNG" class="aligncenter" width="683" height="93" alt="" filename="twitter2.PNG" filemime="image/jpeg" />
&lt;/P>
&lt;p>3. 이젠 임베디드 보드에서 트위터 메시지를 보내면 되는데, Twitter.com 대신에  &lt;a href="http://api.supertweet.net/">http://api.supertweet.net&lt;/a> 로 보내면 된다.&lt;br>
구체적인 방법은 &lt;a href="http://www.supertweet.net/about/api">http://www.supertweet.net/about/api&lt;/a> 링크를 확인하면 되는데, 간단히 메시지 post하는 것을 설명하면…&lt;/p></description></item><item><title>W7100 TCP loopback</title><link>https://openmicrolab.com/w7100-tcp-loopback/</link><pubDate>Tue, 08 Feb 2011 04:20:32 +0000</pubDate><guid>https://openmicrolab.com/w7100-tcp-loopback/</guid><description>
&lt;p>&lt;A title="[http://www.wiznet.co.kr]로 이동합니다." href="http://www.wiznet.co.kr/" target=_blank>위즈네트&lt;/A>의 &lt;A title="[http://www.wiznet.co.kr/Sub\_Modules/en/product/Product\_Detail.asp?cate1=5&amp;cate2=40&amp;cate3=41&amp;pid=1001]로 이동합니다." href="http://www.wiznet.co.kr/Sub\_Modules/en/product/Product\_Detail.asp?cate1=5&amp;cate2=40&amp;cate3=41&amp;pid=1001" target=_blank>W7100&lt;/A>을 이용한 loopback소스입니다.&lt;/p>
&lt;p>&lt;a href="https://openmicrolab.com/images/1/cfile10.uf.1564FB4D4D50CCD605E1B3.zip" class="aligncenter" filename="loopback.zip" filemime="application/zip" /> cfile10.uf.1564FB4D4D50CCD605E1B3.zip&lt;/a>&lt;/p>
&lt;p>W7100이 8051기반인데 많이 사용하는 Keil 컴파일러 대신에 &lt;A title="[http://liketheocean.tistory.com/entry/무료-8051-컴파일러-SDCC]로 이동합니다." href="http://liketheocean.tistory.com/entry/무료-8051-컴파일러-SDCC" target=_blank>SDCC&lt;/A> 를 사용했습니다.&lt;br>
사용된 소스는 &lt;A title="[http://www.circuitcellar.com/iMCU/]로 이동합니다." href="http://www.circuitcellar.com/iMCU/" target=_blank>iMCU design contest&lt;/A>에 출품한 &lt;SPAN style="WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; BORDER-COLLAPSE: separate; FONT: medium Gulim; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px" class=Apple-style-span>&lt;SPAN style="FONT-FAMILY: Arial, Helvetica, sans-serif; COLOR: rgb(68,68,68); FONT-SIZE: 13px" class=Apple-style-span>Clayton Gumbrel&lt;/SPAN>&lt;/SPAN>(&lt;SPAN style="WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; BORDER-COLLAPSE: separate; FONT: medium Gulim; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px" class=Apple-style-span>&lt;SPAN style="FONT-FAMILY: Arial, Helvetica, sans-serif; COLOR: rgb(68,68,68); FONT-SIZE: 13px" class=Apple-style-span>&lt;A style="COLOR: rgb(118,183,0); TEXT-DECORATION: none" href="mailto:clayton@gumbrell.net">&lt;a href="mailto:clayton@gumbrell.net">clayton@gumbrell.net&lt;/a>&lt;/A>&lt;/SPAN>&lt;/SPAN>)의 &lt;A title="[http://www.circuitcellar.com/iMCU/winners/HM/003198.html]로 이동합니다." href="http://www.circuitcellar.com/iMCU/winners/HM/003198.html" target=_blank>Remote Finger&lt;/A>소스를 수정했습니다.&lt;/p></description></item></channel></rss>