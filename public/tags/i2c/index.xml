<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>I2c on OpenMicroLab</title><link>https://openmicrolab.com/tags/i2c/</link><description>Recent content in I2c on OpenMicroLab</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Sun, 01 Nov 2020 04:32:03 +0000</lastBuildDate><atom:link href="https://openmicrolab.com/tags/i2c/index.xml" rel="self" type="application/rss+xml"/><item><title>I2C 프로토콜의 NACK</title><link>https://openmicrolab.com/i2c-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C%EC%9D%98-nack/</link><pubDate>Sun, 01 Nov 2020 04:32:03 +0000</pubDate><guid>https://openmicrolab.com/i2c-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C%EC%9D%98-nack/</guid><description>
&lt;p>I2C 프로토콜은 필립스반도체(지금의 NXP)에서 만든 프로토콜로 I2C의 약자는 Inter-Integrated-Circuit 이다. SDA, SCL 2 wire 만 필요해서 간단한데, SPI와 마찬가지로 마스터-슬레이브 구조를 가진다. 데이터를 전송하고 ACK가 오면 통신에 이상이 없는 것이지만 NACK의 상황도 있다.&lt;/p>
&lt;p>하기 표와 같이 NACK의 상황중 가장 많은 경우가 Slave Address가 틀릴 경우일 것 같은데, 데이터 시트에서 명기한 주소가 7 bit address인지 아지면 8 bit인지 확인이 필요하고, 칩 벤더에서 제공하는 드라이버 코드가 8bit를 받아서처리하는 것인지, 7bit를 받아서 처리하는 루틴인지 확인이 필요하다. &lt;a href="https://blog.digilentinc.com/i2c-how-does-it-work/">참고 문서&lt;/a>&lt;/p></description></item></channel></rss>