<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Wireshark 패킷분석기 Packet Capture TCP/IP on OpenMicroLab</title><link>https://openmicrolab.com/tags/wireshark-%ED%8C%A8%ED%82%B7%EB%B6%84%EC%84%9D%EA%B8%B0-packet-capture-tcp/ip/</link><description>Recent content in Wireshark 패킷분석기 Packet Capture TCP/IP on OpenMicroLab</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Wed, 14 Jul 2010 08:31:48 +0000</lastBuildDate><atom:link href="https://openmicrolab.com/tags/wireshark-%ED%8C%A8%ED%82%B7%EB%B6%84%EC%84%9D%EA%B8%B0-packet-capture-tcp/ip/index.xml" rel="self" type="application/rss+xml"/><item><title>유용한 툴 – IO Ninja</title><link>https://openmicrolab.com/%EC%9C%A0%EC%9A%A9%ED%95%9C-%ED%88%B4-io-ninja/</link><pubDate>Wed, 14 Jul 2010 08:31:48 +0000</pubDate><guid>https://openmicrolab.com/%EC%9C%A0%EC%9A%A9%ED%95%9C-%ED%88%B4-io-ninja/</guid><description>
&lt;p>이 툴은 Tibbo (&lt;A title="[http://www.tibbo.com]로 이동합니다." href="http://www.tibbo.com/" target=_blank>&lt;a href="https://www.tibbo.com">www.tibbo.com&lt;/a>&lt;/A>)에서 제공을 하는 Serial, TCP, UDP 전송기능 및 Wireshark의 packet capture 기능이 통합되어 있는 툴입니다. Packet capture를 위해서는 Wireshark 처럼 WInpcap을 사용을 합니다.&lt;br>
원래는 개인용으로 30불에 판매를 하는 툴인데, Evaluation 버젼은 &lt;A title="[http://tibbo.com/downloads/ninja.html ]로 이동합니다." href="http://tibbo.com/downloads/ninja.html%20" target=_blank>&lt;a href="http://tibbo.com/downloads/ninja.html">http://tibbo.com/downloads/ninja.html&lt;/a>&lt;/A> 에서 다운로드 가능합니다. 사용기간이 지나도 “Continue evaluation”버튼을 누르면 계속 사용이 가능합니다.&lt;br>
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile27.uf.1725DD044C3D73483655F8.jpg" class="aligncenter" width="426" height="292" alt="" filename="tibbo.jpg" filemime="image/jpeg" />&lt;br>
저 같은 경우는 TCP 테스트의 경우에는 &lt;A title="[http://liketheocean.tistory.com/entry/%EC%9C%A0%EC%9A%A9%ED%95%9C-%ED%88%B4-Socket-Tester]로 이동합니다." href="http://liketheocean.tistory.com/entry/%EC%9C%A0%EC%9A%A9%ED%95%9C-%ED%88%B4-Socket-Tester" target=_blank>Socket tester&lt;/A>를 사용을 하고, UDP를 테스트를 할때 이툴을 사용합니다. 물론 packet을 capture 할때는 Wireshark를 사용합니다. 사용법은 매우 간단한데, 프로그램을 실행시킨후 New Session에서 원하는 통신방식을 클릭하고, IP와 port를 설정을 하면 됩니다.&lt;br>
즉 TCP client의 경우는 Connection Socket을 선택을 하고,TCP server의 경우 Listener Socket을 선택, UDP의 경우 UDP Socket을 선택을 하면 됩니다.&lt;br>
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile22.uf.192B951F4C3D75240954D3.jpg" class="aligncenter" width="409" height="490" alt="" filename="Tibbo_UDP.jpg" filemime="image/jpeg" />&lt;br>
예를 들어 UDP Socket을 선택을 한 경우 Local에는 자신이 바인딩할 port를 입력을 하고, Remote에는 통신을 할 peer의 IP 및 Port number를 입력을 하고, 번개모양의 아이콘을 클릭하면 됩니다.&lt;br>
데이터는 아래창에 입력을 한후 send를 하면 됩니다.&lt;br>
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile23.uf.1676C2234C3D753836D3BD.jpg" class="aligncenter" width="680" height="444" alt="" filename="Tibbo_UDP2.jpg" filemime="image/jpeg" />&lt;/p></description></item><item><title>Wireshark 사용팁-2</title><link>https://openmicrolab.com/wireshark-%EC%82%AC%EC%9A%A9%ED%8C%81-2/</link><pubDate>Mon, 17 May 2010 11:53:50 +0000</pubDate><guid>https://openmicrolab.com/wireshark-%EC%82%AC%EC%9A%A9%ED%8C%81-2/</guid><description>
&lt;p>&lt;span style="font-size: 11pt;">지난번 &lt;a title="[http://liketheocean.tistory.com/entry/Wireshark-사용법]로 이동합니다." target="_blank" href="http://liketheocean.tistory.com/entry/Wireshark-%EC%82%AC%EC%9A%A9%EB%B2%95">Wireshark 사용법&lt;/a>과 &lt;span style="color: rgb(0, 0, 0);">&lt;a title="[http://Wireshark 사용팁-1]로 이동합니다." target="_blank" href="http://Wireshark%20%EC%82%AC%EC%9A%A9%ED%8C%81-1">&lt;a title="[http://liketheocean.tistory.com/entry/Wireshark-사용팁-1]로 이동합니다." target="_blank" href="http://liketheocean.tistory.com/entry/Wireshark-%EC%82%AC%EC%9A%A9%ED%8C%81-1">Wireshark사용팁-1&lt;/a>&lt;/a>&lt;/span>에 이은 2탄 ^^&lt;/span>&lt;br>
&lt;span style="font-size: 11pt;">이 기능도 꽤나 자주 사용되는 팁이다.&lt;/span>&lt;br>
&lt;span style="font-size: 11pt;">네트워크 패킷을 잡다보면 내가 원하는 패킷만 봐야 패킷이 어떻게 오고 가는지 이해하기가 쉽니다.&lt;/span>&lt;br>
&lt;span style="font-size: 11pt;">이때 필요한 것이 필터기능이다. 필터에는 2가지가 있는데 Display Filter와 Capture Filter가 있다.&lt;/span>&lt;br>
&lt;span style="font-size: 11pt;">Display filter는 패킷을 다 잡고 원하는 패킷만 filtering해서 보여주는 것이고, Capture Filter는 패킷을 잡을때 필터링을 해서 패킷을 잡는것이다. &lt;/span>&lt;/p>
&lt;p>&lt;span style="font-size: 11pt;">이것이 Display Filter인데 만약 IP address가 192.168.0.1로 오고가는 패킷만 보고 싶으면 이것을 사용하면 된다.&lt;/span>&lt;br>
&lt;span style="font-size: 11pt;">아래 그림처럼 이 필터의 이름은 “IP address 192.168.0.1″이고 Filter string은 “ip.addr == 192.168.0.1″인데, 이름이야 어찌 됐든 이 Filter string이 중요하다. 즉 아래 보이는 형태대로 필터를 구성을 해야지 Wireshark가 알아먹는다.&lt;/span>&lt;br>
&lt;span style="font-size: 11pt;">&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile25.uf.19305E0F4BF12C5F0634C8.jpg" class="aligncenter" width="458" height="434" alt="" filename="Wireshark_4.jpg" filemime="image/jpeg" />&lt;/span>&lt;/p></description></item><item><title>Wireshark 사용팁-1</title><link>https://openmicrolab.com/wireshark-%EC%82%AC%EC%9A%A9%ED%8C%81-1/</link><pubDate>Mon, 17 May 2010 11:29:52 +0000</pubDate><guid>https://openmicrolab.com/wireshark-%EC%82%AC%EC%9A%A9%ED%8C%81-1/</guid><description>
&lt;p>지난번에 정리한 &lt;a title="[http://liketheocean.tistory.com/entry/Wireshark-사용법]로 이동합니다." target="_blank" href="http://liketheocean.tistory.com/entry/Wireshark-%EC%82%AC%EC%9A%A9%EB%B2%95">Wirreshark 사용법&lt;/a>은 기본적인 내용이고, 이번글은 Wireshark를 사용하면서 알아두면 좋은 팁을 소개한다.&lt;br>
먼저 이 툴을 사용하게되는 경우가 물론 실제 패킷이 어떻게 구성이 되는지 공부를 하려는 목적도 있지만 대부분의 경우는 네트워크를 디버깅하는 경우가 많다. 문제의 현상이 빨리 나오면 좋겠지만 그렇지 못한 경우는 패킷을 계속 잡아야 하는데, 컴퓨터의 용량때문에 장시간 패킷을 잡고 있다가 이 패킷을 Save하면 out of memory가 되면 프로그램이 죽어 버린다.&lt;br>
이때 유용한 것이 바로 잡은 패킷을 multiple save 하는 기능이다.&lt;/p></description></item></channel></rss>