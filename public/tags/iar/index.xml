<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Iar on OpenMicroLab</title><link>https://openmicrolab.com/tags/iar/</link><description>Recent content in Iar on OpenMicroLab</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Fri, 18 Feb 2011 02:32:21 +0000</lastBuildDate><atom:link href="https://openmicrolab.com/tags/iar/index.xml" rel="self" type="application/rss+xml"/><item><title>IAR 컴파일러에서 J-LINK 사용하기 2 – EWARM5.41</title><link>https://openmicrolab.com/iar-%EC%BB%B4%ED%8C%8C%EC%9D%BC%EB%9F%AC%EC%97%90%EC%84%9C-j-link-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-2-ewarm541/</link><pubDate>Fri, 18 Feb 2011 02:32:21 +0000</pubDate><guid>https://openmicrolab.com/iar-%EC%BB%B4%ED%8C%8C%EC%9D%BC%EB%9F%AC%EC%97%90%EC%84%9C-j-link-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-2-ewarm541/</guid><description>
&lt;p>이전 포스트 “&lt;A title="[http://liketheocean.tistory.com/62]로 이동합니다." href="http://liketheocean.tistory.com/62" target=_blank>IAR 컴파일러에서 J-LINK 사용하기&lt;/A>” 는 EWARM4.xx 버전에서 동작하는 것이였습니다.&lt;br>
컴파일러 버젼을 5.41로 바꿨는데, 이전 버젼에서 사용하던 메뉴들이 없어졌네요.&lt;br>
이전 버젼과 호환성을 유지를 해줘야 하는데… -_-;;&lt;br>
J-link와 연결은 되는데, “Programming flash memory” 창이 떠서 멈줘있는 현상이 있어서 다시 확인을 하니 몇가지 주의해야 할 설정이 있습니다.&lt;br>
컴파일러 옵션 설정에서&lt;/p>
&lt;UL style="LIST-STYLE-TYPE: disc">
&lt;br />
&lt;LI style="LINE-HEIGHT: 1.2">
Output Converter => intel extended
&lt;/LI>
&lt;br />
&lt;LI style="LINE-HEIGHT: 1.2">
Linker/ Config&amp;nbsp;=> icf 파일 을 제대로 설정
&lt;/LI>
&lt;br />
&lt;LI style="LINE-HEIGHT: 1.2">
Debugger / Download => board 파일을 제대로 설정&lt;/p></description></item><item><title>Migrating from version 4.x to version 5.x</title><link>https://openmicrolab.com/migrating-from-version-4x-to-version-5x/</link><pubDate>Fri, 28 Jan 2011 05:37:31 +0000</pubDate><guid>https://openmicrolab.com/migrating-from-version-4x-to-version-5x/</guid><description>
&lt;p>&lt;FONT color=#000000>&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">EWARM 4.x =&amp;gt; 5.0으로 갈아 타기위한 가이드 문서입니다.&lt;/SPAN>&lt;/SPAN>&lt;/p>
&lt;p>&lt;/FONT>&lt;a href="https://openmicrolab.com/images/1/cfile27.uf.173906564D425352191FFC.pdf" class="aligncenter" filename="EWARM_MigrationGuide.ENU.pdf" filemime="application/pdf" />cfile27.uf.173906564D425352191FFC.pdf&lt;/a>&lt;br>
&lt;FONT color=#000000>&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile5.uf.1217D7544D4254002312D1.jpg" class="aligncenter" width="680" height="614" alt="" filename="EWARM.jpg" filemime="image/jpeg" />&lt;/SPAN>&lt;/SPAN>&lt;br>
&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">소스를 그룹별로 정리를 해서 프로젝트를 만들었는데,&lt;/SPAN>&lt;/SPAN>&lt;br>
&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">-. CMSIS – ARM의 CMSIS 관련 소스&lt;/SPAN>&lt;/SPAN>&lt;br>
&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">-. EWARMv5.4 – CMSIS에서 지원하는 device 중 ST 라이브러리 소스&lt;/SPAN>&lt;/SPAN>&lt;br>
&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">   사용하는 디바이스에 맞는 소스를 넣어준다.&lt;/SPAN>&lt;/SPAN>&lt;br>
&lt;/FONT>&lt;/p>
&lt;P style="MARGIN-LEFT: 1in" class=MsoNormal>&lt;SPAN style="FONT-FAMILY: Arial; FONT-SIZE: 10pt">&lt;FONT color=#000000>&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">&amp;#8211; startup_stm32f10x_ld_vl.s: &amp;nbsp; &amp;nbsp;for STM32 Low density Value line devices&lt;/SPAN>&lt;/SPAN>&lt;br /> &lt;/FONT>&lt;/SPAN>&lt;SPAN style="FONT-FAMILY: Arial; FONT-SIZE: 10pt">&lt;FONT color=#000000>&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">&amp;#8211; startup_stm32f10x_ld.s: &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;for STM32 Low density devices&lt;/SPAN>&lt;/SPAN>&lt;br /> &lt;/FONT>&lt;/SPAN>&lt;SPAN style="FONT-FAMILY: Arial; FONT-SIZE: 10pt">&lt;FONT color=#000000>&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">&amp;#8211; startup_stm32f10x_md_vl.s: &amp;nbsp;for STM32 Medium density Value line devices&lt;/SPAN>&lt;/SPAN>&lt;br /> &lt;/FONT>&lt;/SPAN>&lt;FONT color=#000000>&lt;SPAN style="FONT-FAMILY: Arial; FONT-SIZE: 10pt">&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">&amp;#8211; startup_stm32f10x_md.s: &amp;nbsp; &amp;nbsp; &amp;nbsp;for STM32 Medium density devices &lt;/SPAN>&lt;/SPAN>&lt;br /> &lt;/SPAN>&lt;SPAN style="FONT-FAMILY: Arial; FONT-SIZE: 10pt">&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">&amp;#8211; startup_stm32f10x_hd_vl.s:&amp;nbsp;&amp;nbsp; for&amp;nbsp;STM32 High density Value line devices&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>
&lt;/FONT>&lt;FONT color=#000000>&lt;SPAN style="FONT-FAMILY: Arial; FONT-SIZE: 10pt">&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">&amp;#8211; startup_stm32f10x_hd.s: &amp;nbsp; &amp;nbsp; &amp;nbsp; for&amp;nbsp;STM32 High density devices&lt;/SPAN>&lt;/SPAN>&lt;br /> &lt;/SPAN>&lt;SPAN style="FONT-FAMILY: Arial; FONT-SIZE: 10pt">&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">&amp;#8211; startup_stm32f10x_xl.s: &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;for&amp;nbsp;STM32 XL density devices&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/FONT>&lt;FONT color=#000000>&lt;SPAN style="FONT-FAMILY: Arial; FONT-SIZE: 10pt">&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt"> &lt;/SPAN>&lt;/SPAN>&lt;br /> &lt;/SPAN>&lt;SPAN style="FONT-FAMILY: Arial; FONT-SIZE: 10pt">&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">&amp;#8211; startup_stm32f10x_cl.s: &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;for&amp;nbsp;STM32 Connectivity line devices &lt;/SPAN>&lt;/SPAN>&lt;?xml:namespace prefix = o ns = "urn:schemas-microsoft-com:office:office" />&lt;o:p>&lt;/o:p>&lt;/SPAN>&lt;/FONT>
&lt;p>&lt;FONT color=#000000>&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">-. StdPeriph_Driver –  ST에서 제공하는 페리페럴 드라이버 소스, 사용하는 드라이버 만 올리면 된다. &lt;/SPAN>&lt;/SPAN>&lt;br>
&lt;SPAN style="FONT-SIZE: 9pt">&lt;SPAN style="FONT-SIZE: 10pt">-. USER – 이건 사용자 소스&lt;/SPAN>&lt;/SPAN>&lt;br>
&lt;/FONT>&lt;/p></description></item><item><title>EWARM4.42에 STM32 디바이스 추가하기</title><link>https://openmicrolab.com/ewarm442%EC%97%90-stm32-%EB%94%94%EB%B0%94%EC%9D%B4%EC%8A%A4-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0/</link><pubDate>Tue, 04 Jan 2011 02:15:42 +0000</pubDate><guid>https://openmicrolab.com/ewarm442%EC%97%90-stm32-%EB%94%94%EB%B0%94%EC%9D%B4%EC%8A%A4-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0/</guid><description>
&lt;p>첨부 파일의 readme.txt를 확인후 해당 파일을 IAR이 설치된 폴더에 업데이트 한다.&lt;/p>
&lt;p>&lt;a href="https://openmicrolab.com/images/1/cfile24.uf.1763C5594D22813614ECBC.zip" class="aligncenter" filename="stm32f10x_update_for_ewarm4.42.zip" filemime="application/zip" /> cfile24.uf.1763C5594D22813614ECBC.zip&lt;/a>&lt;br>
그러면 다음 그림과 같이 STM32F10xx 시리즈가 추가된다.&lt;/p>
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile25.uf.116203594D22828F18C958.jpg" class="aligncenter" width="640" height="417" alt="" filename="iar_ST.jpg" filemime="image/jpeg" /></description></item><item><title>IAR 컴파일러에서 J-LINK 사용하기</title><link>https://openmicrolab.com/iar-%EC%BB%B4%ED%8C%8C%EC%9D%BC%EB%9F%AC%EC%97%90%EC%84%9C-j-link-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link><pubDate>Mon, 03 Jan 2011 10:37:09 +0000</pubDate><guid>https://openmicrolab.com/iar-%EC%BB%B4%ED%8C%8C%EC%9D%BC%EB%9F%AC%EC%97%90%EC%84%9C-j-link-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid><description>
&lt;p>먼저 segger사의 홈페이지(&lt;a href="http://www.segger.com/download_jlink.html">&lt;A title="[http://www.segger.com/download\_jlink.html]로 이동합니다." href="http://www.segger.com/download\_jlink.html" target=\_blank>http://www.segger.com/download_jlink.html&lt;/a>&lt;/A>)에서 J-LINK 관련파일을 다운 받아서 설치한다.&lt;br>
보드의 JTAG 소켓에 J-LINK의 JTAG 케이블을 연결을 하고 USB 연결을 한다.&lt;br>
ST서의 STM32의 경우 BOOT0핀이 High로 되어 있어야 한다.&lt;/p>
&lt;p>&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile28.uf.1137E6374D21A3E502945F.jpg" class="aligncenter" width="680" height="178" alt="" filename="stm32_bootmode.jpg" filemime="image/jpeg" /> 보드의 전원을 켜고 다음과 같이 컴파일러 설정을 한다.&lt;/p>
&lt;p>&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile22.uf.142210374D21A59C3DF360.jpg" class="aligncenter" width="592" height="366" alt="" filename="iar_1.jpg" filemime="image/jpeg" />&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile9.uf.162210374D21A59D3E20F1.jpg" class="aligncenter" width="590" height="363" alt="" filename="iar_2.jpg" filemime="image/jpeg" />&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile26.uf.172210374D21A59D3FF274.jpg" class="aligncenter" width="595" height="319" alt="" filename="iar_3.jpg" filemime="image/jpeg" />&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile10.uf.162210374D21A59D402932.jpg" class="aligncenter" width="596" height="327" alt="" filename="iar_4.jpg" filemime="image/jpeg" />&lt;br>
부연 설명을 하면 C-CPY 선택해주어야 Extra output 이 설정할수 있고, 여기서 simple-code로  되어야 합니다.&lt;br>
Sim 파일은 ARM의 axf 파일 같은 역할로, 디버그 정보가 포함된 이미지 파일입니다.&lt;br>
이파일이 만들어져야 브레이크 포인트나 잡을 때 레이블 값을 가지고와 소스와 같이 연계되어 볼 수 있습니다.&lt;/p></description></item></channel></rss>