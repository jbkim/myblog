<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PlatformIO on OpenMicroLab</title><link>https://openmicrolab.com/tags/platformio/</link><description>Recent content in PlatformIO on OpenMicroLab</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Thu, 18 Feb 2021 08:23:52 +0000</lastBuildDate><atom:link href="https://openmicrolab.com/tags/platformio/index.xml" rel="self" type="application/rss+xml"/><item><title>PlatformIO, Arduino에서의 핀매핑 정보</title><link>https://openmicrolab.com/platformio-arduino%EC%97%90%EC%84%9C%EC%9D%98-%ED%95%80%EB%A7%A4%ED%95%91-%EC%A0%95%EB%B3%B4/</link><pubDate>Thu, 18 Feb 2021 08:23:52 +0000</pubDate><guid>https://openmicrolab.com/platformio-arduino%EC%97%90%EC%84%9C%EC%9D%98-%ED%95%80%EB%A7%A4%ED%95%91-%EC%A0%95%EB%B3%B4/</guid><description>
&lt;p>펌웨어 개발을 할때 MCU의 I/O핀을 맵핑해서 사용을 하게 된다. 아두이노의 경우에는 실제 HW 핀 매핑을 MCU 벤더에서 제공하는 것 처럼 low level로 access하지 않고, 보드의 실크에 적혀있는 핀 번호로 access할 수 있도록 추상화를 해 놓았다. 실제로 핀 매핑이 어떻게 되는지 보려면 맥의 경우 $HOME/라이브러리/Arduino15/packages 아래에 각 플랫폼 별로 되어 있는 폴더를 확인해 봐야 한다. 예를 들면 adafruit의 경우 /packages/adafruit/hardware/nrf52/0.21.0/variants/feather_nrf52840_express/variant.h파일과 variant.cpp 파일을 확인해 보면 된다.&lt;/p>
&lt;p>PlatformIO도 아두이노와 마찬가지로 VSCode에 설치를 하면 맥에서는 $HOME/.platformio/packages 폴더 아래에 각각의 프레임워크에서 사용하는 bootloader, library들이 설치가 되어 있다.&lt;/p></description></item></channel></rss>