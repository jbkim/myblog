<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Wiz820io on OpenMicroLab</title><link>https://openmicrolab.com/tags/wiz820io/</link><description>Recent content in Wiz820io on OpenMicroLab</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Tue, 24 Jan 2012 10:18:03 +0000</lastBuildDate><atom:link href="https://openmicrolab.com/tags/wiz820io/index.xml" rel="self" type="application/rss+xml"/><item><title>Fritzing에 Wiz820io 라이브러리 공식 등록</title><link>https://openmicrolab.com/fritzing%EC%97%90-wiz820io-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EA%B3%B5%EC%8B%9D-%EB%93%B1%EB%A1%9D/</link><pubDate>Tue, 24 Jan 2012 10:18:03 +0000</pubDate><guid>https://openmicrolab.com/fritzing%EC%97%90-wiz820io-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EA%B3%B5%EC%8B%9D-%EB%93%B1%EB%A1%9D/</guid><description>
&lt;p>&lt;A title="[http://liketheocean.tistory.com/159]로 이동합니다." href="http://liketheocean.tistory.com/159" target=_blank>Fritzing &lt;/A>툴의이 최근 버젼(0.6.4)버젼부터 &lt;A title="[http://liketheocean.tistory.com/169]로 이동합니다." href="http://liketheocean.tistory.com/169" target=_blank>지난번에 제가 만든 Wiz820io&lt;/A>가 공식 라이브러리도 등록이 되었습니다.&lt;br>
이번 버젼에서 눈에 띄게 달라진 점은 part 라이브러리가 각 제조사별로 브랜딩되어 있습니다.&lt;br>
즉 Arduino, Parallax, Sparkfun등의 탭들이 생겨서 각 제조사 별로 부품을 찾을 수 있게 되어 있네요.&lt;br>
제가 만든 Wiz820io는 Core Parts에 Connection 항목에 들어가 있습니다.&lt;/p>
&lt;P style="MARGIN: 0px">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile24.uf.1353813F4F1E84A618F627.PNG" class="aligncenter" width="290" height="700" alt="" filename="Fritzing_Wiz820io.PNG" filemime="image/jpeg" />
&lt;/P></description></item><item><title>Maple mini 보드에서 Wiz820io 사용하기</title><link>https://openmicrolab.com/maple-mini-%EB%B3%B4%EB%93%9C%EC%97%90%EC%84%9C-wiz820io-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link><pubDate>Mon, 12 Dec 2011 10:00:00 +0000</pubDate><guid>https://openmicrolab.com/maple-mini-%EB%B3%B4%EB%93%9C%EC%97%90%EC%84%9C-wiz820io-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid><description>
&lt;P style="MARGIN: 0px">
&lt;A title="[http://leaflabs.com/]로 이동합니다." href="http://leaflabs.com/" target=_blank>Leaflab&lt;/A>사의 &lt;A title="[http://leaflabs.com/2011/10/wizzin-through-the-ether-net/]로 이동합니다." href="http://leaflabs.com/2011/10/wizzin-through-the-ether-net/" target=_blank>블로그&lt;/A>를 보고 Maple mini보드에 &lt;A title="[http://www.wiznet.co.kr/wiz820io]로 이동합니다." href="http://www.wiznet.co.kr/wiz820io" target=_blank>Wiz820io&lt;/A>를 연결해서 테스트를 진행했다. 브레드보드가 있으니 연결은 금방한다. 예제들이 UART3를 사용하기 때문에 아래 그림처럼 RS232 트랜시버가 달려있는 쪽보드를 사용해서 시리얼을 연결했다. &lt;br /> &lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile5.uf.195BA43E4EE5A0B1143718.jpg" class="aligncenter" width="483" height="338" alt="" filename="maple mini test.jpg" filemime="image/jpeg" />
&lt;/P>
&lt;P style="MARGIN: 0px">
&lt;STRONG>H/W 연결&lt;/STRONG>&lt;br /> Maple mini보드의 Fritzing라이브러리도 만들고&amp;#8230; 회로 연결은 아래 그림과 같다. 사실 연결할 것은 SPI 시그널과 VCC, GND 밖에 없다.&amp;nbsp;&lt;br /> &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;STRONG>Maple mini Fritzing 라이브러리:&lt;/P>&lt;br />
&lt;P style="MARGIN: 0px">
&lt;a href="https://openmicrolab.com/images/1/cfile4.uf.1460D83F4EE5A5580D181E.fzpz" class="aligncenter" filename="maple mini.fzpz" filemime="application/zip" />cfile4.uf.1460D83F4EE5A5580D181E.fzpz&lt;/a>&lt;/STRONG>&lt;br /> &lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile22.uf.135BA43E4EE5A0B316548A.PNG" class="aligncenter" width="463" height="407" alt="" filename="maple_mini_Wiz820io.PNG" filemime="image/jpeg" />&lt;STRONG>라이브러리&lt;/STRONG>&lt;br /> 아래 첨부한 파일을 Leaflab IDE의 \libraries\wizEthernet에 압축을 풀어서 넣는다.&lt;br /> 예제 파일이 telnetServer, webServer 2가지가 있는데, 제공되는 예제가 약간 문제가 있다.&lt;br /> telentServer의 경우 password를 칠때는 문제가 없지만 다른 경우에 매 문자마다 echo back를 해서 이것을 수정을 했고, webServer의 경우 브라우져에서 favicon을 요청시 처리를 위해 &amp;#8220;HTTP/1.1 404 Not Found&amp;#8221; 페이지를 돌려주기 위한 코드를 추가 했다.&amp;nbsp;&lt;br /> &lt;STRONG>&amp;nbsp;&amp;nbsp;&amp;nbsp;wizEthernet 라이브러리:&amp;nbsp;&lt;/P>&lt;br />
&lt;pre>&lt;code>&amp;lt;P style=&amp;quot;MARGIN: 0px&amp;quot;&amp;gt;
&amp;lt;a href=&amp;quot;/images/1/cfile29.uf.175DF13F4EE5A4850D2B13.zip&amp;quot; class=&amp;quot;aligncenter&amp;quot; filename=&amp;quot;wizEthernet.zip&amp;quot; filemime=&amp;quot;application/zip&amp;quot; /&amp;gt;cfile29.uf.175DF13F4EE5A4850D2B13.zip&amp;lt;/a&amp;gt;
&amp;lt;/P&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;P style=&amp;quot;MARGIN: 0px&amp;quot;&amp;gt;
&amp;lt;/STRONG&amp;gt;&amp;lt;br /&amp;gt; &amp;lt;STRONG&amp;gt;&amp;amp;nbsp; 수정된 예제 파일: &amp;lt;/P&amp;gt;&amp;lt;br /&amp;gt;
&amp;lt;P style=&amp;quot;MARGIN: 0px&amp;quot;&amp;gt;
&amp;lt;a href=&amp;quot;/images/1/cfile3.uf.172F71414EE5A4430F27EA.pde&amp;quot; class=&amp;quot;aligncenter&amp;quot; filename=&amp;quot;telnetserver.pde&amp;quot; filemime=&amp;quot;text/x-c; charset=us-ascii&amp;quot; /&amp;gt;cfile3.uf.172F71414EE5A4430F27EA.pde&amp;lt;/a&amp;gt;
&amp;lt;/P&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;P style=&amp;quot;MARGIN: 0px&amp;quot;&amp;gt;
&amp;lt;a href=&amp;quot;/images/1/cfile27.uf.17335D414EE5A4542CA563.pde&amp;quot; class=&amp;quot;aligncenter&amp;quot; filename=&amp;quot;webserver.pde&amp;quot; filemime=&amp;quot;text/x-c; charset=us-ascii&amp;quot; /&amp;gt;cfile27.uf.17335D414EE5A4542CA563.pde&amp;lt;/a&amp;gt;
&amp;lt;/P&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;P style=&amp;quot;MARGIN: 0px&amp;quot;&amp;gt;
&amp;lt;br /&amp;gt; &amp;lt;/STRONG&amp;gt;&amp;lt;br /&amp;gt; 혹시 컴파일후 보드에 다운로그가 문제가 있을 경우, 이전 포스트를 참고(&amp;lt;A title=&amp;quot;[http://liketheocean.tistory.com/174]로 이동합니다.&amp;quot; href=&amp;quot;http://liketheocean.tistory.com/174&amp;quot; target=_blank&amp;gt;LeafLabs의 Maple mini, Maple Ret 5 보드 사용기&amp;lt;/A&amp;gt;)
&amp;lt;/P&amp;gt;&amp;lt;/p&amp;gt;
&lt;/code>&lt;/pre></description></item><item><title>아두이노 보드에서 W5200 사용하기</title><link>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8-%EB%B3%B4%EB%93%9C%EC%97%90%EC%84%9C-w5200-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link><pubDate>Mon, 12 Dec 2011 09:59:33 +0000</pubDate><guid>https://openmicrolab.com/%EC%95%84%EB%91%90%EC%9D%B4%EB%85%B8-%EB%B3%B4%EB%93%9C%EC%97%90%EC%84%9C-w5200-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid><description>
&lt;p>아두이노의 공식 Ethernet 쉴드에는 &lt;A title="[http://wiznet.co.kr]로 이동합니다." href="http://wiznet.co.kr/" target=_blank>Wiznet&lt;/A>의 &lt;A title="[http://www.wiznet.co.kr/w5100]로 이동합니다." href="http://www.wiznet.co.kr/w5100" target=_blank>W5100&lt;/A>이 사용된다. 따라서 모든 Ethernet 라이브러리는 &lt;A title="[http://www.wiznet.co.kr/w5100]로 이동합니다." href="" target=_blank>W5100&lt;/A>을 이용하는 것으로 되어있는데 &lt;A title="[http://wiznet.co.kr]로 이동합니다." href="" target=_blank>Wiznet&lt;/A>의 신규칩인 &lt;A title="[http://www.wiznet.co.kr/w5200]로 이동합니다." href="http://www.wiznet.co.kr/w5200" target=_blank>W5200&lt;/A>을 아두이노 보드에서 사용하기 위해서는 라이브러리를 일부 수정을 해야 한다. &lt;A title="[http://www.wiznet.co.kr/w5100]로 이동합니다." href="" target=_blank>W5100&lt;/A>과 비교해서 &lt;A title="[http://www.wiznet.co.kr/w5200]로 이동합니다." href="" target=_blank>W5200&lt;/A>의 장점은 대략 작은 패키지, 8 socket 지원(W5100의 경우 4 socket 지원), Power down mode, Wake on LAN 기능 지원 등이다. &lt;br>
**    W5100 to W5200 migration guide&lt;/P>&lt;/p>
&lt;DIV style="TEXT-ALIGN: center">
&lt;br />
&lt;P style="MARGIN: 0px">
&lt;a href="https://openmicrolab.com/images/1/cfile3.uf.1221F0404EE59A7B11507B.pdf" class="aligncenter" filename="w5100_w5200_migration guide.pdf" filemime="application/pdf" />cfile3.uf.1221F0404EE59A7B11507B.pdf&lt;/a>
&lt;/P>&lt;/STRONG>
&lt;/DIV>
&lt;p>&lt;strong>Hardware 연결&lt;/strong>&lt;br>
간단한 테스트를 위해 &lt;A title="[http://www.wiznet.co.kr/wiz820io]로 이동합니다." href="http://www.wiznet.co.kr/wiz820io" target=_blank>Wiz820io&lt;/A>를 사용을 해서 아래 그림처럼 테스트를 했다. 아래 그림은 Fritzing 이라는 툴로 &lt;A title="[http://www.wiznet.co.kr/wiz820io]로 이동합니다." href="" target=_blank>Wiz820io &lt;/A>라이브러리를 만든 후 작성한 연결도이다. Fritzing관련해서는 이전 포스트 참고(&lt;A title="[http://liketheocean.tistory.com/159]로 이동합니다." href="http://liketheocean.tistory.com/159" target=_blank>Fritzing&lt;/A>, &lt;A title="[http://liketheocean.tistory.com/169]로 이동합니다." href="http://liketheocean.tistory.com/169" target=_blank>Fritzing 라이브러리 만들기&lt;/A>)&lt;br>
&lt;strong>    Wiz820io의 Fritzing 라이브러리&lt;/strong>&lt;/p></description></item><item><title>Fritzing 라이브러리 만들기</title><link>https://openmicrolab.com/fritzing-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link><pubDate>Fri, 04 Nov 2011 11:53:09 +0000</pubDate><guid>https://openmicrolab.com/fritzing-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid><description>
&lt;p>Frtizing이라는 툴을 지난번에 소개한 적이 있다.  &lt;a title="[http://liketheocean.tistory.com/159]로 이동합니다." href="http://liketheocean.tistory.com/159" target="_blank" rel="noopener">독일의 오픈 소스툴&lt;/a>&lt;br>
이 툴을 직접 사용을 해봤는데, 실제 피지컬한 보드를 가지고 설계를 하는 듯한 느낌이 있고 이것을 다시 회로로 변환을 해주는 것이 흥미롭다. 전자공학을 하는 초보자들에게는 좋은 툴인 동시에 이미 많이 개발된 파트 라이브러리 덕에 문서 작업에 유용하게 쓰일 수 있다.&lt;br>
이미 아두이노, 아두이노 이더넷 쉴드, Xbee, mbed…등등의 파트들이 제작이 되어 있다.&lt;/p>
&lt;p style="margin: 0px;">
&lt;p style="margin: 0px;">
&lt;img loading="lazy" class="aligncenter" src="https://openmicrolab.com/images/1/cfile22.uf.1357A9424EB3D30434EFCF.PNG" alt="" width="683" height="575" />
&lt;/p>
&lt;p>
자신만의 라이브러리를 만들여면 이미지 작업을 해야하는데, 이미 만들어 놓은 라이브러리를 수정해서 사용하면 좀 편하다. 이미지 파일은 벡터기반의 SVG포맷으로 만들어야 한다. 따라서 오픈 소스 툴인 &lt;a title="[http://inkscape.org/]로 이동합니다." href="http://inkscape.org/" target="_blank" rel="noopener">InkScape&lt;/a>를 사용하던지 상용툴인 어도비사의 일러스트레이터를 사용해야 한다. 구체적인 정보: &lt;a href="http://fritzing.org/learning/tutorials/creating-custom-parts/">http://fritzing.org/learning/tutorials/creating-custom-parts/&lt;/a>
&lt;/p></description></item><item><title>STM8S-DISCOVERY 보드와 WIZ820io의 연결</title><link>https://openmicrolab.com/stm8s-discovery-%EB%B3%B4%EB%93%9C%EC%99%80-wiz820io%EC%9D%98-%EC%97%B0%EA%B2%B0/</link><pubDate>Fri, 04 Nov 2011 11:18:34 +0000</pubDate><guid>https://openmicrolab.com/stm8s-discovery-%EB%B3%B4%EB%93%9C%EC%99%80-wiz820io%EC%9D%98-%EC%97%B0%EA%B2%B0/</guid><description>
&lt;p>ST마이크로의 8비트 MCU EVB인 STM8S-Discovery 보드에 Wiznet의 WIZ820io를 SPI로 연결하여 테스트를 해보았다.&lt;/p>
&lt;p style="margin: 0px;">
&lt;img loading="lazy" class="aligncenter" src="https://openmicrolab.com/images/1/cfile2.uf.193F25424EB3C8CB2DBE49.jpg" alt="" width="413" height="298" />
&lt;/p>
&lt;p>STM8S-DISCOVERY 관련자료 : &lt;a href="http://www.st.com/internet/evalboard/product/247087.jsp">http://www.st.com/internet/evalboard/product/247087.jsp&lt;/a>&lt;br>
STM8S-DISCOVERY보드의 메뉴얼;&lt;/p>
&lt;p style="margin: 0px;">
&lt;a class="aligncenter" href="https://openmicrolab.com/images/1/cfile7.uf.185721394EB3C4731FDE54.pdf">cfile7.uf.185721394EB3C4731FDE54.pdf&lt;/a>WIZ820io 관련 자료 : &lt;a href="http://www.wiznet.co.kr/wiz820io">http://www.wiznet.co.kr/wiz820io&lt;/a>
&lt;/p>
&lt;p>&lt;strong>1. 하드웨어 연결&lt;/strong>&lt;br>
SPI 신호들은 CN1, CN2에 나와 있는 SPI 신호에 연결하고, nSS, nINT, nRESET, PWDN 신호들은 각각 STM8S의 GPIOs(PA4, PA5, PA3 and PA6)에 연결이 된다.&lt;/p>
&lt;p style="margin: 0px;">
&lt;img loading="lazy" class="aligncenter" src="https://openmicrolab.com/images/1/cfile25.uf.170ABB3C4EB3C578357278.png" alt="" width="449" height="357" />
&lt;/p>
&lt;p>**2. Firmware&lt;br>
** 컴파일러는 &lt;a title="[http://www.cosmic-software.com/]로 이동합니다." href="http://www.cosmic-software.com/" target="_blank" rel="noopener noreferrer">Cosmic&lt;/a>사의 &lt;a title="[http://www.cosmic-software.com/stm8.php]로 이동합니다." href="http://www.cosmic-software.com/stm8.php" target="_blank" rel="noopener noreferrer">CXSTM8 compiler&lt;/a>와 ST 홈페이지에서 다운로드 받을 수 있는 STVD를 사용한다. CXSTM8 compiler는 등록을 하면 일정기간 사용이 가능하다.&lt;/p></description></item><item><title>임베디드 보드에서 트위터하기</title><link>https://openmicrolab.com/%EC%9E%84%EB%B2%A0%EB%94%94%EB%93%9C-%EB%B3%B4%EB%93%9C%EC%97%90%EC%84%9C-%ED%8A%B8%EC%9C%84%ED%84%B0%ED%95%98%EA%B8%B0/</link><pubDate>Thu, 15 Sep 2011 12:32:02 +0000</pubDate><guid>https://openmicrolab.com/%EC%9E%84%EB%B2%A0%EB%94%94%EB%93%9C-%EB%B3%B4%EB%93%9C%EC%97%90%EC%84%9C-%ED%8A%B8%EC%9C%84%ED%84%B0%ED%95%98%EA%B8%B0/</guid><description>
&lt;p>이 블로그 포스트는 Twitter API Proxy 서비스인 supertweet.net를 이용해서 PC나 스마트폰이 아닌 임베디드 보드에서 트위터 메시지를 보내는 방법을 설명한다.&lt;br>
참조 사이트:mbed의 &lt;A title="[http://mbed.org/cookbook/SuperTweet]로 이동합니다." href="http://mbed.org/cookbook/SuperTweet" target=_blank>post to Twitter via SuperTweet &lt;/A>&lt;/p>
&lt;p>먼저 트위터 아이디가 필요한데, 테스트를 위해 twitter.com 에서 ID를 하나 만들었다. EspressoDopio2. 참고로 내 트위터 아이디는 EspressoDopio&lt;/p>
&lt;p>&lt;A title="[http://www.supertweet.net/]로 이동합니다." href="http://www.supertweet.net/" target=_blank>Supertweet.net&lt;/A> 에 접속해서 docoment link에 가면 3가지 step으로 설명을 해 놓고 있다.&lt;/p>
&lt;ol>
&lt;li>Sign UP/ Sign in now를 클릭해서 MyAuthAPIProxy가 계정 사용을 승인하도록 한다.&lt;/li>
&lt;li>Basic Auth를 위한 패스워드를 설정한다. 이 password는 패스워드와 다르게 설정함.&lt;br>
이 설정이 되면 다음과 같이 Username이 나타다고 Secret 밑에 Show 를 클릭하면 내가 정한 password가 나타난다.&lt;/li>
&lt;/ol>
&lt;P style="MARGIN: 0px">
&lt;img loading="lazy" src="https://openmicrolab.com/images/1/cfile29.uf.167B64414E71EC861C6440.PNG" class="aligncenter" width="683" height="93" alt="" filename="twitter2.PNG" filemime="image/jpeg" />
&lt;/P>
&lt;p>3. 이젠 임베디드 보드에서 트위터 메시지를 보내면 되는데, Twitter.com 대신에  &lt;a href="http://api.supertweet.net/">http://api.supertweet.net&lt;/a> 로 보내면 된다.&lt;br>
구체적인 방법은 &lt;a href="http://www.supertweet.net/about/api">http://www.supertweet.net/about/api&lt;/a> 링크를 확인하면 되는데, 간단히 메시지 post하는 것을 설명하면…&lt;/p></description></item></channel></rss>