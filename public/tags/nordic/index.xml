<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nordic on OpenMicroLab</title><link>https://openmicrolab.com/tags/nordic/</link><description>Recent content in Nordic on OpenMicroLab</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Mon, 01 Jun 2020 09:14:20 +0000</lastBuildDate><atom:link href="https://openmicrolab.com/tags/nordic/index.xml" rel="self" type="application/rss+xml"/><item><title>SES(Segger Embedded Studio)에서 NRF_LOG_INFO 문제</title><link>https://openmicrolab.com/sessegger-embedded-studio%EC%97%90%EC%84%9C-nrf_log_info-%EB%AC%B8%EC%A0%9C/</link><pubDate>Mon, 01 Jun 2020 09:14:20 +0000</pubDate><guid>https://openmicrolab.com/sessegger-embedded-studio%EC%97%90%EC%84%9C-nrf_log_info-%EB%AC%B8%EC%A0%9C/</guid><description>
&lt;p>SES환경에서 NRF_LOG_INFO(“Blinky example started!!!”)와 같은 같은 디버그 문구가 Debug Terminal에 보이지 않는 이슈 해결 방법&lt;/p>
&lt;p>sdk_config.h 파일에서 다음과 같이 기존에 1로 설정되어 있던 값을 0 으로 수정한다.&lt;/p>
&lt;p>```#define NRF_LOG_DEFERRED 0&lt;code> &lt;/code>#define NRF_FPRINTF_FLAG_AUTOMATIC_CR_ON_LF_ENABLED 0`&lt;/p>
&lt;p>&lt;code>#define NRF_LOG_BACKEND_RTT_ENABLED 1&lt;/code>&lt;br>
&lt;code>#define NRF_LOG_ENABLED 1&lt;/code>&lt;br>
이 설정도 되어 있어야 함.&lt;/p>
&lt;p>그런데 다음 설정은 0으로 되야 함&lt;br>
&lt;code>#define NRF_LOG_BACKEND_UART_ENABLED 0&lt;/code>&lt;/p>
&lt;p>그리고 보드가 바뀌면 아래 핀 설정도 같이 해야 함.&lt;br>
&lt;code>#define NRF_LOG_BACKEND_UART_TX_PIN 6&lt;/code>&lt;/p></description></item><item><title>Mac OSX에 nRF52 개발 환경 설정하기</title><link>https://openmicrolab.com/mac-osx%EC%97%90-nrf52-%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0/</link><pubDate>Sun, 11 Aug 2019 13:02:07 +0000</pubDate><guid>https://openmicrolab.com/mac-osx%EC%97%90-nrf52-%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0/</guid><description>
&lt;p>2년전에 작업한 Mac OS X에 &lt;a href="http://openmicrolab.com/mac-os-x%ec%97%90-nrf51-%ea%b0%9c%eb%b0%9c-%ed%99%98%ea%b2%bd-%ec%84%a4%ec%a0%95%ed%95%98%ea%b8%b0/" target="_blank" rel="noopener">nRF51 개발 환경 설정하기 포스팅&lt;/a>을 보면서 nRF52 환경을 설정하다가 달라진 점이 있어서 다시 쓰게된 포스팅.&lt;/p>
&lt;p>개념은 다음과 같다. 1) gcc 와 툴체인 설치 2) OSX용 nRF5x Command Line Tools 설치 3) SDK 설치.  이 과정에서 gcc 실행파일 위치를 bash_profile에 입력하고, SDK의 gcc 컴파일 설정을 이에 맞게 하면 된다.&lt;/p>
&lt;h3 id="gcc-와-툴체인-설치">gcc 와 툴체인 설치&lt;/h3>
&lt;p>여기에서 최신 버전 &lt;a href="https://developer.arm.com/tools-and-software/open-source-software/developer-tools/gnu-toolchain/gnu-rm/downloads" target="_blank" rel="noopener">다운로드&lt;/a> 및 다음과 같이 압축을 푼다. 설치 위치는 크게 중요하지 않다. 만약 이전에 설치를 했을 경우 ~/usr/local/bin 아래 설치를 했을 수도 있음.&lt;/p></description></item><item><title>Jlink를 사용한 nRF51 flashing</title><link>https://openmicrolab.com/jlink%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-nrf51-flashing/</link><pubDate>Wed, 15 Feb 2017 03:21:29 +0000</pubDate><guid>https://openmicrolab.com/jlink%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-nrf51-flashing/</guid><description>
&lt;p>지난번 &lt;a href="http://openmicrolab.com/mac-os-x%EC%97%90-nrf51-%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0/" target="_blank">nRF51개발 환경 포스팅&lt;/a>에 빠진 부분인 flashing 부분&lt;/p>
&lt;p>&lt;strong>nrfjprog – Programming Tool&lt;/strong>&lt;/p>
&lt;p>nrfjprog는 nRF5x-Command-Line-Tools의 번들 프로그램으로 SWD를 이용해 펌웨어 이미지를 로딩한다.&lt;/p>
&lt;p>&lt;strong>nrfjprog:&lt;/strong>&lt;/p>
&lt;pre class="prettyprint prettyprinted">&lt;code>&amp;lt;span class="com">/* Optional: erase target if not already blank */&amp;lt;/span>
&amp;lt;span class="pln">nrfjprog &amp;lt;/span>&amp;lt;span class="pun">--&amp;lt;/span>&amp;lt;span class="pln">family &amp;lt;/span>&amp;lt;span class="pun">&amp;lt;&amp;lt;/span>&amp;lt;span class="pln">nRF51&amp;lt;/span>&amp;lt;span class="pun">/&amp;lt;/span>&amp;lt;span class="lit">52&amp;lt;/span>&amp;lt;span class="pun">&amp;gt;&amp;lt;/span> &amp;lt;span class="pun">-&amp;lt;/span>&amp;lt;span class="pln">e
&amp;lt;/span>&amp;lt;span class="com">/* Load FW image to target */&amp;lt;/span>
&amp;lt;span class="pln">nrfjprog &amp;lt;/span>&amp;lt;span class="pun">--&amp;lt;/span>&amp;lt;span class="pln">family &amp;lt;/span>&amp;lt;span class="pun">&amp;lt;&amp;lt;/span>&amp;lt;span class="pln">nRF51&amp;lt;/span>&amp;lt;span class="pun">/&amp;lt;/span>&amp;lt;span class="lit">52&amp;lt;/span>&amp;lt;span class="pun">&amp;gt;&amp;lt;/span> &amp;lt;span class="pun">--&amp;lt;/span>&amp;lt;span class="pln">program _build&amp;lt;/span>&amp;lt;span class="pun">/&amp;lt;&amp;lt;/span>&amp;lt;span class="pln">name&amp;lt;/span>&amp;lt;span class="pun">&amp;gt;.&amp;lt;/span>&amp;lt;span class="pln">hex
&amp;lt;/span>&amp;lt;span class="com">/* Reset and run */&amp;lt;/span>
&amp;lt;span class="pln">nrfjprog &amp;lt;/span>&amp;lt;span class="pun">--&amp;lt;/span>&amp;lt;span class="pln">family &amp;lt;/span>&amp;lt;span class="pun">&amp;lt;&amp;lt;/span>&amp;lt;span class="pln">nRF51&amp;lt;/span>&amp;lt;span class="pun">/&amp;lt;/span>&amp;lt;span class="lit">52&amp;lt;/span>&amp;lt;span class="pun">&amp;gt;&amp;lt;/span> &amp;lt;span class="pun">-&amp;lt;/span>&amp;lt;span class="pln">r&amp;lt;/span>&lt;/code>&lt;/pre>
&lt;p>&lt;strong>JlinkExe:&lt;/strong>&lt;/p>
&lt;pre class="prettyprint prettyprinted">&lt;code>&amp;lt;span class="com">/* Open Jlink Commander from terminal in _build directory */&amp;lt;/span>
&amp;lt;span class="typ">JLinkExe&amp;lt;/span> &amp;lt;span class="pun">-&amp;lt;/span>&amp;lt;span class="pln">device &amp;lt;/span>&amp;lt;span class="pun">&amp;lt;&amp;lt;/span>&amp;lt;span class="pln">nRF51&amp;lt;/span>&amp;lt;span class="pun">/&amp;lt;/span>&amp;lt;span class="pln">nRF52&amp;lt;/span>&amp;lt;span class="pun">&amp;gt;&amp;lt;/span>
&amp;lt;span class="pun">&amp;gt;&amp;lt;/span>&amp;lt;span class="pln"> erase &amp;lt;/span>&amp;lt;span class="com">// Optional: erase target if not already blank&amp;lt;/span>
&amp;lt;span class="pun">&amp;gt;&amp;lt;/span>&amp;lt;span class="pln"> loadfile &amp;lt;/span>&amp;lt;span class="str">&amp;lt;name&amp;gt;&amp;lt;/span>&amp;lt;span class="pun">.&amp;lt;/span>&amp;lt;span class="pln">hex &amp;lt;/span>&amp;lt;span class="com">// loads FW&amp;lt;/span>
&amp;lt;span class="pun">&amp;gt;&amp;lt;/span>&amp;lt;span class="pln"> r &amp;lt;/span>&amp;lt;span class="com">// Reset and halt&amp;lt;/span>
&amp;lt;span class="pun">&amp;gt;&amp;lt;/span>&amp;lt;span class="pln"> g &amp;lt;/span>&amp;lt;span class="com">// Run&amp;lt;/span>
&amp;lt;span class="pun">&amp;gt;&amp;lt;/span>&amp;lt;span class="pln"> q &amp;lt;/span>&amp;lt;span class="com">// Exit&amp;lt;/span>&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p class="p1">
&lt;span class="s1">JlinkExe -device nrf51822_xxaa -if swd -speed 4000&lt;/span>
&lt;/p></description></item><item><title>Mac OS X에 nRF51 개발 환경 설정하기</title><link>https://openmicrolab.com/mac-os-x%EC%97%90-nrf51-%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0/</link><pubDate>Mon, 02 Jan 2017 13:26:38 +0000</pubDate><guid>https://openmicrolab.com/mac-os-x%EC%97%90-nrf51-%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0/</guid><description>
&lt;p>&lt;strong>1. gcc 설치&lt;/strong>&lt;br>
&lt;a href="https://launchpad.net/gcc-arm-embedded/+download" target="_blank" rel="noopener">여기&lt;/a>에서 다운로드 한다.&lt;/p>
&lt;blockquote>
&lt;p>$ mkdir /usr/local/gcc-arm&lt;br>
$ tar -xjf gcc-arm-none-eabi-5_4-2016q3-20160926-mac.tar.bz2 -C /usr/local/gcc-arm&lt;/p>&lt;/blockquote>
&lt;p>&lt;strong>2. nRF5x-Command-Line-Tools-OSX&lt;/strong>&lt;br>
&lt;a href="http://www.nordicsemi.com/eng/Products/Bluetooth-low-energy/nRF51822" target="_blank" rel="noopener">여기&lt;/a>에서 다운로드 한다.&lt;br>
/usr/local/ 에 nrfjprog와 mergehex를 copy한다.&lt;/p>
&lt;p>&lt;strong>3. .bash_profile 수정&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>export PATH=/usr/local/bin:/usr/local/sbin:/usr/local/nrfjprog:$PATH&lt;/p>&lt;/blockquote>
&lt;p>&lt;strong>4. Segger Software and documentation pack for Mac OS X 설치&lt;/strong>&lt;br>
&lt;a href="https://www.segger.com/jlink-software.html" target="_blank" rel="noopener">여기&lt;/a>에 패키지 파일이 있다.&lt;/p>
&lt;p>&lt;strong>5. SDK설치 및 Makefile.posix 파일 수정&lt;/strong>&lt;br>
&lt;a href="http://www.nordicsemi.com/eng/Products/Bluetooth-low-energy/nRF51822" target="_blank" rel="noopener">여기&lt;/a> 또는 &lt;a href="http://developer.nordicsemi.com/" target="_blank" rel="noopener">여기&lt;/a>에서 SDK를 다운로드 해서 원하는 곳에서 압축을 푼다.&lt;br>
components/toolchain/gcc/Makefile.posix 이 파일을 gcc 버전에 맞게 수정한다.&lt;/p>
&lt;blockquote>
&lt;p>GNU_INSTALL_ROOT := /usr/local/gcc-arm/gcc-arm-none-eabi-5_4-2016q3&lt;br>
GNU_VERSION := 5.4.1&lt;br>
GNU_PREFIX := arm-none-eabi&lt;/p></description></item></channel></rss>