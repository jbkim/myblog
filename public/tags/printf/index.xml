<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Printf on OpenMicroLab</title><link>https://openmicrolab.com/tags/printf/</link><description>Recent content in Printf on OpenMicroLab</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Thu, 26 Apr 2018 11:06:33 +0000</lastBuildDate><atom:link href="https://openmicrolab.com/tags/printf/index.xml" rel="self" type="application/rss+xml"/><item><title>Nucleo 보드에서의 printf</title><link>https://openmicrolab.com/nucleo-%EB%B3%B4%EB%93%9C%EC%97%90%EC%84%9C%EC%9D%98-printf/</link><pubDate>Thu, 26 Apr 2018 11:06:33 +0000</pubDate><guid>https://openmicrolab.com/nucleo-%EB%B3%B4%EB%93%9C%EC%97%90%EC%84%9C%EC%9D%98-printf/</guid><description>
&lt;img loading="lazy" class="alignnone wp-image-4290" src="https://res.cloudinary.com/openmicrolab/image/upload/v1524740338/IMG_6522_autbwr.jpg" width="361" height="361" />
&lt;p>임베디드 보드에서의 Hello World인 blink 테스트를 끝나면 printf를 찍기위해 UART를 연결하고 테스트를 한다. Nucleo 보드에서도 마찬가지로 작업을 하는데, 회로도를 보면 아두이노 핀 호환 컨넥터의 TX, RX핀에 연결이 되어있다. 하지만 자세히 회로도를 보면 default 연결은 이 핀들이 아니라 ST-Link칩에 연결이 되어 있다. 즉 UART2의 경우 ST-Link를 통해서 USB 컨넥터에 연결이되고 virtual COM port로 잡힌다. 매뉴얼에 보면 다음과 같이 나온다.&lt;/p>
&lt;blockquote>
&lt;p>The USART2 interface available on PA2 and PA3 of the STM32 microcontroller can be connected to ST-LINK MCU, ST morpho connector or to Arduino connector. The choice can be changed by setting the related solder bridges. By default the USART2 communication between the target STM32 and ST-LINK MCU is enabled, in order to support virtual COM port for MbedTM (SB13 and SB14 ON, SB62 and SB63 OFF). If the communication between the target STM32 PA2 (D1) or PA3 (D0) and shield or extension board is required, SB62 and SB63 should be ON, SB13 and SB14 should be OFF. In such case it is possible to connect another USART to ST-LINK MCU using flying wires between ST morpho connector and CN3.&lt;/p></description></item><item><title>SDCC putchar 버그 수정</title><link>https://openmicrolab.com/sdcc-putchar-%EB%B2%84%EA%B7%B8-%EC%88%98%EC%A0%95/</link><pubDate>Wed, 01 Jun 2011 08:13:29 +0000</pubDate><guid>https://openmicrolab.com/sdcc-putchar-%EB%B2%84%EA%B7%B8-%EC%88%98%EC%A0%95/</guid><description>
&lt;p>지난번 포스팅때 &lt;A title="[http://liketheocean.tistory.com/83]로 이동합니다." href="http://liketheocean.tistory.com/83" target=_blank>8051 무료 컴파일러인 SDCC&lt;/A>를 소개했었고, 이를 이용해서 &lt;A title="[http://liketheocean.tistory.com/84]로 이동합니다." href="http://liketheocean.tistory.com/84" target=_blank>W7100 TCP loopback 코드까지 &lt;/A>만들어 봤었다.&lt;br>
이미 그때도 printf가 잘 안되어서 이상하다고 했었는데, 이번에 telnet 코드를 포팅하면서 문제를 해결했다.&lt;br>
문제는 SDCC 컴파일러가 제대로 C 코드를 ASM으로 변환을 해주지 못하는게 원인… 역시 무료 컴파일러라서 그런가???&lt;/p>
&lt;DIV style="BORDER-BOTTOM: #c1c1c1 1px dashed; BORDER-LEFT: #c1c1c1 1px dashed; PADDING-BOTTOM: 10px; BACKGROUND-COLOR: #eeeeee; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; BORDER-TOP: #c1c1c1 1px dashed; BORDER-RIGHT: #c1c1c1 1px dashed; PADDING-TOP: 10px" class=txc-textbox>void putchar (char c)&amp;nbsp;
{
&amp;nbsp; SBUF = c;
&amp;nbsp; while(!TI);
&amp;nbsp; TI = 0;
}
&lt;/DIV>
위&amp;nbsp;putchar 함수가 어셈으로 변환된 코드를 보니 TI = 0 을 CLR TI 로 변환을 하지 않네요.
그래서 다음과 같이 inline assembler를 사용해서 수정을 하니 잘 동작을 합니다.
&lt;DIV style="BORDER-BOTTOM: #c1c1c1 1px dashed; BORDER-LEFT: #c1c1c1 1px dashed; PADDING-BOTTOM: 10px; BACKGROUND-COLOR: #eeeeee; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; BORDER-TOP: #c1c1c1 1px dashed; BORDER-RIGHT: #c1c1c1 1px dashed; PADDING-TOP: 10px" class=txc-textbox>void putchar (char c)&amp;nbsp;
{
&amp;nbsp;SBUF = c;
&amp;nbsp;while(!TI);
&lt;FONT color=#e31600>__asm&amp;nbsp;
&amp;nbsp;clr TI
__endasm;
&lt;/FONT>}
&lt;/DIV>
W7100A에 telnet server code를 SDCC로 포팅한 코드로 첨부.
&lt;P style="MARGIN: 0px">
&lt;a href="https://openmicrolab.com/images/1/cfile29.uf.181ED1344DE5F44423398E.zip" class="aligncenter" filename="telnet_sdcc.zip" filemime="application/zip" />cfile29.uf.181ED1344DE5F44423398E.zip&lt;/a>
&lt;/P></description></item></channel></rss>